{"version":3,"sources":["hooks/useRefresh.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","hooks/useApprove.ts","config/constants/nfts.ts","config/constants/endpoints.ts","config/constants/farms.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/bscscan.ts","components/UnlockButton.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","utils/wallet.ts","components/Tags.tsx","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/formatBalance.ts","hooks/useTokenBalance.ts","utils/collectibles.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/apr.ts","components/TokenPairImage/index.tsx","utils/bigNumber.ts","hooks/useUnstake.ts","hooks/useLastUpdated.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","hooks/useHarvest.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","views/Farms/components/Divider.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","config/index.ts","hooks/usePersistState.ts","config/constants/tokens.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/settings.ts","utils/contractHelpers.ts","utils/farmHelpers.ts","config/constants/types.ts","state/hooks.ts","components/Balance.tsx","components/layout/Flex.tsx","hooks/price.ts","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","components/ModalInput/ModalInput.tsx","hooks/useContract.ts","views/Pools/helpers.tsx","hooks/useWeb3.ts","utils/multicall.ts","state/index.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/web3.ts","hooks/useToast.ts","state/types.ts","config/constants/pools.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useEagerConnect.ts","views/Farms/Redirects.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","utils/index.ts","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/Stake.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","state/block/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/assets/pool-dark.svg","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/components/assets/pool-light.svg","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useTheme.ts","utils/compoundApyHelpers.ts"],"names":["useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","profileApi","process","REACT_APP_API_PROFILE","getUsername","address","a","fetch","response","ok","json","username","getProfile","methods","hasRegistered","call","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","initialState","isInitialized","isLoading","data","profileSlice","createSlice","name","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","addPoints","actions","fetchProfile","dispatch","teamsList","reduce","accum","id","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","teams","useApprove","lpContract","contractAddress","account","useWeb3React","onApprove","useCallback","approve","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","useAppDispatch","sousChefContract","useSousChef","handleApprove","tx","updateUserAllowance","symbol","console","error","message","useSousApproveWithAmount","stakingAmount","approveWithAmount","toString","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","56","97","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","ARCHIVED_NODE","farms","pid","lpSymbol","lpAddresses","stakingAddresses","token","tokens","srkb","pairToken","wbnb","quoteToken","own","kgo","kclp","busd","sfuel","isPromoted","liquidityUrl","PANCAKE_ADD_LIQUIDITY_URL","infoURL","CAKE_INFO_URL","tipsy","gzila","flash","bhc","hps","priceHelperLps","fetchFarm","farm","lpAddress","getAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpStakingCalls","lpStaking","totalSupply","periodFinish","rewardRate","totalDeposits","totalRewardRate","times","endDate","Date","setUTCSeconds","hasEnded","now","remainingDays","Math","max","ceil","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","getFarmFromTokenSymbol","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","lpStakingAbi","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","setLoadArchivedFarmsData","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","fullWidth","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","getItem","walletconnect","close","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","log","request","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","image","tokenAdded","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","alt","background","textColor","users","MAINNET_CHAIN_ID","getCakeAddress","cake","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","i","push","multicallv2","profileABI","teamData","onChainTeamData","toNumber","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","campaigns","title","badge","campaignMap","Map","campaign","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pageMeta","path","getCustomMeta","useLocation","pathname","property","content","Page","children","getDecimalAmount","amount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","undefined","FetchStatus","useTokenAllowance","allowedAddress","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","contract","getBep20Contract","res","prev","fetchBalance","useGetBnbBalance","setBalance","web3","useWeb3","eth","getBalance","walletBalance","refresh","useTokenBalance","balanceOf","getIdentifierKeyFromAddress","nftSource","Object","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmV2Apr","LPTokenPrice","EPOCH_PER_YEAR","getFarmApr","cakePriceUsd","poolLiquidityUsd","CAKE_PER_YEAR","StyledLogo","img","PairLogoImg","Flex","getImageUrlFromToken","iconExtension","TokenPairImage","primaryToken","secondaryToken","src","BIG_NINE","useExit","stakingContract","useLPStakingContract","onUnstake","exit","txHash","useSousUnstake","enableEmergencyWithdraw","masterChefContract","useMasterchef","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","useUnstake","setStateLastUpdated","previousLastUpdated","usePreviousValue","useSousStake","isUsingBnb","handleStake","stake","sousStakeBnb","sousStake","onStake","useStake","ifos","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","pending","association","useClaim","onReward","claim","useSousHarvest","handleHarvest","harvest","soushHarvestBnb","soushHarvest","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","StyledHr","colors","textSubtle","primary","ModalHr","hr","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","clearInterval","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_INFO_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","SPARKSWAP_API","API_ASSETS","API_SUMMARY","API_LIQUIDITY","API_LASTPRICE","BASE_BSC_SCAN_URLS","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","projectLink","bnb","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","ttkb","kroot","bglg","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","pointCenterIfoABI","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","bep20Abi","erc721Abi","getLpStakingContract","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","calculateUserRewardRate","stakingToken","Token","ChainId","MAINNET","rewardsToken","rewardRateAmount","TokenAmount","stakedAmount","token0","token1","dummyPair","Pair","totalStakedAmount","liquidityToken","JSBI","BigInt","raw","greaterThan","divide","multiply","toSignificant","PoolIds","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","useProfile","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","usePriceCakeBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","FlexLayout","usePoolPrice","stakingTokenAddress","rewardTokenAddress","_stakingTokenAddress","_rewardTokenAddress","stakingPrice","setStakingPrice","rewardPrice","setRewardPrice","utils","toChecksumAddress","assets","fetchData","useFarmPrice","token1Address","token2Address","_token1Address","_token2Address","LPPrice","setLPPrice","summary","pairLiquidity","prototype","hasOwnProperty","ref","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","onChange","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","StyledTokenInput","isWarning","shadows","warning","inset","text","xs","ModalInput","onSelectMax","isBalanceZero","position","margin","alignItems","pattern","inputMode","step","min","size","useIfoV1Contract","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","library","refEth","Web3","setweb3","multi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","requireSuccess","result","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","gas","enterStaking","deposit","leaveStaking","withdraw","emergencyWithdraw","getReward","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","archivedHttpProvider","web3WithArchivedNodeProvider","toastContext","BetPosition","CORE","isComingSoon","isDepositDisabled","isWithdrawDisabled","isAddTokenDisabled","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","connectorLocalStorageKey","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","RedirectToPools","location","to","GlobalStyle","createGlobalStyle","label","icon","items","Menu","useTheme","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","getBscScanLink","keyframes","ViewMode","StyledCard","Card","card","StyledCardInner","isPromotedPool","radii","CakeVaultTokenPairImage","primaryTokenSrc","primarySrc","secondarySrc","StyledCardHeader","isStaking","flexDirection","height","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","ModalBody","StakeActionModal","isBnbPool","isRemovingStake","isApprove","stakingTokenContract","pendingTx","setPendingTx","isApproved","setIsApproved","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","setPercent","userLimit","totalStakingTokens","remainingStakeTokens","totalAllowance","getCalculatedStakingLimit","fullDecimalStakeAmount","plus","handleConfirmClick","maxstake","tokensymbol","sliderPercent","percentageOfStakingMax","amountToStake","handleChangePercent","convertedInput","percentage","handleStakeInputChange","currentTarget","addLiquidityUrl","marginTop","marginBottom","endIcon","spin","disabled","marginRight","marginLeft","StyledFlex","StakeModal","addTokenUrl","activeSelect","setActiveSelect","earnedTokenBalance","totalStakedTokens","totalEarningTokens","totalEarnedTokens","temp","useModal","Stake","onPresentStakeAction","handleHarvestConfirm","className","open","border","borderTop","onMouseEnter","onMouseLeave","eq","StakeAction","isStaked","onPresentStake","useTooltip","placement","targetRef","tooltip","tooltipVisible","isEqualTo","isGreaterThan","Text","CardActions","totalEarned","display","StakeActions","PoolCard","accountHasStakedBalance","rewardPerBlock","backgroundColor","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","scale","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","StyledButton","Button","VaultStakeModal","stakingMax","percent","cakePriceBusd","usdValueStaked","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","minWidth","onUserInput","currencyValue","onValueChanged","valueLabel","HasSharesActions","stakedDollarValue","onPresentTokenRequired","onPresentUnstake","VaultStakeActions","accountHasSharesStaked","InlineText","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","useMatchBreakpoints","isXl","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","CardFooter","_style","_g","_g2","_g3","_g4","PoolTabButtons","activeIndex","stakedOnly","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","url","isExact","isXs","isSm","liveOrFinishedSwitch","BaseCell","expandAnimation","ChevronDownIcon","xl","collapseAnimation","css","dropdown","cardBorder","_extends","assign","arguments","source","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPoolDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","d","cx","cy","r","ForwardRef","SvgPoolLight","CardLayout","PoolControls","SearchSortContainer","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","searchQuery","setSearchQuery","sortOption","isMobile","useMedia","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","showUpcomingPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","minHeight","padding","borderBottom","SvgIcon","component","PoolsDarkLogo","PoolsLightLogo","event","Farms","lazy","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","iterations","Providers","ReactDOM","render","StrictMode","getElementById","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount"],"mappings":"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","file":"static/js/main.10640430.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve, approveWithAmount } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract, useLottery, useSousChef } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract, contractAddress: Contract) => {\n  const { account } = useWeb3React()\n  const handleApprove = useCallback(async () => {\n    try {\n      return await approve(lpContract, contractAddress, account)\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, contractAddress])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n      setRequestedApproval(false)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useSousApproveWithAmount = (lpContract: Contract, sousId, earningTokenSymbol, stakingAmount) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approveWithAmount(lpContract, sousChefContract, account, stakingAmount.toString())\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n      setRequestedApproval(false)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, stakingAmount, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      return await approve(cakeContract, lotteryContract, account)\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\nimport { CAKE_INFO_URL, PANCAKE_ADD_LIQUIDITY_URL } from '../index'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  /* {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  */\n\n  /**\n   * INTERNAL STAKING POOLS\n   */\n  // OWN - BNB - OWN\n  {\n    pid: 251,\n    lpSymbol: 'SRKb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD581CdF609DD50fbaa25118583c6EE31b39662F9',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xCec445174D6f4e87d38d43d4b13E36dd55CC56A1',\n    },\n    token: tokens.srkb,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.srkb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'OWN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB31F2F7939108D9a518f6152689Dc1463091Ee7b',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x0Fe376032276Ad5fc55e782D6AB1f85Ce0669BFB',\n    },\n    token: tokens.own,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.own,\n  },\n\n  /**\n   * EXTERNAL STAKING POOLS\n   */\n  {\n    pid: 253,\n    lpSymbol: 'KGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB80cD24f54566FD482ffd928c13b4a618DC6d0c',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xF5927A81112ED7a5680DfB8D63E230b8c527CEA7',\n    },\n    token: tokens.kgo,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.srkb,\n  },\n  // KCLP - BUSD - SFUEL\n  {\n    pid: 254,\n    lpSymbol: 'KCLP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFDD633E7428cAEEc1712Ae9426BE0C29C9A5Cb49',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x3CE0Dc444298133bD1e16B520Dc1B862c374f281',\n    },\n    token: tokens.kclp,\n    pairToken: tokens.busd,\n    quoteToken: tokens.sfuel,\n    isPromoted: 1\n  },\n  // KCLP - BUSD - KCLP\n  {\n    pid: 255,\n    lpSymbol: 'KCLP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x64f30722ce788c31dc28f09A6Ce3eA33f742B1D2',\n    },\n    token: tokens.kclp,\n    pairToken: tokens.busd,\n    quoteToken: tokens.kclp,\n    liquidityUrl: PANCAKE_ADD_LIQUIDITY_URL,\n    infoURL: CAKE_INFO_URL,\n  },\n  // TIPSY - BNB - KCLP\n  {\n    pid: 256,\n    lpSymbol: 'TIPSY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdF306B071D0DcA82580ff0B7834b5Fc962fb30F8',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xA24a42f5DCbe5AbaEf992818cC05e1Fd00a8A780',\n    },\n    token: tokens.tipsy,\n    pairToken: tokens.wbnb,\n    quoteToken: tokens.tipsy,\n    isPromoted: 1\n  },\n  // GZILA - BUSD - SFUEL\n  {\n    pid: 257,\n    lpSymbol: 'GZILA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8C7F831c673CDf29A9fb996593d8a7c71c028959',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x43BDf10036Dad8622569677217B40a0EdD2510C8',\n    },\n    token: tokens.gzila,\n    pairToken: tokens.busd,\n    quoteToken: tokens.sfuel,\n    isPromoted: 1\n  },\n  {\n    pid: 258,\n    lpSymbol: 'FLASH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34E5f2A523a4f192Cfa495Ba330EC2eC220c9e60',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x827a57f1BA89197a916916739fFE9aFBEe0D7670',\n    },\n    token: tokens.flash,\n    pairToken: tokens.busd,\n    quoteToken: tokens.flash,\n    isPromoted: 1\n  },\n  {\n    pid: 259,\n    lpSymbol: 'BHC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x19e3cd6418d81d69a71b3fc931387a2062c5a815',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0xD314dbD9998401770943EcdBE97f78Ea2f0dEE62',\n    },\n    token: tokens.bhc,\n    pairToken: tokens.busd,\n    quoteToken: tokens.bhc,\n    isPromoted: 1\n  },\n  {\n    pid: 260,\n    lpSymbol: 'HPS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaaf827e2eaf72c62e77047458cbd40e7f30f1896',\n    },\n    stakingAddresses: {\n      97: '',\n      56: '0x5a870495971ed55bd377fc390f46ab1b96bcd6b4',\n    },\n    token: tokens.hps,\n    pairToken: tokens.busd,\n    quoteToken: tokens.hps,\n    isPromoted: 1\n  },\n\n]\n\nexport default farms\n","import { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  // {\n  //   pid: null,\n  //   lpSymbol: 'QSD-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n  //   },\n  //   token: tokens.qsd,\n  //   quoteToken: tokens.wbnb,\n  // },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { now } from 'lodash'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport lpStaking from 'config/abi/lpStaking.json'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  totalDeposits: SerializedBigNumber\n  rewardRate: SerializedBigNumber\n  totalRewardRate: SerializedBigNumber\n  hasEnded: boolean\n  remainingDays: string\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken, stakingAddresses } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n  const lpStakingCalls = [\n    // Total deposits in staking address\n    {\n      address: getAddress(stakingAddresses),\n      name: 'totalSupply',\n    },\n    // Total deposits in staking address\n    {\n      address: getAddress(stakingAddresses),\n      name: 'periodFinish',\n    },\n    {\n      address: getAddress(stakingAddresses),\n      name: 'rewardRate',\n    },\n  ]\n  const [totalSupply, periodFinish, rewardRate] =\n    await multicall(lpStaking, lpStakingCalls)\n\n  // Total Deposits in staking address\n  const totalDeposits = new BigNumber(totalSupply)\n\n  // total reward rate\n  const totalRewardRate = new BigNumber(rewardRate).times(60 * 60 * 24 * 7)\n\n  // console.log(totalRewardRate)\n\n  const endDate = (new Date(0)).setUTCSeconds(periodFinish)\n  const hasEnded = endDate < now()\n  const remainingDays = (Math.max(0, Math.ceil(((((endDate - now()) / 1000) / 60) / 60) / 24))).toString()\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    totalDeposits: totalDeposits.toJSON(),\n    'rewardRate': new BigNumber(rewardRate).toJSON(),\n    'totalRewardRate': totalRewardRate.toJSON(),\n    'hasEnded': hasEnded,\n    'remainingDays': remainingDays,\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\nimport lpStakingAbi from 'config/abi/lpStaking.json'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, getAddress(farm.stakingAddresses)] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: getAddress(farm.stakingAddresses),\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n\n  const rawStakedBalances = await multicall(lpStakingAbi, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: getAddress(farm.stakingAddresses),\n      name: 'earned',\n      params: [account],\n    }\n  })\n\n  const rawEarnings = await multicall(lpStakingAbi, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@sparkpointio/sparkswap-uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props} fullWidth>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\n// import { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { ConnectorId } from '@sparkpointio/sparkswap-uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorId) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem('1')\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    console.log(process.env.REACT_APP_CHAIN_ID)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Testnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error('Can\\'t setup the BSC network on metamask because window.ethereum is undefined')\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'SparkDeFi',\n  description:\n    'Refuel your rocket with SFUEL and travel to the moon with SparkSwap, the prodigious decentralized exchange on Binance Smart Chain.',\n  image: 'https://sparkswap.finance//images/192x192_App_Icon.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('SparkDeFi')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('SparkDeFi')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('SparkDeFi')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('SparkDeFi')} - ${t('Earn SRK, SFUEL, and other tokens by just staking!')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('SparkPool')} - ${t('Earn SRK, SFUEL, and other tokens by just staking!')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('SparkDeFi')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('SparkDeFi')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('SparkDeFi')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('SparkDeFi')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('SparkDeFi')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('SparkDeFi')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  // const cakePriceUsd = usePriceCakeBusd()\n  // const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n  //   ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n  //       minimumFractionDigits: 3,\n  //       maximumFractionDigits: 3,\n  //     })}`\n  //   : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  // const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property='og:title' content={title} />\n      <meta property='og:description' content={description} />\n      <meta property='og:image' content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTokenAllowance = (tokenAddress: string, allowedAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.methods.allowance(account, allowedAddress).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, allowedAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, EPOCH_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  \n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get the FARM APR value in %\n * @param LPTokenPrice LP Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of LP Token in the pool\n * @param rewardForDuration Amount of rewards allocated to the farms\n * @param duration Duration of the farm in EPOCH\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getFarmV2Apr = (\n  LPTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  rewardRate: number\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(rewardRate).times(EPOCH_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(LPTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport { TokenPairImageProps as UIKitTokenPairImageProps } from '@pancakeswap/uikit'\nimport { Flex } from '@sparkpointio/sparkswap-uikit'\nimport styled from 'styled-components'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst StyledLogo = styled.img`\n  width: 50px;\n`\nconst PairLogoImg = styled(Flex)`\n  margin-bottom: 30px;\n`\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.${token.iconExtension?? 'svg'}`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken }) => {\n  return (\n    <PairLogoImg>\n      <StyledLogo src={getImageUrlFromToken(primaryToken)} alt='logo-img' />\n      <StyledLogo src={getImageUrlFromToken(secondaryToken)} alt='logo-img' />\n    </PairLogoImg>\n  )\n}\n\nexport default TokenPairImage\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward, updateUserStakedBalance } from 'state/actions'\nimport { exit, sousEmergencyUnstake, sousUnstake, unstake } from 'utils/callHelpers'\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\n\nexport const useExit = (contract: string) => {\n  const { account } = useWeb3React()\n  const stakingContract = useLPStakingContract(contract)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await exit(stakingContract, account)\n      console.info(txHash)\n    },\n    [account, stakingContract],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, contract: Contract) => {\n      const txHash = await stake(contract?? masterChefContract, pid, amount, account, !!contract)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { Ifo } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   // symbol: farms[1].lpSymbol,\n//   // address: farms[1].lpAddresses,\n//   // decimals: 18,\n// }\n\nconst ifos: Ifo[] = [\n  // {\n  //   id: 'kalmar',\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n  //   isActive: true,\n  //   name: 'Kalmar (KALM)',\n  //   poolBasic: {\n  //     saleAmount: '375,000 KALM',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '875,000 KALM',\n  //     raiseAmount: '$2,500,000',\n  //     cakeToBurn: '$1,250,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.kalm,\n  //   releaseBlockNumber: 7707736,\n  //   campaignId: '511110000',\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n  //   tokenOfferingPrice: 2.0,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'hotcross',\n  //   address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n  //   isActive: false,\n  //   name: 'Hot Cross (HOTCROSS)',\n  //   poolBasic: {\n  //     saleAmount: '15,000,000 HOTCROSS',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '35,000,000 HOTCROSS',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hotcross,\n  //   releaseBlockNumber: 7477900,\n  //   campaignId: '511100000',\n  //   articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n  //   tokenOfferingPrice: 0.05,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'horizon',\n  //   address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n  //   isActive: false,\n  //   name: 'Horizon Protocol (HZN)',\n  //   poolBasic: {\n  //     saleAmount: '3,000,000 HZN',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '7,000,000 HZN',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hzn,\n  //   releaseBlockNumber: 6581111,\n  //   campaignId: '511090000',\n  //   articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n  //   tokenOfferingPrice: 0.25,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'belt',\n  //   address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n  //   isActive: false,\n  //   name: 'Belt (BELT)',\n  //   poolUnlimited: {\n  //     saleAmount: '150,000 BELT',\n  //     raiseAmount: '$3,000,000',\n  //     cakeToBurn: '$1,500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.belt,\n  //   releaseBlockNumber: 5493919,\n  //   campaignId: '511080000',\n  //   articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'watch',\n  //   address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n  //   isActive: false,\n  //   name: 'Yieldwatch (WATCH)',\n  //   poolUnlimited: {\n  //     saleAmount: '8,000,000 WATCH',\n  //     raiseAmount: '$800,000',\n  //     cakeToBurn: '$400,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.watch,\n  //   releaseBlockNumber: 5294924,\n  //   campaignId: '511070000',\n  //   articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'berry',\n  //   address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n  //   isActive: false,\n  //   name: 'Berry (BRY)',\n  //   poolUnlimited: {\n  //     saleAmount: '2,000,000 BRY',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.bry,\n  //   releaseBlockNumber: 4750968,\n  //   campaignId: '511060000',\n  //   articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'soteria',\n  //   address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n  //   isActive: false,\n  //   name: 'Soteria (wSOTE)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,500,000 wSOTE',\n  //     raiseAmount: '$525,000',\n  //     cakeToBurn: '$262,500',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.wsote,\n  //   releaseBlockNumber: 4086064,\n  //   campaignId: '511050000',\n  //   articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'helmet',\n  //   address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n  //   isActive: false,\n  //   name: 'Helmet.insure (Helmet)',\n  //   poolUnlimited: {\n  //     saleAmount: '10,000,000 Helmet',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.helmet,\n  //   releaseBlockNumber: 3771926,\n  //   campaignId: '511040000',\n  //   articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'tenet',\n  //   address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n  //   isActive: false,\n  //   name: 'Tenet (TEN)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,000,000 TEN',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ten,\n  //   releaseBlockNumber: 3483883,\n  //   campaignId: '511030000',\n  //   articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'ditto',\n  //   address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n  //   isActive: false,\n  //   name: 'Ditto (DITTO)',\n  //   poolUnlimited: {\n  //     saleAmount: '700,000 DITTO',\n  //     raiseAmount: '$630,000',\n  //     cakeToBurn: '$315,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ditto,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511020000',\n  //   articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'blink',\n  //   address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n  //   isActive: false,\n  //   name: 'BLINk (BLK)',\n  //   poolUnlimited: {\n  //     saleAmount: '100,000,000 BLINK',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.blink,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511010000',\n  //   articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest, claim } from 'utils/callHelpers'\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\n\nexport const useClaim = (stakingContract: string) => {\n  const { account } = useWeb3React()\n  const contract = useLPStakingContract(stakingContract)\n\n  const handleClaim = useCallback(async () => {\n    const txHash = await claim(contract, account)\n    return txHash\n  }, [account, contract])\n\n  return { onReward: handleClaim }\n}\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@sparkpointio/sparkswap-uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: true, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n\nexport const StyledHr = styled.div`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({ theme }) => theme.colors.primary};\n  width: 95%;\n`\n\nexport const ModalHr = styled.hr`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({ theme }) => theme.colors.primary};\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\n// export const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_URL = 'https://sparkswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://sparkswap.finance'\nexport const BASE_INFO_URL = 'https://sparkswap.info/#/token/'\nexport const CAKE_INFO_URL = 'https://pancakeswap.finance/info/pool/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const PANCAKE_EXCHANGE_URL = 'https://pancakeswap.finance'\nexport const PANCAKE_ADD_LIQUIDITY_URL = `${PANCAKE_EXCHANGE_URL}/add`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\nexport const EPOCH_PER_YEAR = 31556926\nexport const SPARKSWAP_API = 'https://api.sparkswap.info/api/'\nexport const API_ASSETS = 'assets'\nexport const API_SUMMARY = 'summary'\nexport const API_LIQUIDITY = 'liquidity'\nexport const API_LASTPRICE = 'last_price'\n\n\n\nexport const BASE_BSC_SCAN_URLS = {\n  [MAINNET_CHAIN_ID]: 'https://bscscan.com',\n  [TESTNET_CHAIN_ID]: 'https://testnet.bscscan.com',\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","const tokens = {\n  sfuel: {\n    symbol: 'SFUEL',\n    address: {\n      56: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n      97: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  srkb: {\n    symbol: 'SRKb',\n    address: {\n      56: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\n      97: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://sparkpoint.io/',\n  },\n  ttkb: {\n    symbol: 'TTKb',\n    address: {\n      56: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\n      97: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\n    },\n    decimals: 18,\n    projectLink: 'https://sparkpoint.io/',\n  },\n  own: {\n    symbol: 'OWN',\n    address: {\n      56: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\n      97: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://ownly.io/',\n  },\n  kclp: {\n    symbol: 'KCLP',\n    address: {\n      56: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\n      97: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n    projectLink: 'https://kucoinlaunchpad.com/',\n  },\n  kroot: {\n    symbol: 'KROOT',\n    address: {\n      56: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\n      97: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\n    },\n    decimals: 18,\n  },\n  bglg: {\n    symbol: 'BGLG',\n    address: {\n      56: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\n      97: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\n    },\n    decimals: 18,\n  },\n  kgo: {\n    symbol: 'KGO',\n    address: {\n      56: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\n      97: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  tipsy: {\n    symbol: 'TIPSY',\n    address: {\n      56: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\n      97: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  gzila: {\n    symbol: 'GZILA',\n    address: {\n      56: '0x4178934c6E313a062c5addD66ab0D9B8d858347a',\n      97: '0x4178934c6E313a062c5addD66ab0D9B8d858347a',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  flash: {\n    symbol: 'FLASH',\n    address: {\n      56: '0x5f0366c9962193fa774cdce9602195593b49f23c',\n      97: '0x5f0366c9962193fa774cdce9602195593b49f23c',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  bhc: {\n    symbol: 'BHC',\n    address: {\n      56: '0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4',\n      97: '0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n  hps: {\n    symbol: 'HPS',\n    address: {\n      56: '0xeda21b525ac789eab1a08ef2404dd8505ffb973d',\n      97: '0xeda21b525ac789eab1a08ef2404dd8505ffb973d',\n    },\n    decimals: 18,\n    iconExtension: 'png',\n  },\n}\n\nexport default tokens\n\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Spinner}  from '@sparkpointio/sparkswap-uikit';\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpStakingAbi from 'config/abi/lpStaking.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpStakingContract = (address: string, web3?: Web3) => {\n  return getContract(lpStakingAbi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\nexport const getMulticallContract = (web3?: Web3) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\n}\n","import { ChainId, JSBI, Pair, Token, TokenAmount } from '@pancakeswap-libs/sdk'\nimport { getAddress } from './addressHelpers'\n\nconst ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport const calculateUserRewardRate = (\n  {\n    lpAddresses,\n    totalDeposits,\n    quoteToken,\n    token,\n    rewardRate,\n    userData,\n    pairToken\n  }: any) => {\n  const stakingToken = new Token(\n    ChainId.MAINNET,\n    getAddress(lpAddresses),\n    18,\n  )\n  const rewardsToken = new Token(\n    ChainId.MAINNET, getAddress(quoteToken.address), quoteToken.decimals)\n  const rewardRateAmount = new TokenAmount(rewardsToken, rewardRate ?? 0)\n  const stakedAmount = new TokenAmount(stakingToken, userData.stakedBalance ?? 0)\n  const totalSupply = new TokenAmount(stakingToken, totalDeposits ?? 0)\n  const token0 = new Token(ChainId.MAINNET, getAddress(token.address), token.decimals)\n  const token1 = new Token(ChainId.MAINNET, getAddress(pairToken.address), pairToken.decimals)\n\n  const dummyPair = new Pair(new TokenAmount(token0, '0'), new TokenAmount(token1, '0'))\n\n  const totalStakedAmount = new TokenAmount(\n    dummyPair.liquidityToken, JSBI.BigInt(totalSupply.raw))\n\n  return new TokenAmount(\n    rewardsToken,\n    JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\n      ? JSBI.divide(JSBI.multiply(rewardRateAmount.raw, stakedAmount.raw), totalStakedAmount.raw)\n      : JSBI.BigInt(0),\n  )?.multiply(`${60 * 60 * 24 * 7}`)\n    ?.toSignificant(4)\n}\n\n// export const calcuLateApy = () => {\n//\n// }\n\nexport default isArchivedPid\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n  iconExtension?: string | 'svg'\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  stakingAddresses: Address\n  token: Token\n  pairToken: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  liquidityUrl?: string\n  infoURL?: string\n  isPromoted?: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  isComingSoon?: boolean\n  enableEmergencyWithdraw?: boolean\n  isAddTokenDisabled?: boolean\n  isDepositDisabled?: boolean\n  isWithdrawDisabled?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport web3NoAccount from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchCakeVaultFees,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  setBlock,\n} from './actions'\nimport { AchievementState, Farm, FarmsState, Pool, ProfileState, State, TeamsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    min-height: 500px;\n    height: auto;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useState } from 'react'\nimport { SPARKSWAP_API, API_ASSETS, API_SUMMARY, API_LIQUIDITY, API_LASTPRICE } from 'config'\nimport useWeb3 from 'hooks/useWeb3'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport const usePoolPrice = (stakingTokenAddress: string, rewardTokenAddress: string) => {\n    const [stakingPrice, setStakingPrice] = useState(0)\n    const [rewardPrice, setRewardPrice] = useState(0)\n\n    const web3 = useWeb3()\n    let _stakingTokenAddress\n    let _rewardTokenAddress\n    try{\n        _stakingTokenAddress = web3.utils.toChecksumAddress(stakingTokenAddress)\n        _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\n    }\n    catch{\n        console.error('Invalid staking and reward address')\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n        try {\n            let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\n            assets = await assets.json();\n            const lastPrice = \"last_price\"\n            \n            setStakingPrice(assets[_stakingTokenAddress][lastPrice])\n            setRewardPrice(assets[_rewardTokenAddress][lastPrice])\n        } catch (error) {\n          console.error('Unable to fetch data:', error)\n        }\n      }\n  \n      fetchData()\n    }, [setStakingPrice, setRewardPrice,_stakingTokenAddress, _rewardTokenAddress])\n\n    return {stakingPrice, rewardPrice}\n}\n\nexport const useFarmPrice = (lpTotalSupply: number, token1Address: string, token2Address: string, rewardTokenAddress: string) => {\n    const [LPPrice, setLPPrice] = useState(0)\n    const [rewardPrice, setRewardPrice] = useState(0)\n\n    const web3 = useWeb3()\n    let _token1Address\n    let _token2Address\n    let _rewardTokenAddress\n    try{\n        _token1Address = web3.utils.toChecksumAddress(token1Address)\n        _token2Address = web3.utils.toChecksumAddress(token2Address)\n        _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\n    }\n    catch{\n        console.error('Invalid staking and reward address')\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n        try {\n\n            let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\n            assets = await assets.json()\n            let summary = await fetch(SPARKSWAP_API.concat(API_SUMMARY))\n            summary = await summary.json()\n\n            let pairLiquidity\n\n            if(Object.prototype.hasOwnProperty.call(summary, _token1Address.concat(\"_\",_token2Address))){\n                pairLiquidity = summary[_token1Address.concat(\"_\",_token2Address)][API_LIQUIDITY];\n            }\n            else{\n                pairLiquidity = summary[_token2Address.concat(\"_\",_token1Address)][API_LIQUIDITY];\n            }\n\n            setLPPrice( pairLiquidity / getBalanceNumber(new BigNumber(lpTotalSupply), 18)  )\n            setRewardPrice(assets[_rewardTokenAddress][API_LASTPRICE])\n        } catch (error) {\n          console.error('Unable to fetch data:', error)\n        }\n      }\n  \n      fetchData()\n    }, [setLPPrice, setRewardPrice, lpTotalSupply, _token1Address, _token2Address, _rewardTokenAddress])\n\n    return {LPPrice, rewardPrice}\n}\n\nexport default usePoolPrice","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  // background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n  border: 2px solid ${({ theme }) => theme.colors.primary};\n    // box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  flex: 1;\n  margin: 0 8px;\n  padding: 0 8px;\n  background: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`\n\n// const StyledErrorMessage = styled(Text)`\n//   position: absolute;\n//   bottom: -22px;\n//\n//   a {\n//     display: inline;\n//   }\n// `\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n                                                 max,\n                                                 // symbol,\n                                                 onChange,\n                                                 onSelectMax,\n                                                 value,\n                                                 // addLiquidityUrl,\n                                                 // inputTitle,\n                                                 decimals = 18,\n                                               }) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  // const displayBalance = (balance: string) => {\n  //   if (isBalanceZero) {\n  //     return '0'\n  //   }\n  //   const balanceBigNumber = new BigNumber(balance)\n  //   if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n  //     return balanceBigNumber.toLocaleString()\n  //   }\n  //   return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  // }\n\n  return (\n    <div style={{ position: 'relative', margin: '15px 0px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        {/* <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n        </Flex> */}\n        <Flex alignItems='flex-end' justifyContent='space-around'>\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode='decimal'\n            step='any'\n            min='0'\n            onChange={onChange}\n            placeholder='0'\n            value={value}\n          />\n          <Button size='sm' onClick={onSelectMax} mr='8px' mb='4px'>\n            {t('Max')}\n          </Button>\n          {/* <Text fontSize=\"16px\">{symbol}</Text> */}\n        </Flex>\n      </StyledTokenInput>\n      <Flex>\n        {/* <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Available')}: {getFullDisplayBalance}\n          </Text>  */}\n\n\n      </Flex>\n      {/* {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )} */}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getLpStakingContract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useLPStakingContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getLpStakingContract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport web3NoAccount from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : web3NoAccount)\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import Web3 from 'web3'\nimport { Interface } from '@ethersproject/abi'\nimport web3NoAccount from 'utils/web3'\nimport { getMulticallContract } from 'utils/contractHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}): Promise<any> => {\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, Token, TokenAmount } from '@pancakeswap-libs/sdk'\nimport { Contract } from 'web3-eth-contract'\nimport { getLpContract, getLpStakingContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { web3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const approveWithAmount = async (lpContract, masterChefContract, account, amount) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, amount)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, useV2 = false) => {\n  if (useV2) {\n    return masterChefContract.methods\n      .stake(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const exit = async (contract: Contract, account) => {\n  return contract.methods\n    .exit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claim = async (contract, account) => {\n  return contract.methods\n    .getReward()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 251\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), web3WithArchivedNodeProvider)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\nexport const getLPStakingDetails = async (stakingAddresses, account: string) => {\n  try {\n    const contract = getLpStakingContract(getAddress(stakingAddresses))\n\n    return {\n      stakedTokens: await contract.methods.balanceOf(account).call(),\n      totalDeposits: await contract.methods.totalSupply().call(),\n      rewardRate: await contract.methods.rewardRate().call(),\n    }\n  } catch (error) {\n    console.error(`LP Staking error: ${error}`)\n    return {\n      totalDeposits: '-',\n    }\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'totalDeposit',\n      params: [],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(sousChefV2, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport web3NoAccount from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\n\nexport default web3NoAccount\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  totalDeposits?: string\n  rewardRate?: SerializedBigNumber\n  totalRewardRate?: SerializedBigNumber\n  hasEnded?: boolean\n  remainingDays?: string\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  isPromoted?: number\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 3,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.srkb,\n    contractAddress: {\n      97: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n      56: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2893518518518518518',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 4,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n      56: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '135030864197530864',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 5,\n    stakingToken: tokens.kroot,\n    earningToken: tokens.srkb,\n    contractAddress: {\n      97: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\n      56: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2905478395061728395',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isAddTokenDisabled: true\n  },\n  {\n    sousId: 6,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.kroot,\n    contractAddress: {\n      97: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\n      56: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3307098765432098765',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.bglg,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\n      56: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '200231481481481481',\n    sortOrder: 999,\n    isFinished: false,\n    isComingSoon: false,\n    isAddTokenDisabled: true\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.bglg,\n    contractAddress: {\n      97: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\n      56: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '530864197530864197',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.tipsy,\n    earningToken: tokens.tipsy,\n    contractAddress: {\n      97: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\n      56: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '307004629629629629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.tipsy,\n    contractAddress: {\n      97: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\n      56: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '307004629629629629',\n    sortOrder: 999,\n    isFinished: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.gzila,\n    contractAddress: {\n      97: '0xA0429473bDf24fdCDE211623C8A40Bfc8A2466C8',\n      56: '0xA0429473bDf24fdCDE211623C8A40Bfc8A2466C8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '590513888888888888',\n    sortOrder: 999,\n    isFinished: false,\n    isDepositDisabled: false,\n    isWithdrawDisabled: false,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.gzila,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x8379b376b5B641245aF7417193d6cf495e2BbF99',\n      56: '0x8379b376b5B641245aF7417193d6cf495e2BbF99',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '74484953703703703',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.srkb,\n    earningToken: tokens.bhc,\n    contractAddress: {\n      97: '0x38f3C6F7D5aAC5D60c1C948f61231C6b2341d315',\n      56: '0x38f3C6F7D5aAC5D60c1C948f61231C6b2341d315',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '50154320987654',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.sfuel,\n    earningToken: tokens.hps,\n    contractAddress: {\n      97: '0xa1a3f2c3d2b76926500b3f923ef997b64948a6ec',\n      56: '0xa1a3f2c3d2b76926500b3f923ef997b64948a6ec',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3062114197530864',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 15,\n    stakingToken: tokens.own,\n    earningToken: tokens.sfuel,\n    contractAddress: {\n      97: '0x5950060609B2037330C16491aA9f2cd3Ed6dB154',\n      56: '0x5950060609B2037330C16491aA9f2cd3Ed6dB154',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '210552256944444444',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  // Dummy Contract #1\n  // {\n  //   sousId: 4,\n  //   stakingToken: tokens.sfuel,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f1a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca1a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: true,\n  // },\n  // Dummy Contract #2\n  // {\n  //   sousId: 5,\n  //   stakingToken: tokens.srkb,\n  //   earningToken: tokens.sfuel,\n  //   contractAddress: {\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f3a',\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca3a',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '49603174603174603',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   isComingSoon: false,\n  // }\n]\n\nexport default pools\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const calls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks'].map((method) => ({\n    address: getPredictionsAddress(),\n    name: method,\n  }))\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [isPaused], [bufferBlocks]] = await multicallv2(\n    predictionsAbi,\n    calls,\n  )\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toNumber(),\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nexport function RedirectToFarms({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/farms'}} />\n}\n\nexport function RedirectToPools({ location }: RouteComponentProps){\n    return <Redirect to={{...location, pathname: '/pools'}} />\n}","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@sparkpointio/sparkswap-uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: \"Swap\",\n    icon: \"TradeIcon\",\n    href: \"https://sparkswap.finance/#/swap\",\n  },\n  {\n    label: \"Staking\",\n    icon: \"FarmIcon\",\n    items: [\n      {\n        label: \"Farms\",\n        href: \"/farms\",\n      },\n      {\n        label: \"Pools\",\n        href: \"/pools\",\n      },\n      {\n        label: \"Old Farms/Pools\",\n        href: \"https://app.srk.finance/#/stake\",\n      },\n    ],\n  },\n  // {\n  //   label: \"Farm\",\n  //   icon: \"FarmIcon\",\n  //   href: \"https://app.srk.finance/#/stake\",\n  // },\n  // {\n  //   label: \"Pool\",\n  //   icon: \"PoolIcon\",\n  //   href: \"/pools\",\n  // },\n  {\n    label: \"Bridge\",\n    icon: \"BridgeIcon\",\n    href: \"https://app.srk.finance/#/bridge\",\n  },\n  {\n    label: \"Launch\",\n    icon: \"LaunchIcon\",\n    href: \"https://launch.sparkswap.finance/#/\",\n  },\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    href: \"https://sparkswap.info/#/home\",\n  },\n  {\n    label: \"Airdrop\",\n    icon: \"AirdropIcon\",\n    href: \"https://app.srk.finance/#/airdrop\",\n  },\n  {\n    label: \"Teams\",\n    icon: \"GroupsIcon\",\n    href: \"https://srk.finance/team\",\n  },\n  {\n    label: \"Help\",\n    icon: \"MoreIcon\",\n    href: \"https://medium.com/theecosystem/a-beginners-guide-to-sparkswap-79f92a2f7074\"\n  }\n  // {\n  //   label: 'Trade',\n  //   icon: 'TradeIcon',\n  //   initialOpenState: true,\n  //   items: [\n  //     {\n  //       label: 'Exchange',\n  //       href: '/swap'\n  //     },\n  //     {\n  //       label: 'Liquidity',\n  //       href: '/pool'\n  //     }\n  //   ]\n  // },\n  /*\n  {\n    label: \"Info\",\n    icon: \"InfoIcon\",\n    items: [\n      {\n        label: \"Overview\",\n        href: \"https://coinmarketcap.com/currencies/sparkpoint/\",\n      },\n      {\n        label: \"Trade SRK\",\n        href: \"https://srk.sh/trade\",\n      },\n    ],\n  },\n  {\n    label: \"More\",\n    icon: \"MoreIcon\",\n    items: [\n      {\n        label: \"SparkDeFi\",\n        href: \"https://srk.finance/\",\n      },\n      {\n        label: \"SparkPoint\",\n        href: \"https://sparkpoint.io/\",\n      },\n      {\n        label: \"Github\",\n        href: \"https://github.com/sparkpointio\",\n      },\n      {\n        label: \"White Paper\",\n        href: \"https://github.com/sparkpointio/sparkdefi-whitepaper/blob/main/WHITEPAPER.md\",\n      },\n      {\n        label: \"Blog\",\n        href: \"https://medium.com/theecosystem\",\n      },\n    ],\n  },\n  */\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@sparkpointio/sparkswap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const { currentLanguage, setLanguage } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, CurrencyAmount, JSBI, Percent } from '@pancakeswap-libs/sdk'\nimport { BASE_BSC_SCAN_URLS } from '../config'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card } from '@sparkpointio/sparkswap-uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nexport const StyledCard = styled(Card)<{ isPromotedPool?: boolean; isFinished?: boolean }>`\n  border: 5px solid ${(props) => props.theme.colors.primary};\n  max-width: 352px;\n  padding: 24px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  justify-content: space-around;\n  background: ${(props) => props.theme.card.background};\n  text-align: center;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled.div<{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n\n  // border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React, { useContext } from 'react'\nimport { Heading, Text, Flex, Image } from '@sparkpointio/sparkswap-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled.div<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) => theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n//  background: ${({ isFinished, background, theme }) =>\n// isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n// border-radius: ${({ theme, isPromotedPool }) =>\n// isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\n  const background = 'cardHeader'\n\n/*\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n*/\n\n  const getCardTitle = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t(`Stake CAKE to Earn CAKE`)\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n    // return t('Stake %symbol% to Earn SRK', { symbol: stakingToken.symbol } )\n  }\n  const theme = useContext(ThemeContext);\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\" style={{textAlign: 'left'}}>\n          <Heading color='text' size=\"lg\">\n            {`Stake ${stakingToken.symbol}`} <br/>\n            to <br />\n            {`Earn ${earningToken.symbol}`}\n          </Heading>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={stakingToken} secondaryToken={earningToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { Modal, Text, Flex, Image, Button} from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { useSousApprove, useSousApproveWithAmount } from 'hooks/useApprove'\nimport { useTokenAllowance } from 'hooks/useTokenBalance'\nimport { useERC20 } from 'hooks/useContract'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount, getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport ModalInput from 'components/ModalInput'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onSelectMax?: () => void\n  onDismiss?: () => void\n  isApprove?: boolean\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst ModalBody = styled(Flex)`\n  width: 450px;\n  margin-top: -20px;\n  padding: 20px;\n`\nconst StakeActionModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n  isApprove = false,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const approveBtn = useRef(null);\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  // const [approvedTx, setApprovedTx] = useState(false)\n  const [isApproved, setIsApproved] = useState(isApprove)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const userLimit = stakingLimit.minus(userData.stakedBalance);\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : BIG_ZERO\n  const numTotalStaked = totalStakedTokens\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : BIG_ZERO\n  const remainingStakeTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(pool.stakingLimit.minus(userData.stakedBalance)), stakingToken.decimals) : BIG_ZERO\n  const totalAllowance = useTokenAllowance(stakingToken.address[56], pool.contractAddress[56])\n  const { handleApprove, requestedApproval } = useSousApproveWithAmount(stakingTokenContract, sousId, earningToken.symbol, getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals))\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(BIG_ZERO) && stakingTokenBalance.gt(userLimit) ? userLimit : stakingTokenBalance\n  }\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n    setIsApproved(totalAllowance.balance.gte(getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)))\n  }, [requestedApproval, stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, totalAllowance, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  // const handleApproveClick = async () => {\n  //   setApprovedTx(true)\n  // }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        setIsApproved(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      <ModalBody flexDirection=\"column\">\n        {/* {stakingLimit.gt(0) && !isRemovingStake && (\n          <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n            {t('Max stake for this pool: %amount% %token%', {\n              amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n              token: stakingToken.symbol,\n            })}\n          </Text>\n        )} */}\n\n        <Flex justifyContent=\"center\">\n          <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"38px\" mt=\"-48px\" style={{ textAlign: 'center'}}>\n            {t('Maximum stakable amount in this pool: %maxstake% %tokensymbol%', {\n              maxstake: getFullDisplayBalance(stakingLimit, stakingToken.decimals),\n              tokensymbol: pool.stakingToken.symbol\n            })}\n          </Text>\n        </Flex>\n\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n          <Text bold>Stake amount</Text>\n          {/* <Flex alignItems=\"center\">\n            <Image\n              src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n              width={24}\n              height={24}\n              alt={stakingToken.symbol}\n            />\n            <Text ml=\"4px\" bold>\n              {stakingToken.symbol}\n            </Text>\n          </Flex> */}\n        </Flex>\n        <ModalInput\n          value={stakeAmount}\n          onSelectMax={() => {handleChangePercent(100)}}\n          onChange={e => handleStakeInputChange(e.currentTarget.value)}\n          max={getFullDisplayBalance(new BigNumber(userLimit), stakingToken.decimals, 0)}\n          symbol={stakingToken.symbol}\n          addLiquidityUrl=''\n        />\n\n        {/* Fetch and display actual balance */}\n\n        <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\n          Remaining stakable amount: {remainingStakeTokens} {pool.stakingToken.symbol}\n        </Text>\n\n\n        <div>\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\n          {/* {t('Balance: %balance%', {\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n          })} */}\n          Balance: {totalStakingTokens.toFixed(4)} {pool.stakingToken.symbol}\n        </Text>\n        </div>\n\n\n\n        {/* {hasReachedStakeLimit && (\n          <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n            {t('Maximum total stake: %amount% %token%', {\n              amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n              token: stakingToken.symbol,\n            })}\n          </Text>\n        )} */}\n        {/* <Flex>\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\" mt=\"-8px\" style={{ textAlign: 'left'}}>\n          {t('Balance: %balance%', {\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n          })}\n        </Text>\n        </Flex> */}\n        {/* <Slider\n          min={0}\n          max={100}\n          value={percent}\n          onValueChanged={handleChangePercent}\n          name=\"stake\"\n          valueLabel={`${percent}%`}\n          step={1}\n        />\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n          <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n          <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n        </Flex> */}\n\n        <Flex justifyContent=\"space-between\"  marginTop=\"17px\" marginBottom=\"17px\">\n          <Text bold>Approved Tokens</Text>\n          <Text>\n            {getBalanceNumber(totalAllowance.balance, stakingToken.decimals)} {pool.stakingToken.symbol}\n          </Text>\n        </Flex>\n        <Flex style={{width: '100%'}}>\n        <Button\n          isLoading={pendingTx}\n          // endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          // onClick={handleApproveClick}\n          // disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || approvedTx}\n          onClick={handleApprove}\n          disabled={!stakeAmount || isApproved}\n          mt=\"24px\"\n          fullWidth\n          marginRight=\"20px\"\n        >\n         Approve\n        </Button>\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          disabled={!stakeAmount || hasReachedStakeLimit || !isApproved}\n          // disabled={!approvedTx}\n          mt=\"24px\"\n          fullWidth\n          marginLeft=\"20px\"\n        >\n          {/* {pendingTx ? t('Depositing') : t('Deposit')} */}\n          {t('Deposit')}\n        </Button>\n        </Flex>\n        {/* {!isRemovingStake && (\n          <StyledLink external href={BASE_EXCHANGE_URL}>\n            <Button fullWidth mt=\"8px\" variant=\"secondary\">\n              {t('Get %symbol%', { symbol: stakingToken.symbol })}\n            </Button>\n          </StyledLink>\n        )} */}\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default StakeActionModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Dropdown, Flex, Link, Modal, Text, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport BigNumber from 'bignumber.js'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { Pool } from 'state/types'\n\nimport StakeTokenModal from './Stake'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n  addTokenUrl?: string\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\nconst StyledFlex = styled(Flex)`\n  justify-content: center;\n\n  & > * {\n    flex: 1;\n    margin: 0px 10px;\n  }\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n                                                 isBnbPool,\n                                                 pool,\n                                                 stakingTokenBalance,\n                                                 stakingTokenPrice,\n                                                 addTokenUrl,\n                                                 isRemovingStake = false,\n                                                 onDismiss,\n                                               }) => {\n  const { sousId, stakingToken, userData, isAddTokenDisabled, earningToken } = pool\n  console.log(isAddTokenDisabled ?? false)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, false)\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const [activeSelect, setActiveSelect] = useState(false)\n  const { balance: earnedTokenBalance } = useTokenBalance(pool.earningToken.address[56])\n  const { toastSuccess, toastError } = useToast()\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : 0\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : 0\n  const totalEarningTokens = earnedTokenBalance ? getBalanceNumber(new BigNumber(earnedTokenBalance)) : 0\n  const totalEarnedTokens = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : 0\n  const [pendingTx, setPendingTx] = useState(false)\n  const temp = new BigNumber(pool.tokenPerBlock).times(new BigNumber(userData.stakedBalance).div(pool.totalStaked))\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : 0\n  const [onPresentStakeAction] = useModal(<StakeTokenModal isBnbPool={isBnbPool} pool={pool}\n                                                           stakingTokenBalance={stakingTokenBalance}\n                                                           stakingTokenPrice={stakingTokenPrice} />)\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // harvesting\n    try {\n      await onReward()\n      toastSuccess(\n        `${t('Claimed')}!`,\n        t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n      )\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n      setPendingTx(false)\n    }\n  }\n\n  const handleUnstake = async () => {\n    setPendingTx(true)\n    // unstaking\n    try {\n      await onUnstake(getFullDisplayBalance(new BigNumber(userData.stakedBalance), stakingToken.decimals, 18), stakingToken.decimals)\n      toastSuccess(\n        `${t('Unstaked')}!`,\n        t('Your %symbol% earnings have also been claimed to your wallet!', {\n          symbol: earningToken.symbol,\n        }),\n      )\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n      setPendingTx(false)\n    }\n  }\n\n\n  return (\n    <Modal\n      title=''\n      onDismiss={onDismiss}\n    >\n      <Flex flexDirection='column' style={{ marginTop: '-50px', width: '550px' }}>\n        <Text fontSize='20px' marginBottom='10px' marginLeft='10px'>Account Info</Text>\n        <Text fontSize='15px' marginLeft='10px'>Staking, balances & earnings</Text>\n\n        {/* Remove extra add liquidity button component when staking token symbol is equal to earning token symbol */}\n        <StyledFlex marginTop='21px'>\n          <Flex flexDirection='column'>\n            <Text fontSize='24px'>{formatNumber(totalStakingTokens, 2, 5)}</Text>\n            <Text color='textSubtle' marginBottom='24px'>{pool.stakingToken.symbol} Tokens</Text>\n            <Button\n              disabled={isAddTokenDisabled}\n              fullWidth\n              className='disabled'\n              onClick={() => {\n                window.open(`https://sparkswap.finance/#/swap/${pool.stakingToken.address[56]}`, '_blank')\n              }}\n            >Add More</Button>\n          </Flex>\n          {pool.stakingToken.symbol !== pool.earningToken.symbol &&\n          <Flex flexDirection='column'>\n            <Text fontSize='24px'>{formatNumber(totalEarningTokens, 2, 5)}</Text>\n            <Text color='textSubtle' marginBottom='24px'>{pool.earningToken.symbol} Tokens</Text>\n            <Button\n              fullWidth\n              onClick={() => {\n                window.open(`https://sparkswap.finance/#/swap/${pool.earningToken.address[56]}`, '_blank')\n              }}>Add More</Button>\n          </Flex>\n          }\n          <Flex flexDirection='column'>\n            <Text fontSize='24px'>{formatNumber(totalStakedTokens, 2, 5)}</Text>\n            <Text color='textSubtle' marginBottom='24px'>{pool.stakingToken.symbol} Staked</Text>\n            <Button fullWidth onClick={onPresentStakeAction} disabled={pool.isDepositDisabled}>Stake Tokens</Button>\n          </Flex>\n        </StyledFlex>\n\n        <StyledFlex>\n          <hr style={{ marginTop: '30px', border: 'none', borderTop: `2px solid ${theme.colors.primary}` }} />\n        </StyledFlex>\n        <StyledFlex marginTop='30px' marginBottom='20px'>\n          <Flex flexDirection='column'>\n            <Text fontSize='24px'>{formatNumber(rewardRate, 2, 10)}</Text>\n            <Text color='textSubtle' fontSize='17px'>Your Rate {pool.earningToken.symbol}/block</Text>\n          </Flex>\n          <Flex flexDirection='column'>\n            <Text fontSize='24px'>{formatNumber(totalEarnedTokens, 2, 5)}</Text>\n            <Text color='textSubtle' fontSize='17px'>{pool.earningToken.symbol} Token Earnings</Text>\n          </Flex>\n          <Flex flexDirection='column' mb='16px' marginLeft='5px'\n                onMouseEnter={() => setActiveSelect(true)}\n                onMouseLeave={() => setActiveSelect(false)}>\n\n            {userData.stakedBalance.eq(0) ? <Button disabled fullWidth> Withdraw </Button> : <Dropdown\n              position='top'\n              target={\n                // Disable component if total staked tokens is empty\n                <Button fullWidth variant='secondary' disabled={pool.isWithdrawDisabled}>\n                  <Text>Withdraw</Text> {activeSelect ? <ChevronDown /> : <ChevronUp />}\n                </Button>\n              }\n            >\n              {/* Disable Claim & Withdraw if no staked tokens */}\n              <Button type='button' disabled={pool.isWithdrawDisabled} fullWidth onClick={handleHarvestConfirm}>\n                Claim\n              </Button>\n              <Button type='button' disabled={pool.isWithdrawDisabled} onClick={handleUnstake}>\n                Claim & Withdraw\n              </Button>\n            </Dropdown>\n\n            }\n          </Flex>\n        </StyledFlex>\n        {!!pool.isWithdrawDisabled && < Text className='yellow' fontSize='15px' marginLeft='10px'>SRKb and SFUEL Withdrawals and Deposits are\n          locked for 48 hours during launchpad</Text>}\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { IconButton, AddIcon, MinusIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { Button, Text, Flex, useModal } from '@sparkpointio/sparkswap-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    // isStaked ? (\n    //   <Flex justifyContent=\"space-between\" alignItems=\"center\">\n    //     <Flex flexDirection=\"column\">\n    //       <>\n    //         <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n    //         {stakingTokenPrice !== 0 && (\n    //           <Text fontSize=\"12px\" color=\"textSubtle\">\n    //             <Balance\n    //               fontSize=\"12px\"\n    //               color=\"textSubtle\"\n    //               decimals={2}\n    //               value={stakedTokenDollarBalance}\n    //               prefix=\"~\"\n    //               unit=\" USD\"\n    //             />\n    //           </Text>\n    //         )}\n    //       </>\n    //     </Flex>\n    //     <Flex>\n    //       <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n    //         <MinusIcon color=\"primary\" width=\"24px\" />\n    //       </IconButton>\n    //       {reachStakingLimit ? (\n    //         <span ref={targetRef}>\n    //           <IconButton variant=\"secondary\" disabled>\n    //             <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n    //           </IconButton>\n    //         </span>\n    //       ) : (\n    //         <IconButton\n    //           variant=\"secondary\"\n    //           onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n    //           disabled={isFinished}\n    //         >\n    //           <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n    //         </IconButton>\n    //       )}\n    //     </Flex>\n    //     {tooltipVisible && tooltip}\n    //   </Flex>\n    // ) :\n\n    // Reserve function for future use\n    // <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired} fullWidth>\n    return (\n      <Button fullWidth disabled={isFinished && stakedBalance.isEqualTo(0)} onClick={ onPresentStake }>\n        {isFinished && stakedBalance.isGreaterThan(0) ? 'Withdraw' : 'Stake' }\n      </Button>\n    )\n  }\n\n  return <Flex justifyContent=\"space-between\" alignItems=\"center\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst StyledFlex = styled(Flex)`\n  & > * {\n    flex: 1;\n    height: 60px;\n  }\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice, isComingSoon } = pool\n  // getBalanceNumber(stakedBalance, stakingToken.decimals)\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  const totalStaked = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : 0\n  const totalEarned = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : 0\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" >\n        {harvest && (\n          <>\n            <Flex justifyContent=\"space-between\">\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\n                  {`${stakingToken.symbol} Staked`}\n                </Text>\n              </Box>\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\n                  {`${earningToken.symbol} Earned`}\n                </Text>\n              </Box>\n            </Flex>\n            <Flex justifyContent=\"space-between\" marginBottom=\"20px\">\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\"  bold fontSize=\"12px\"> */}\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\n                   {!isComingSoon && formatNumber(totalStaked,2,5)} {isComingSoon && '-'} {stakingToken.symbol}\n                </Text>\n              </Box>\n              <Box display=\"inline\">\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\n                   {!isComingSoon && formatNumber(totalEarned,2,5)} {isComingSoon && '-'} {earningToken.symbol}\n                </Text>\n              </Box>\n            </Flex>\n          </>\n        )}\n        {/* <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box> */}\n          <StyledFlex justifyContent=\"space-between\" marginTop=\"10px\">\n             <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n             {/* <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            /> */}\n          </StyledFlex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { CardBody, Flex, Text , Link, LinkExternal} from '@sparkpointio/sparkswap-uikit'\nimport { ThemeContext } from 'styled-components'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { usePoolPrice } from 'hooks/price'\nimport { getPoolApr } from 'utils/apr'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber , formatNumber } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport { useBlock } from 'state/block/hooks'\nimport { getBscScanLink } from 'utils'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData, startBlock, endBlock, isComingSoon } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  const theme = useContext(ThemeContext)\n\n  const totalStaked = pool.totalStaked ? getBalanceNumber(new BigNumber(pool.totalStaked.toString()), stakingToken.decimals) : 0\n\n  const rewardPerBlock = pool?.tokenPerBlock ? getBalanceNumber(new BigNumber(pool.tokenPerBlock.toString()), earningToken.decimals) : 0\n\n  const temp = new BigNumber(pool.tokenPerBlock).times( new BigNumber(userData.stakedBalance).div(pool.totalStaked)  )\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : 0\n\n  const { currentBlock } = useBlock()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n  getPoolBlockInfo(pool, currentBlock)\n\n  const {stakingPrice, rewardPrice} = usePoolPrice(stakingToken.address[56], earningToken.address[56])\n\n  const apr = getPoolApr(stakingPrice, rewardPrice, totalStaked, rewardPerBlock)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n    >\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n         <hr style={{width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px'}}/>\n\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>Remaining blocks</Text>\n            <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n              <Text>{!isComingSoon && `${ formatNumber(blocksRemaining, 0, 0) }`} {isComingSoon && '-'} blocks</Text>\n            </Link>\n          </Flex>\n\n          {/* <AprRow pool={pool} stakingTokenPrice={stakingTokenPrice} /> */}\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>Total Deposit</Text>\n            <Text>{!isComingSoon && `${ formatNumber(totalStaked) }`} {isComingSoon && '-'} {stakingToken.symbol}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n              <Text>Reward per block</Text>\n              <Text>{!isComingSoon && rewardPerBlock} {isComingSoon && '-'}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n            <Text>APR</Text>\n            <Text>{(apr === 0 || apr === null ? \"-- \" : apr.toFixed(2))}%</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\n        <Text>{t('Your Rate')}</Text>\n        <Text>{!isComingSoon && formatNumber(rewardRate,2,10)} {isComingSoon && '-'} {pool.earningToken.symbol}/block</Text>\n      </Flex>\n          <Flex mt=\"24px\" flexDirection=\"column\" marginTop=\"10px\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n          {/* <Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text> */}\n        {/* <CardFooter pool={pool} account={account} /> */ }\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('Info site')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, useMatchBreakpoints } from '@sparkpointio/sparkswap-uikit'\nimport {Box,CardBody} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningToken={tokens.cake}\n          stakingToken={tokens.cake}\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#39BEEC;}\\n\\t.st1{fill:#1B60A3;}\\n\\t.st2{fill:#FFFFFF;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolDark);\nexport default __webpack_public_path__ + \"static/media/pool-dark.852173fe.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  useMatchBreakpoints,\n} from '@sparkpointio/sparkswap-uikit'\nimport {   NotificationDot, } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const location = useLocation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/pools':\n      activeIndex = 0\n      break\n    case '/pools/history':\n      activeIndex = 1\n      break\n    case '/pools/upcoming':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={activeIndex} size=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Active')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Ended')}\n        </ButtonMenuItem>\n      </NotificationDot>\n      {/* <ButtonMenuItem as={Link} to={`${url}/upcoming`}>\n        {t('Upcoming')}\n      </ButtonMenuItem> */}\n    </ButtonMenu>\n  )\n\n   const stakedOnlySwitch = (\n     <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n     </Flex>\n   )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex style={{width: '100%' }}justifyContent=\"space-between\">\n          {/* {viewModeToggle} */}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {/* {stakedOnlySwitch}  */}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {/* {viewModeToggle} */}\n      {liveOrFinishedSwitch}\n      {/* {stakedOnlySwitch} */}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#39BEEC;}\\n\\t.st1{fill:#1B60A3;}\\n\\t.st2{fill:#727071;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolLight);\nexport default __webpack_public_path__ + \"static/media/pool-light.45788dfe.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useMemo, useRef, useState, useContext} from 'react'\nimport { useLocation, Route, useRouteMatch } from 'react-router-dom'\nimport styled, { ThemeContext } from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\nimport { Text } from '@sparkpointio/sparkswap-uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { SvgIcon } from '@material-ui/core';\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { StyledHr } from 'views/Farms/components/Divider'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport useMedia from 'use-media';\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\nimport { ReactComponent as PoolsDarkLogo } from './components/assets/pool-dark.svg';\nimport { ReactComponent as PoolsLightLogo} from './components/assets/pool-light.svg';\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: flex-start;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const theme = useContext(ThemeContext);\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const isMobile = useMedia({maxWidth: 500})\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const [upcomingPools, notUpcomingPools] = useMemo(() => partition(pools, (pool) => pool.isComingSoon), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showUpcomingPools = location.pathname.includes('upcoming')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showUpcomingPools){\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools // TODO: @koji @mat-ivan Please apply here how to filter upcoming pools\n    }\n    else if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n  const { path, url, isExact } = useRouteMatch()\n\n\n  return (\n    <>\n      <PageHeader background={theme.card.background}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" flexDirection={['column', null, 'row']} style={isMobile? { flexDirection: 'column-reverse'} : {minHeight: '20vh', marginLeft: '-12px'}} padding=\"24px\"> \n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\n              <span style={{borderBottom: `2px solid ${theme.colors.primary}`}}>Pools</span>\n            </Text>\n            <Text color=\"text\" style={isMobile? { fontSize: \"17px\" } : { fontSize: \"27px\" }}>\n                Earn SRK, SFUEL and other tokens by just staking!\n            </Text>\n          </Flex>\n          <Flex style={isMobile? {fontSize: '150px', margin: 'auto', marginTop: '20px', marginBottom: '20px' } : {fontSize: '240px', marginRight: '-137px', position: 'relative'}}>\n              <SvgIcon component={theme.isDark? PoolsDarkLogo : PoolsLightLogo} viewBox=\"0  0 384 512\" style={isMobile? {width: '200px'} : {width: '500px'}} fontSize=\"inherit\"/>\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" style={isMobile? { flexDirection: 'column'} : { flexDirection: 'row', marginLeft: '12px' }}>\n          <Flex>\n          <PoolTabButtons\n              stakedOnly={stakedOnly}\n              setStakedOnly={setStakedOnly}\n              hasStakeInFinishedPools={hasStakeInFinishedPools}\n              viewMode={viewMode}\n              setViewMode={setViewMode}\n          />\n         </Flex>\n         <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"16px\">\n        <SearchSortContainer>\n            {/* <PoolControls>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </PoolControls> */}\n            <PoolControls>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" marginRight=\"12px\" marginTop=\"12px\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </PoolControls>\n          </SearchSortContainer>\n          </Flex>\n          </Flex>\n        {/* \n        <div>\n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n            <Flex flexDirection=\"column\" mr={['8px', 0]}>\n              <Text color=\"text\" fontSize=\"24px\" bold>\n                \n              </Text>\n              <Text color=\"text\" fontSize=\"16px\">\n                {t(' Stake Liquidity Pool tokens to earn')}\n              </Text>\n            </Flex>\n          </Flex>\n        */}\n\n        { !showFinishedPools && !showUpcomingPools && (<div>\n          {/* <Text bold fontSize=\"20px\" marginLeft=\"24px\" paddingBottom=\"24px\">\n            {' '}\n            Stake tokens to earn{' '}\n          </Text> */}\n          <StyledHr style={{ marginTop: '35px', width: '100%'}}/>\n          \n          {/* Header title for Active Pools   */}\n          \n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('Stake tokens to earn')}\n                  </Heading>\n              </Flex>\n          </Flex>\n        </div>)}\n\n        {/* UPCOMING  */}\n        {showUpcomingPools && (\n          <>\n            <StyledHr style={{ marginTop: '35px'}}/>\n            \n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('These pools are coming in the near future. Stay tuned.')}\n                  </Heading>\n              </Flex>\n            </Flex>\n          </>\n        )}\n        \n\n        {/* ENDED  */}\n        {showFinishedPools && (\n          <>\n            <StyledHr style={{ marginTop: '35px'}}/>\n\n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\n                  <Heading scale=\"md\" color=\"text\">\n                    {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n                  </Heading>\n              </Flex>\n            </Flex>\n          </>\n        )}\n\n        {/* viewMode === ViewMode.CARD ? cardLayout : tableLayout */} \n       \n        {cardLayout}\n      \n        <div ref={loadMoreRef} />\n        {/* <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS,  } from '@sparkpointio/sparkswap-uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchProfile, usePollBlockNumber, usePollCoreFarmData } from 'state/hooks'\nimport { RedirectToPools } from 'views/Farms/Redirects'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\n// const Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path='/' exact>\n              <Pools />\n            </Route>\n            <Route path='/farms'>\n              <Farms />\n            </Route>\n            <Route path='/pools'>\n              <Pools />\n            </Route>\n            <Route path='/lottery'>\n              <Lottery />\n            </Route>\n            <Route path='/ifo'>\n              <Ifos />\n            </Route>\n            <Route path='/collectibles'>\n              <Collectibles />\n            </Route>\n            <Route exact path='/teams'>\n              <Teams />\n            </Route>\n            <Route path='/teams/:id'>\n              <Team />\n            </Route>\n            <Route path='/profile'>\n              <Profile />\n            </Route>\n            <Route path='/competition'>\n              <TradingCompetition />\n            </Route>\n            <Route path='/prediction'>\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path='/staking'>\n              <Redirect to='/pools' />\n            </Route>\n            <Route path='/syrup'>\n              <Redirect to='/pools' />\n            </Route>\n            <Route path='/nft'>\n              <Redirect to='/collectibles' />\n            </Route>\n            <Route path='/' component={RedirectToPools} />\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@sparkpointio/sparkswap-uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n"],"sourceRoot":""}