{"version":3,"sources":["components/layout/Flex.tsx","utils/latinise.ts","components/PageHeader/PageHeader.tsx","views/Farms/components/Divider.tsx","components/SearchInput/SearchInput.tsx","utils/getLiquidityUrlPathParts.ts","components/TokenPairImage/index.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/Loading.tsx","views/Farms/components/types.ts","views/Farms/components/WithdrawModal.tsx","views/Farms/components/Styled.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/Modals/Styled.tsx","views/Farms/components/Modals/Stake.tsx","views/Farms/components/Modals/ClaimModal.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","components/Balance.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/price.ts","hooks/useDelayedUnmount.ts","components/ApyCalculatorModal/index.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","components/Tags.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/assets/farm-dark.svg","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/assets/farm-light.svg","views/Farms/Farms.tsx","hooks/usePersistState.ts","components/Select/Select.tsx"],"names":["FlexLayout","styled","div","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Outer","Box","theme","background","colors","gradients","bubblegum","Inner","Container","PageHeader","children","props","StyledHr","textSubtle","primary","ModalHr","hr","StyledInput","Input","InputWrapper","mediaQueries","sm","SearchInput","onChangeCallback","onChange","placeholder","useState","toggled","setToggled","searchText","setSearchText","t","useTranslation","debouncedOnChange","useMemo","debounce","e","value","target","onBlur","getLiquidityUrlPathParts","mainTokenAddress","pairTokenAddress","wBNBAddressString","getWbnbAddress","mainTokenAddressString","process","pairTokenAddressString","secondPart","StyledLogo","img","PairLogoImg","Flex","getImageUrlFromToken","token","address","getAddress","symbol","tokens","wbnb","iconExtension","TokenPairImage","primaryToken","secondaryToken","src","alt","Wrapper","CardHeading","Tag","lpLabel","rewardToken","multiplier","isCommunityFarm","farmImage","tokenSymbol","farmSymbol","pairToken","justifyContent","alignItems","mb","flexDirection","style","textAlign","split","variant","width","height","useStake","pid","account","useWeb3React","masterChefContract","useMasterchef","onStake","useCallback","amount","contract","a","stake","txHash","console","info","useUnstake","onUnstake","unstake","CircularIndeterminate","sx","display","color","CircularProgress","ViewMode","WithdrawModal","farm","staked","earnings","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","getFullDisplayBalance","BigNumber","useToast","toastError","toastSuccess","currentTarget","validity","valid","title","marginTop","fontSize","bold","quoteToken","lpSymbol","margin","padding","disabled","fullWidth","onClick","error","DetailsCont","ActionDiv","ModalFooter","StyledTokenInput","isWarning","shadows","warning","inset","text","xs","ModalInput","onSelectMax","decimals","isBalanceZero","position","pattern","inputMode","step","min","size","mr","StyledFlex","CancelButton","Button","DepositButton","Stake","addLiquidityUrl","inputTitle","lpStakingContract","valNumber","dispatch","useAppDispatch","fullBalanceNumber","handleChange","sym","fetchFarmUserDataAsync","pids","handleSelectMax","isFinite","eq","gt","ClaimModal","DepositModal","addTokenUrl","handleUnstake","maxStake","requestedApproval","setRequestedApproval","setActiveSelect","userData","allowance","tokenBalance","stakedBalance","userRate","calculateUserRewardRate","lpAddresses","lpAddress","lpContract","useERC20","RewardTokenBalance","useTokenBalance","formatTokenBalance","getBalanceAmount","balance","toFormat","formatLPTokenBalance","formatStakedTokenBalance","formatTokenEarnings","muitheme","useTheme","largeScreen","useMediaQuery","breakpoints","up","isGreaterThanOrEqualTo","isApproved","setIsApproved","lpStakingAddress","stakingAddresses","useLPStakingContract","onApprove","useApprove","handleApprove","useModal","onPresentStake","onPresentWithdraw","paddingBottom","minWidth","as","href","Grid","onMouseEnter","onMouseLeave","StakeAction","userDataReady","stakingContract","exit","useExit","location","useLocation","handleStake","useLpTokenPrice","stakedBalanceBigNumber","lt","toLocaleString","toFixed","ROUND_DOWN","onPresentDeposit","formatStakedBalance","buttonTxt","hasEnded","isGreaterThan","parseFloat","some","item","pathname","includes","renderStakingButtons","Action","CardActions","tokenBalanceAsString","stakedBalanceAsString","UnlockButton","mt","Balance","isDisabled","unit","prefix","previousValue","useRef","useEffect","current","start","end","duration","separator","ActionContainer","xl","ActionTitles","ActionContent","Earned","HarvestAction","tokenRewardSymbol","earningsBigNumber","cakePrice","usePriceCakeBusd","BIG_ZERO","earningsBusd","displayBalance","isZero","multipliedBy","toNumber","onReward","claim","useClaim","textTransform","pr","ml","StyledLinkExternal","LinkExternal","DetailsSection","stakingAddress","lpInfoAddress","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","card","isPromotedFarm","radii","FarmCard","cardBorder","expanded","removed","toLocaleLowerCase","formatTotalDeposits","totalDeposits","formatTotalRewardRate","totalRewardRate","toUpperCase","earnLabel","liquidityUrlPathParts","apr","maximumFractionDigits","liquidityUrl","BASE_ADD_LIQUIDITY_URL","AddTokenUrl","BASE_EXCHANGE_URL","useContext","ThemeContext","lpTotalSupply","token1Address","token2Address","rewardTokenAddress","_token1Address","_token2Address","_rewardTokenAddress","LPPrice","setLPPrice","rewardPrice","setRewardPrice","web3","useWeb3","utils","toChecksumAddress","fetch","SPARKSWAP_API","concat","API_ASSETS","assets","json","API_SUMMARY","summary","pairLiquidity","Object","prototype","hasOwnProperty","call","API_LIQUIDITY","getBalanceNumber","API_LASTPRICE","fetchData","useFarmPrice","Number","getFarmV2Apr","rewardRate","isCommunity","border","backgroundColor","remainingDays","CardActionsContainer","getBscScanAddressUrl","infoURL","BASE_INFO_URL","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","GridItem","GridHeaderItem","ApyCalculatorModal","tokenPrice","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","num","getRoi","amountEarned","amountInvested","maxWidth","freq","fee","ApyButton","onPresentApyModal","event","stopPropagation","scale","AprWrapper","Apr","tokenAddress","quoteTokenAddress","originalValue","hideButton","TokenWrapper","Farm","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","ArrowIcon","ChevronDownIcon","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","undefined","CoreTag","outline","startIcon","CommunityTag","DualTag","IconButtonWrapper","Staked","lpPrice","times","marginBottom","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","dual","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","_style","_g","_g2","_g3","_g4","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isXs","tableSchema","columnNames","map","column","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","Link","to","show","_extends","assign","i","arguments","length","source","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFarmDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","type","className","d","cx","cy","r","ForwardRef","SvgFarmLight","ControlContainer","ToggleWrapper","Text","LabelWrapper","FilterContainer","ViewControls","Farms","Image","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","CARD","localStorageKey","viewMode","sortOption","setSortOption","isArchived","isInactive","useMedia","usePollFarmsData","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","minHeight","marginLeft","marginRight","SvgIcon","component","isDark","FarmsDarkLogo","FarmsLightLogo","Page","checked","Select","options","option","TABLE","sort","b","exact","renderContent","defaultOptions","hydrate","identity","dehydrate","initialValue","userOptions","valueFromLS","localStorage","getItem","JSON","parse","setValue","setItem","stringify","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","index","selectedIndex"],"mappings":"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","file":"static/js/18.07174a9d.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    min-height: 500px;\n    height: auto;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  // background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n  margin-bottom: 32px;\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n\nexport const StyledHr = styled.div`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({ theme }) => theme.colors.primary};\n  width: 100%;\n`\n\nexport const ModalHr = styled.hr`\n  border-style: solid none none none;\n  border-width: 2px;\n  border-color: ${({ theme }) => theme.colors.primary};\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ mainTokenAddress, pairTokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const mainTokenAddressString: string = mainTokenAddress ? mainTokenAddress[chainId] : null\n  const pairTokenAddressString: string = pairTokenAddress ? pairTokenAddress[chainId] : null\n  const firstPart =\n    !mainTokenAddressString || mainTokenAddressString === wBNBAddressString ? 'ETH' : mainTokenAddressString\n  const secondPart =\n    !pairTokenAddressString || pairTokenAddressString === wBNBAddressString ? 'ETH' : pairTokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { TokenPairImageProps as UIKitTokenPairImageProps } from '@pancakeswap/uikit'\nimport { Flex } from '@sparkpointio/sparkswap-uikit'\nimport styled from 'styled-components'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst StyledLogo = styled.img`\n  width: 50px;\n`\nconst PairLogoImg = styled(Flex)`\n  margin-bottom: 30px;\n`\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.${token.iconExtension ?? 'svg'}`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken }) => {\n  return (\n    <PairLogoImg>\n      <StyledLogo src={getImageUrlFromToken(primaryToken)} alt=\"logo-img\" />\n      <StyledLogo src={getImageUrlFromToken(secondaryToken)} alt=\"logo-img\" />\n    </PairLogoImg>\n  )\n}\n\nexport default TokenPairImage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@sparkpointio/sparkswap-uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  farmSymbol?: string\n  tokenSymbol?: string\n  rewardToken?: string\n  token: Token\n  quoteToken: Token\n  pairToken?: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n  farmSymbol,\n  rewardToken,\n  token,\n  pairToken,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Flex flexDirection=\"row\" alignItems=\"\">\n        <Heading mb=\"4px\" style={{ textAlign: 'left' }}>\n          Stake <br /> {lpLabel.split(' ')[0]} <br /> Earn {rewardToken}\n        </Heading>\n      </Flex>\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={pairToken} width={64} height={64} />\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string, contract: Contract) => {\n      const txHash = await stake(contract ?? masterChefContract, pid, amount, account, !!contract)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward, updateUserStakedBalance } from 'state/actions'\nimport { exit, sousEmergencyUnstake, sousUnstake, unstake } from 'utils/callHelpers'\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\n\nexport const useExit = (contract: string) => {\n  const { account } = useWeb3React()\n  const stakingContract = useLPStakingContract(contract)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await exit(stakingContract, account)\n      console.info(txHash)\n    },\n    [account, stakingContract],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import * as React from 'react'\nimport { Box, CircularProgress } from '@material-ui/core'\n\nexport default function CircularIndeterminate() {\n  return (\n    <Box sx={{ display: 'flex', color: '#FFF' }}>\n      <CircularProgress color=\"inherit\" />\n    </Box>\n  )\n}\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Flex, Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\n\ninterface WithdrawModalProps {\n  farm?: any\n  staked?: any\n  earnings?: any\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  farm,\n  staked,\n  earnings,\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop=\"-10px\" style={{ width: 'auto' }} alignItems=\"center\" flexDirection=\"column\">\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize=\"28px\" bold>\n          {earnings} {farm.quoteToken.symbol}\n        </Text>\n        <Text>and withdrawing the staked amount of</Text>\n        <Text fontSize=\"28px\" bold>\n          {staked} {farm.lpSymbol}\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\n        <Button\n          disabled={pendingTx}\n          fullWidth\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your LPs and earnings have been transferred to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nconst Container = styled.div`\n  min-width: 720px;\n  display: flex;\n  justify-content: space-between;\n  height: auto;\n`\n\nconst DetailsCont = styled.div`\n  width: 30%;\n  height: auto;\n  overflow: visible;\n`\n\nconst ActionDiv = styled.div`\n  margin: 15px 0px;\n  padding: 10px;\n`\nconst ModalFooter = styled.div`\n  max-width: 720px;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport { DetailsCont, ActionDiv, ModalFooter }\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n  border: 2px solid ${({ theme }) => theme.colors.primary};\n  // box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  flex: 1;\n  margin: 0 8px;\n  padding: 0 8px;\n  background: none;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`\n\n// const StyledErrorMessage = styled(Text)`\n//   position: absolute;\n//   bottom: -22px;\n//\n//   a {\n//     display: inline;\n//   }\n// `\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  // symbol,\n  onChange,\n  onSelectMax,\n  value,\n  // addLiquidityUrl,\n  // inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  // const displayBalance = (balance: string) => {\n  //   if (isBalanceZero) {\n  //     return '0'\n  //   }\n  //   const balanceBigNumber = new BigNumber(balance)\n  //   if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n  //     return balanceBigNumber.toLocaleString()\n  //   }\n  //   return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  // }\n\n  return (\n    <div style={{ position: 'relative', margin: '15px 0px' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        {/* <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n        </Flex> */}\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button size=\"sm\" onClick={onSelectMax} mr=\"8px\" mb=\"4px\">\n            {t('Max')}\n          </Button>\n          {/* <Text fontSize=\"16px\">{symbol}</Text> */}\n        </Flex>\n      </StyledTokenInput>\n      <Flex>\n        {/* <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Available')}: {getFullDisplayBalance}\n          </Text>  */}\n      </Flex>\n      {/* {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )} */}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Button } from '@sparkpointio/sparkswap-uikit'\n\nconst Container = styled.div`\n  margin-top: -30px;\n  display: flex;\n  flex-direction: column;\n  min-width: auto;\n`\nconst StyledFlex = styled(Flex)`\n  padding: 10px 0px;\n`\nconst CancelButton = styled(Button)`\n  flex: 1;\n  margin-right: 10px;\n`\nconst DepositButton = styled(Button)`\n  flex: 1;\n  margin-left: 10px;\n`\n\nexport { StyledFlex, CancelButton, DepositButton }\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport Container, { CancelButton, DepositButton, StyledFlex } from './Styled'\nimport useToast from '../../../../hooks/useToast'\nimport { useTranslation } from '../../../../contexts/Localization'\nimport { useAppDispatch } from '../../../../state'\nimport { fetchFarmUserDataAsync } from '../../../../state/farms'\n\ninterface StakeModalInterface {\n  pid: number\n  onDismiss?: () => void\n  max: BigNumber\n  symbol: string\n  placeholder?: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  onConfirm: (amount: string, contract: Contract) => void\n  lpStakingContract?: Contract\n}\n\nconst Stake: React.FC<StakeModalInterface> = ({\n  pid,\n  onDismiss,\n  max,\n  symbol,\n  addLiquidityUrl,\n  inputTitle,\n  onConfirm,\n  lpStakingContract,\n}) => {\n  const [val, setVal] = useState('0')\n  const [pendingTx, setPendingTx] = useState(false)\n  const valNumber = new BigNumber(val)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const { toastError, toastSuccess } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const onClick = async () => {\n    try {\n      setPendingTx(true)\n      await onConfirm(val, lpStakingContract)\n      setPendingTx(false)\n      toastSuccess(`${t('Staked')}!`, t('Your %sym% tokens have been staked to the pool!', { sym: symbol }))\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setPendingTx(false)\n    }\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n  return (\n    <Modal title=\"\" onDismiss={!pendingTx && onDismiss}>\n      <Container>\n        <Text>Stake amount: </Text>\n        <ModalInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={fullBalance}\n          symbol={symbol}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </Container>\n      <StyledFlex justifyContent=\"space-between\">\n        <Text>{symbol} balance: </Text>\n        <Text>{fullBalance}</Text>\n      </StyledFlex>\n      <StyledFlex justifyContent=\"space-between\">\n        <CancelButton onClick={onDismiss}>Close</CancelButton>\n        <DepositButton\n          onClick={onClick}\n          // disable Deposit button if not yet approved\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n        >\n          Deposit\n        </DepositButton>\n      </StyledFlex>\n    </Modal>\n  )\n}\n\nexport default Stake\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal, Text, Flex } from '@sparkpointio/sparkswap-uikit'\n\ninterface ClaimModalProps {\n  onDismiss?: () => void\n}\n\nconst ClaimModal: React.FC<ClaimModalProps> = ({ onDismiss }) => {\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop=\"-10px\" style={{ width: '450px' }} alignItems=\"center\" flexDirection=\"column\">\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize=\"28px\" bold>\n          78.912 SRK Tokens\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\n        <Button fullWidth>Confirm</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport { Contract } from 'web3-eth-contract'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Modal, Skeleton, Text, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport useMedia from 'use-media'\nimport { useTheme } from '@mui/material/styles'\nimport { Grid } from '@mui/material'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WithdrawModal from './WithdrawModal'\nimport Container, { ActionDiv, DetailsCont, ModalFooter } from './Styled'\nimport { ModalHr } from './Divider'\nimport StakeModal from './Modals/Stake'\nimport ClaimModal from './Modals/ClaimModal'\nimport { calculateUserRewardRate } from '../../../utils/farmHelpers'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, contract: Contract) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n  handleUnstake?: (amount: string) => void\n  maxStake?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  addLiquidityUrl,\n  addTokenUrl,\n  handleUnstake,\n  farm,\n  maxStake,\n}) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const [activeSelect, setActiveSelect] = useState(false)\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const userRate = calculateUserRewardRate(farm)\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { pid, lpAddresses } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const lpContract = useERC20(lpAddress)\n  const RewardTokenBalance = useTokenBalance(getAddress(farm.quoteToken.address))\n  const formatTokenBalance = getBalanceAmount(RewardTokenBalance.balance).toFormat(6)\n  const formatLPTokenBalance = getBalanceAmount(new BigNumber(tokenBalance)).toFormat(6)\n  const formatStakedTokenBalance = getBalanceAmount(new BigNumber(stakedBalance)).toFormat(6)\n  const formatTokenEarnings = getBalanceAmount(new BigNumber(earnings)).toFormat(6)\n  const muitheme = useTheme()\n  const largeScreen = useMediaQuery(muitheme.breakpoints.up('md'))\n\n  const [isApproved, setIsApproved] = useState(\n    account && allowance && new BigNumber(allowance).isGreaterThanOrEqualTo(tokenBalance),\n  )\n  const lpStakingAddress = getAddress(farm.stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setIsApproved(true)\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n  const [onPresentStake] = useModal(\n    <StakeModal\n      pid={pid}\n      onConfirm={onConfirm}\n      lpStakingContract={lpStakingContract}\n      max={max}\n      symbol={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      inputTitle={t('Stake')}\n    />,\n  )\n\n  const [onPresentClaim] = useModal(<ClaimModal />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedTokenBalance}\n      earnings={formatTokenEarnings}\n      max={maxStake}\n      onConfirm={handleUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  return (\n    <Modal title={t('Account Info')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" fontSize=\"14px\" style={{ paddingBottom: '30px', marginTop: '-40px' }}>\n        Staking, balances & earnings\n      </Text>\n\n      <Container style={largeScreen ? { flexDirection: 'row' } : { flexDirection: 'column', minWidth: 'auto' }}>\n        {/* <Container> */}\n\n        <DetailsCont style={largeScreen ? {} : { width: 'auto' }}>\n          <Text bold fontSize=\"24px\">\n            {formatTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {farm.quoteToken.symbol}\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addTokenUrl}>\n              Get {farm.quoteToken.symbol}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont style={largeScreen ? {} : { width: 'auto' }}>\n          <Text bold fontSize=\"24px\">\n            {formatLPTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {tokenName} Tokens\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addLiquidityUrl}>\n              Get {tokenName}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont style={largeScreen ? {} : { width: 'auto' }}>\n          <Text bold fontSize=\"24px\">\n            {formatStakedTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            Your {tokenName} Deposits\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            {isApproved ? (\n              <Button fullWidth onClick={onPresentStake}>\n                Stake {tokenName}\n              </Button>\n            ) : (\n              <Button fullWidth onClick={handleApprove} disabled={requestedApproval}>\n                Enable Farm\n              </Button>\n            )}\n          </ActionDiv>\n        </DetailsCont>\n      </Container>\n      <ModalHr />\n      <Grid>\n        <ModalFooter>\n          <DetailsCont>\n            <Text bold fontSize=\"24px\">\n              {userRate}\n            </Text>\n            <Text color=\"textSubtle\" fontSize=\"14px\">{`Your Rate ${farm.quoteToken.symbol}/week`}</Text>\n          </DetailsCont>\n          <DetailsCont>\n            <Text bold fontSize=\"24px\">\n              {formatTokenEarnings ?? <Skeleton width={60} display=\"inline-block\" />}\n            </Text>\n            <Text color=\"textSubtle\" fontSize=\"14px\">{`${farm.quoteToken.symbol} Token Earnings`}</Text>\n          </DetailsCont>\n\n          <DetailsCont\n            style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n            onMouseEnter={() => setActiveSelect(true)}\n            onMouseLeave={() => setActiveSelect(false)}\n          >\n            <Button fullWidth onClick={onPresentWithdraw}>\n              <Text>Claim & Withdraw</Text>\n            </Button>\n          </DetailsCont>\n        </ModalFooter>\n      </Grid>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport useStake from 'hooks/useStake'\nimport useUnstake, { useExit } from 'hooks/useUnstake'\nimport { Farm } from 'state/types'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Loading from 'components/Loading'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { calculateUserRewardRate } from '../../../../utils/farmHelpers'\n\ninterface FarmCardActionsProps {\n  userDataReady?: boolean\n  userRate?: string\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  addTokenUrl,\n  farm,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useExit(getAddress(farm.stakingAddresses))\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string, contract?: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      addTokenUrl={addTokenUrl}\n      farm={farm}\n      handleUnstake={handleUnstake}\n      maxStake={stakedBalance}\n    />,\n  )\n  const earnings = getBalanceAmount(new BigNumber(farm.userData.earnings)).toFormat(6)\n  const formatStakedBalance = getBalanceAmount(new BigNumber(farm.userData.stakedBalance)).toFormat(6)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedBalance}\n      earnings={earnings}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    let buttonTxt = 'Deposit'\n    if (farm.hasEnded && stakedBalance.isGreaterThan(0)) {\n      buttonTxt = 'Withdraw'\n    }\n    return (\n      <Button\n        onClick={farm.hasEnded && parseFloat(farm.userData.stakedBalance) ? onPresentWithdraw : onPresentDeposit}\n        disabled={\n          farm.hasEnded &&\n          !parseFloat(farm.userData.stakedBalance) &&\n          ['history', 'archived'].some((item) => location.pathname.includes(item))\n        }\n        fullWidth\n      >\n        {userDataReady ? buttonTxt : <Loading />}\n      </Button>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      {/* <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading> */}\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({\n  userDataReady,\n  farm,\n  account,\n  addLiquidityUrl,\n  addTokenUrl,\n}) => {\n  const { t } = useTranslation()\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n\n  const renderDepositButton = () => {\n    return (\n      <StakeAction\n        userDataReady={userDataReady}\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        addTokenUrl={addTokenUrl}\n        farm={farm}\n      />\n    )\n  }\n\n  return <Action>{!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderDepositButton()}</Action>\n}\n\nexport default CardActions\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport { Button, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useClaim } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { ActionContainer, ActionContent, ActionTitles, Earned } from './styles'\nimport useToast from '../../../../../hooks/useToast'\n\ninterface HarvestActionProps {\n  pid: number\n  stakingContract?: string\n  tokenRewardSymbol?: string\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  stakingContract,\n  tokenRewardSymbol,\n  pid,\n  userData,\n  userDataReady,\n}) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useClaim(stakingContract)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  return (\n    <ActionContainer style={{ margin: '10px 0' }}>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {tokenRewardSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Claimed')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: tokenRewardSymbol }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {t('Claim')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest, claim } from 'utils/callHelpers'\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\n\nexport const useClaim = (stakingContract: string) => {\n  const { account } = useWeb3React()\n  const contract = useLPStakingContract(stakingContract)\n\n  const handleClaim = useCallback(async () => {\n    const txHash = await claim(contract, account)\n    return txHash\n  }, [account, contract])\n\n  return { onReward: handleClaim }\n}\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  stakingAddress?: string\n  lpInfoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({ stakingAddress, lpInfoAddress }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      {/* <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )} */}\n      <StyledLinkExternal href={stakingAddress}>View Staking Contract</StyledLinkExternal>\n      <StyledLinkExternal href={lpInfoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React, { useContext, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes, ThemeContext } from 'styled-components'\nimport { Flex, Skeleton, Text } from '@sparkpointio/sparkswap-uikit'\nimport { Farm } from 'state/types'\nimport { useFarmPrice } from 'hooks/price'\nimport { getFarmV2Apr } from 'utils/apr'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_EXCHANGE_URL, BASE_INFO_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport HarvestAction from '../FarmTable/Actions/HarvestAction'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { getBalanceAmount } from '../../../../utils/formatBalance'\nimport ExpandableSectionButton from '../../../../components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport { getBscScanAddressUrl } from '../../../../utils/bscscan'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  // background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border: 5px solid ${(props) => props.theme.colors.primary};\n  // border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  max-width: 352px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ userDataReady, farm, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const formatTotalDeposits = getBalanceAmount(new BigNumber(farm.totalDeposits ?? 0)).toFormat(4)\n  const formatTotalRewardRate = getBalanceAmount(new BigNumber(farm.totalRewardRate ?? 0)).toFormat(4)\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.quoteToken.symbol\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n\n  const stakingAddress = getAddress(farm.stakingAddresses)\n\n  const addLiquidityUrl = `${farm.liquidityUrl ?? BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const AddTokenUrl = `${BASE_EXCHANGE_URL}/#/swap/${farm.token.address[56]}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  const theme = useContext(ThemeContext)\n\n  const { LPPrice, rewardPrice } = useFarmPrice(\n    Number(farm.lpTotalSupply),\n    farm.token.address[56],\n    farm.pairToken.address[56],\n    farm.quoteToken.address[56],\n  )\n\n  const aprBlackList = ['0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b']\n  const apr = aprBlackList.includes(farm.lpAddresses[56])\n    ? null\n    : getFarmV2Apr(LPPrice, rewardPrice, Number(farm.totalDeposits), Number(farm.rewardRate))\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImage={farmImage}\n        farmSymbol={farm.lpSymbol}\n        tokenSymbol={farm.token.symbol}\n        rewardToken={farm.quoteToken.symbol}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n        pairToken={farm.pairToken}\n      />\n      <hr style={{ width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px' }} />\n      {/* {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )} */}\n\n      <Flex justifyContent=\"space-between\" style={{ textAlign: 'left' }}>\n        <Text>{t('Total Deposits')}</Text>\n        <Text color=\"textSubtle\">\n          {farm.totalDeposits ? formatTotalDeposits : <Skeleton width={60} display=\"inline-block\" />}\n        </Text>\n      </Flex>\n      <Flex>\n        <HarvestAction\n          stakingContract={getAddress(farm.stakingAddresses)}\n          tokenRewardSymbol={earnLabel}\n          userDataReady={userDataReady}\n          userData={farm.userData}\n          pid={farm.pid}\n        />\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('APR')}</Text>\n        <Text color=\"textSubtle\">{apr === 0 || apr === null ? '-- ' : apr.toFixed(2)}%</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Rate')}</Text>\n        <Text color=\"textSubtle\">\n          {formatTotalRewardRate ?? <Skeleton width={60} display=\"inline-block\" />} {earnLabel} / week\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Duration')}</Text>\n        <Text color=\"textSubtle\">{farm.remainingDays ?? <Skeleton width={60} display=\"inline-block\" />} Days</Text>\n      </Flex>\n      <CardActionsContainer\n        userDataReady={userDataReady}\n        farm={farm}\n        account={account}\n        addLiquidityUrl={addLiquidityUrl}\n        addTokenUrl={AddTokenUrl}\n      />\n\n      <DetailsSection\n        removed={removed}\n        stakingAddress={getBscScanAddressUrl(stakingAddress)}\n        lpInfoAddress={`${farm.infoURL ?? BASE_INFO_URL}/${lpAddress}`}\n        lpLabel={lpLabel}\n      />\n\n      {/* <Divider />\n       <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getBscScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n          totalValueFormatted={farm.totalDeposits}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n      <Flex justifyContent='center'>\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '56') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>)}\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '1') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Ethereum Blockchain')}</Text>)}\n      </Flex> */}\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import { useEffect, useState } from 'react'\nimport { SPARKSWAP_API, API_ASSETS, API_SUMMARY, API_LIQUIDITY, API_LASTPRICE } from 'config'\nimport useWeb3 from 'hooks/useWeb3'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport const usePoolPrice = (stakingTokenAddress: string, rewardTokenAddress: string) => {\n  const [stakingPrice, setStakingPrice] = useState(0)\n  const [rewardPrice, setRewardPrice] = useState(0)\n\n  const web3 = useWeb3()\n  let _stakingTokenAddress\n  let _rewardTokenAddress\n  try {\n    _stakingTokenAddress = web3.utils.toChecksumAddress(stakingTokenAddress)\n    _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\n  } catch {\n    console.error('Invalid staking and reward address')\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\n        assets = await assets.json()\n        const lastPrice = 'last_price'\n\n        setStakingPrice(assets[_stakingTokenAddress][lastPrice])\n        setRewardPrice(assets[_rewardTokenAddress][lastPrice])\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setStakingPrice, setRewardPrice, _stakingTokenAddress, _rewardTokenAddress])\n\n  return { stakingPrice, rewardPrice }\n}\n\nexport const useFarmPrice = (\n  lpTotalSupply: number,\n  token1Address: string,\n  token2Address: string,\n  rewardTokenAddress: string,\n) => {\n  const [LPPrice, setLPPrice] = useState(0)\n  const [rewardPrice, setRewardPrice] = useState(0)\n\n  const web3 = useWeb3()\n  let _token1Address\n  let _token2Address\n  let _rewardTokenAddress\n  try {\n    _token1Address = web3.utils.toChecksumAddress(token1Address)\n    _token2Address = web3.utils.toChecksumAddress(token2Address)\n    _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\n  } catch {\n    console.error('Invalid staking and reward address')\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\n        assets = await assets.json()\n        let summary = await fetch(SPARKSWAP_API.concat(API_SUMMARY))\n        summary = await summary.json()\n\n        let pairLiquidity\n\n        if (Object.prototype.hasOwnProperty.call(summary, _token1Address.concat('_', _token2Address))) {\n          pairLiquidity = summary[_token1Address.concat('_', _token2Address)][API_LIQUIDITY]\n        } else {\n          pairLiquidity = summary[_token2Address.concat('_', _token1Address)][API_LIQUIDITY]\n        }\n\n        setLPPrice(pairLiquidity / getBalanceNumber(new BigNumber(lpTotalSupply), 18))\n        setRewardPrice(assets[_rewardTokenAddress][API_LASTPRICE])\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setLPPrice, setRewardPrice, lpTotalSupply, _token1Address, _token2Address, _rewardTokenAddress])\n\n  return { LPPrice, rewardPrice }\n}\n\nexport default usePoolPrice\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const mainTokenAddress = quoteTokenAddress\n  const pairTokenAddress = tokenAddress\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ mainTokenAddress, pairTokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <div>\n      {t('The multiplier represents the amount of CAKE rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.')}\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { Contract } from 'web3-eth-contract'\nimport { BigNumber } from 'bignumber.js'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\nimport { getAddress } from '../../../../../utils/addressHelpers'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  token,\n  pairToken,\n  userDataReady,\n  stakingAddresses,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: token.address,\n    pairTokenAddress: pairToken.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string, contract: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const lpStakingAddress = getAddress(stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const dispatch = useAppDispatch()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = getBscScanAddressUrl(lpAddress)\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#FFFFFF;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4C394.1,161,391,97.2,390.9,94.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmDark);\nexport default __webpack_public_path__ + \"static/media/farm-dark.781ef184.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#727071;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4c39-39,35.9-102.8,35.8-105.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmLight);\nexport default __webpack_public_path__ + \"static/media/farm-light.f8d41a65.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useLocation, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Image, RowType, Toggle } from '@pancakeswap/uikit'\nimport { Text } from '@sparkpointio/sparkswap-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport useMedia from 'use-media'\nimport { SvgIcon } from '@material-ui/core'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader'\nimport { useTheme } from '@mui/material/styles'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { StyledHr } from 'views/Farms/components/Divider'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport { ReactComponent as FarmsDarkLogo } from './components/assets/farm-dark.svg'\nimport { ReactComponent as FarmsLightLogo } from './components/assets/farm-light.svg'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.CARD, { localStorageKey: 'sparkswap_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('earned')\n  const theme = useContext(ThemeContext)\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n  const isMobile = useMedia({ maxWidth: 500 })\n  const muitheme = useTheme()\n  const largeScreen = useMediaQuery(muitheme.breakpoints.up('md'))\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && !farm.hasEnded && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.hasEnded && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return (\n            latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery) ||\n            latinise(farm.quoteToken.symbol.toLowerCase()).includes(lowercaseQuery)\n          )\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        // case 'promoted':\n        //   return orderBy(\n        //     farms,\n        //     (farm: FarmWithStakedValue) => (farm.isPromoted ?? 0),\n        //     'desc',\n        //   )\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'duration':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.remainingDays ? Number(farm.remainingDays) : 0),\n            'desc',\n          )\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  const [activeTab, setActiveTab] = useState(0)\n  const handleItemClick = (index: number) => setActiveTab(index)\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n    // Uncomment this if !comingsoon\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          {/* {farmsList(activeFarms).map((farm) => ( */}\n          {/*  <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} /> */}\n          {/* ))} */}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const renderInactiveContent = (): JSX.Element => {\n    return (\n      <div>\n        <div style={{ margin: '20px' }}>\n          <Text fontSize=\"24px\" bold>\n            {' '}\n            Inactive Liquidity Pools{' '}\n          </Text>\n        </div>\n\n        <FlexLayout>\n          {farmsList(inactiveFarms).map((farm) => (\n            <FarmCard\n              userDataReady={userDataReady}\n              key={farm.pid}\n              farm={farm}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <PageHeader background={theme.card.background}>\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexDirection={['column', null, 'row']}\n          style={isMobile ? { flexDirection: 'column-reverse' } : { minHeight: '20vh', marginLeft: '-16px' }}\n        >\n          <Flex\n            flexDirection=\"column\"\n            mr={['8px', 0]}\n            style={largeScreen ? { justifyContent: 'space-around' } : { textAlign: 'center' }}\n          >\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\n              Farms <StyledHr style={largeScreen ? { width: '25%' } : { width: '100%' }} />\n            </Text>\n            <Text color=\"text\" style={isMobile ? { fontSize: '17px' } : { fontSize: '27px' }}>\n              Earn SRK, SFUEL and other tokens by staking LP tokens!\n            </Text>\n          </Flex>\n          <Flex\n            style={\n              isMobile\n                ? {\n                    fontSize: '150px',\n                    margin: 'auto',\n                    marginTop: '20px',\n                    marginBottom: '20px',\n                  }\n                : { fontSize: '240px', marginRight: '-118px' }\n            }\n          >\n            <SvgIcon\n              component={theme.isDark ? FarmsDarkLogo : FarmsLightLogo}\n              viewBox=\"0  0 384 512\"\n              style={isMobile ? { width: '200px' } : { width: '500px' }}\n              fontSize=\"inherit\"\n            />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            {/* <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} /> */}\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  // {\n                  //   label: t('Hot'),\n                  //   value: 'hot',\n                  // },\n                  // {\n                  //   label: t('APR'),\n                  //   value: 'apr',\n                  // },\n                  // {\n                  //   label: t('Multiplier'),\n                  //   value: 'multiplier',\n                  // },\n                  // {\n                  //   label: t('Promoted'),\n                  //   value: 'promoted',\n                  // },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Duration'),\n                    value: 'duration',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n\n        {renderContent()}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}