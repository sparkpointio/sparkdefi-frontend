{"version":3,"sources":["components/Select/Select.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/CardHeading.tsx","components/Loading.tsx","views/Farms/components/types.ts","views/Farms/components/WithdrawModal.tsx","views/Farms/components/Styled.tsx","views/Farms/components/Modals/Styled.tsx","views/Farms/components/Modals/Stake.tsx","views/Farms/components/Modals/ClaimModal.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/assets/farm-dark.svg","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/assets/farm-light.svg","views/Farms/Farms.tsx"],"names":["DropDownHeader","styled","div","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","width","props","isOpen","css","DropDownList","ul","ListItem","li","Select","options","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","useEffect","current","offsetWidth","offsetHeight","ref","onClick","label","color","map","option","index","selectedIndex","getLiquidityUrlPathParts","mainTokenAddress","pairTokenAddress","wBNBAddressString","getWbnbAddress","mainTokenAddressString","process","pairTokenAddressString","secondPart","Wrapper","Flex","CardHeading","Tag","lpLabel","rewardToken","multiplier","isCommunityFarm","farmImage","tokenSymbol","farmSymbol","token","pairToken","justifyContent","alignItems","mb","flexDirection","style","textAlign","split","TokenPairImage","variant","primaryToken","secondaryToken","CircularIndeterminate","Box","sx","display","CircularProgress","ViewMode","WithdrawModal","farm","staked","earnings","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","t","useTranslation","fullBalance","useMemo","getFullDisplayBalance","BigNumber","useToast","toastError","toastSuccess","useCallback","e","currentTarget","validity","valid","value","replace","title","marginTop","fontSize","bold","quoteToken","symbol","lpSymbol","margin","padding","disabled","fullWidth","a","console","error","Container","DetailsCont","ActionDiv","ModalFooter","StyledFlex","CancelButton","Button","DepositButton","Stake","pid","addLiquidityUrl","inputTitle","lpStakingContract","valNumber","dispatch","useAppDispatch","account","useWeb3React","fullBalanceNumber","handleChange","sym","fetchFarmUserDataAsync","pids","handleSelectMax","ModalInput","onSelectMax","isFinite","eq","gt","ClaimModal","DepositModal","addTokenUrl","handleUnstake","maxStake","requestedApproval","setRequestedApproval","setActiveSelect","userData","allowance","tokenBalance","stakedBalance","userRate","calculateUserRewardRate","lpAddresses","lpAddress","getAddress","lpContract","useERC20","RewardTokenBalance","useTokenBalance","address","formatTokenBalance","getBalanceAmount","balance","toFormat","formatLPTokenBalance","formatStakedTokenBalance","formatTokenEarnings","muitheme","useTheme","largeScreen","useMediaQuery","breakpoints","up","isGreaterThanOrEqualTo","isApproved","setIsApproved","lpStakingAddress","stakingAddresses","useLPStakingContract","onApprove","useApprove","handleApprove","useModal","onPresentStake","onPresentWithdraw","paddingBottom","minWidth","as","target","href","Grid","onMouseEnter","onMouseLeave","StakeAction","userDataReady","onStake","useStake","onUnstake","useExit","location","useLocation","handleStake","useLpTokenPrice","amount","contract","stakedBalanceBigNumber","lt","toLocaleString","toFixed","ROUND_DOWN","onPresentDeposit","formatStakedBalance","buttonTxt","hasEnded","isGreaterThan","parseFloat","some","item","pathname","includes","renderStakingButtons","Action","CardActions","tokenBalanceAsString","stakedBalanceAsString","UnlockButton","mt","ActionContainer","xl","ActionTitles","ActionContent","Earned","text","HarvestAction","stakingContract","tokenRewardSymbol","earningsBigNumber","cakePrice","usePriceCakeBusd","BIG_ZERO","earningsBusd","displayBalance","isZero","multipliedBy","toNumber","onReward","useClaim","textTransform","pr","Balance","decimals","unit","prefix","ml","StyledLinkExternal","LinkExternal","DetailsSection","stakingAddress","lpInfoAddress","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","card","background","primary","isPromotedFarm","radii","FarmCard","cardBorder","expanded","removed","toLocaleLowerCase","formatTotalDeposits","totalDeposits","formatTotalRewardRate","totalRewardRate","toUpperCase","earnLabel","liquidityUrlPathParts","apr","maximumFractionDigits","liquidityUrl","BASE_ADD_LIQUIDITY_URL","AddTokenUrl","BASE_EXCHANGE_URL","useContext","ThemeContext","useFarmPrice","Number","lpTotalSupply","LPPrice","rewardPrice","getFarmV2Apr","rewardRate","isCommunity","border","backgroundColor","remainingDays","CardActionsContainer","getBscScanAddressUrl","infoURL","BASE_INFO_URL","ApyButton","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","onPresentApyModal","event","stopPropagation","scale","textSubtle","AprWrapper","Apr","tokenAddress","quoteTokenAddress","originalValue","hideButton","TokenWrapper","Farm","useFarmUser","rawStakedBalance","getBalanceNumber","Amount","span","earned","textDisabled","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","undefined","IconButtonWrapper","Staked","useUnstake","lpPrice","times","mr","marginBottom","expandAnimation","collapseAnimation","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","dual","bsc","info","StakedAction","Label","ContentContainer","CellLayout","children","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","_style","_g","_g2","_g3","_g4","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isXs","tableSchema","columnNames","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","Link","to","show","_extends","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFarmDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","type","className","d","cx","cy","r","ForwardRef","SvgFarmLight","ControlContainer","ToggleWrapper","Text","LabelWrapper","FilterContainer","ViewControls","Farms","Image","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","CARD","localStorageKey","viewMode","sortOption","setSortOption","isArchived","isInactive","useMedia","maxWidth","usePollFarmsData","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","minHeight","marginLeft","marginRight","SvgIcon","component","isDark","FarmsDarkLogo","FarmsLightLogo","Page","checked","SearchInput","placeholder","TABLE","sort","b","exact","renderContent"],"mappings":"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","file":"static/js/13.03d28674.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ mainTokenAddress, pairTokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const mainTokenAddressString: string = mainTokenAddress ? mainTokenAddress[chainId] : null\n  const pairTokenAddressString: string = pairTokenAddress ? pairTokenAddress[chainId] : null\n  const firstPart =\n    !mainTokenAddressString || mainTokenAddressString === wBNBAddressString ? 'ETH' : mainTokenAddressString\n  const secondPart =\n    !pairTokenAddressString || pairTokenAddressString === wBNBAddressString ? 'ETH' : pairTokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@sparkpointio/sparkswap-uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  farmSymbol?: string\n  tokenSymbol?: string\n  rewardToken?: string\n  token: Token\n  quoteToken: Token\n  pairToken?: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n  farmSymbol,\n  rewardToken,\n  token,\n  pairToken,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Flex flexDirection=\"row\" alignItems=\"\">\n        <Heading mb=\"4px\" style={{ textAlign: 'left' }}>\n          Stake <br /> {lpLabel.split(' ')[0]} <br /> Earn {rewardToken}\n        </Heading>\n      </Flex>\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={pairToken} width={64} height={64} />\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import * as React from 'react'\nimport { Box, CircularProgress } from '@material-ui/core'\n\nexport default function CircularIndeterminate() {\n  return (\n    <Box sx={{ display: 'flex', color: '#FFF' }}>\n      <CircularProgress color=\"inherit\" />\n    </Box>\n  )\n}\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Flex, Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\n\ninterface WithdrawModalProps {\n  farm?: any\n  staked?: any\n  earnings?: any\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\n  farm,\n  staked,\n  earnings,\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop=\"-10px\" style={{ width: 'auto' }} alignItems=\"center\" flexDirection=\"column\">\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize=\"28px\" bold>\n          {earnings} {farm.quoteToken.symbol}\n        </Text>\n        <Text>and withdrawing the staked amount of</Text>\n        <Text fontSize=\"28px\" bold>\n          {staked} {farm.lpSymbol}\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\n        <Button\n          disabled={pendingTx}\n          fullWidth\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your LPs and earnings have been transferred to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nconst Container = styled.div`\n  min-width: 720px;\n  display: flex;\n  justify-content: space-between;\n  height: auto;\n`\n\nconst DetailsCont = styled.div`\n  width: 30%;\n  height: auto;\n  overflow: visible;\n`\n\nconst ActionDiv = styled.div`\n  margin: 15px 0px;\n  padding: 10px;\n`\nconst ModalFooter = styled.div`\n  max-width: 720px;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport { DetailsCont, ActionDiv, ModalFooter }\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Button } from '@sparkpointio/sparkswap-uikit'\n\nconst Container = styled.div`\n  margin-top: -30px;\n  display: flex;\n  flex-direction: column;\n  min-width: auto;\n`\nconst StyledFlex = styled(Flex)`\n  padding: 10px 0px;\n`\nconst CancelButton = styled(Button)`\n  flex: 1;\n  margin-right: 10px;\n`\nconst DepositButton = styled(Button)`\n  flex: 1;\n  margin-left: 10px;\n`\n\nexport { StyledFlex, CancelButton, DepositButton }\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport Container, { CancelButton, DepositButton, StyledFlex } from './Styled'\nimport useToast from '../../../../hooks/useToast'\nimport { useTranslation } from '../../../../contexts/Localization'\nimport { useAppDispatch } from '../../../../state'\nimport { fetchFarmUserDataAsync } from '../../../../state/farms'\n\ninterface StakeModalInterface {\n  pid: number\n  onDismiss?: () => void\n  max: BigNumber\n  symbol: string\n  placeholder?: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  onConfirm: (amount: string, contract: Contract) => void\n  lpStakingContract?: Contract\n}\n\nconst Stake: React.FC<StakeModalInterface> = ({\n  pid,\n  onDismiss,\n  max,\n  symbol,\n  addLiquidityUrl,\n  inputTitle,\n  onConfirm,\n  lpStakingContract,\n}) => {\n  const [val, setVal] = useState('0')\n  const [pendingTx, setPendingTx] = useState(false)\n  const valNumber = new BigNumber(val)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const { toastError, toastSuccess } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const onClick = async () => {\n    try {\n      setPendingTx(true)\n      await onConfirm(val, lpStakingContract)\n      setPendingTx(false)\n      toastSuccess(`${t('Staked')}!`, t('Your %sym% tokens have been staked to the pool!', { sym: symbol }))\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      console.error(e)\n    } finally {\n      setPendingTx(false)\n    }\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n  return (\n    <Modal title=\"\" onDismiss={!pendingTx && onDismiss}>\n      <Container>\n        <Text>Stake amount: </Text>\n        <ModalInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={fullBalance}\n          symbol={symbol}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </Container>\n      <StyledFlex justifyContent=\"space-between\">\n        <Text>{symbol} balance: </Text>\n        <Text>{fullBalance}</Text>\n      </StyledFlex>\n      <StyledFlex justifyContent=\"space-between\">\n        <CancelButton onClick={onDismiss}>Close</CancelButton>\n        <DepositButton\n          onClick={onClick}\n          // disable Deposit button if not yet approved\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n        >\n          Deposit\n        </DepositButton>\n      </StyledFlex>\n    </Modal>\n  )\n}\n\nexport default Stake\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal, Text, Flex } from '@sparkpointio/sparkswap-uikit'\n\ninterface ClaimModalProps {\n  onDismiss?: () => void\n}\n\nconst ClaimModal: React.FC<ClaimModalProps> = ({ onDismiss }) => {\n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop=\"-10px\" style={{ width: '450px' }} alignItems=\"center\" flexDirection=\"column\">\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize=\"28px\" bold>\n          78.912 SRK Tokens\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\n        <Button fullWidth>Confirm</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport { Contract } from 'web3-eth-contract'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Modal, Skeleton, Text, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport useMedia from 'use-media'\nimport { useTheme } from '@mui/material/styles'\nimport { Grid } from '@mui/material'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WithdrawModal from './WithdrawModal'\nimport Container, { ActionDiv, DetailsCont, ModalFooter } from './Styled'\nimport { ModalHr } from './Divider'\nimport StakeModal from './Modals/Stake'\nimport ClaimModal from './Modals/ClaimModal'\nimport { calculateUserRewardRate } from '../../../utils/farmHelpers'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, contract: Contract) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n  handleUnstake?: (amount: string) => void\n  maxStake?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  addLiquidityUrl,\n  addTokenUrl,\n  handleUnstake,\n  farm,\n  maxStake,\n}) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const [activeSelect, setActiveSelect] = useState(false)\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const userRate = calculateUserRewardRate(farm)\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { pid, lpAddresses } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const lpContract = useERC20(lpAddress)\n  const RewardTokenBalance = useTokenBalance(getAddress(farm.quoteToken.address))\n  const formatTokenBalance = getBalanceAmount(RewardTokenBalance.balance).toFormat(6)\n  const formatLPTokenBalance = getBalanceAmount(new BigNumber(tokenBalance)).toFormat(6)\n  const formatStakedTokenBalance = getBalanceAmount(new BigNumber(stakedBalance)).toFormat(6)\n  const formatTokenEarnings = getBalanceAmount(new BigNumber(earnings)).toFormat(6)\n  const muitheme = useTheme()\n  const largeScreen = useMediaQuery(muitheme.breakpoints.up('md'))\n\n  const [isApproved, setIsApproved] = useState(\n    account && allowance && new BigNumber(allowance).isGreaterThanOrEqualTo(tokenBalance),\n  )\n  const lpStakingAddress = getAddress(farm.stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setIsApproved(true)\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n  const [onPresentStake] = useModal(\n    <StakeModal\n      pid={pid}\n      onConfirm={onConfirm}\n      lpStakingContract={lpStakingContract}\n      max={max}\n      symbol={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      inputTitle={t('Stake')}\n    />,\n  )\n\n  const [onPresentClaim] = useModal(<ClaimModal />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedTokenBalance}\n      earnings={formatTokenEarnings}\n      max={maxStake}\n      onConfirm={handleUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  return (\n    <Modal title={t('Account Info')} onDismiss={onDismiss}>\n      \n      <Text color=\"textSubtle\" fontSize=\"14px\" style={{ paddingBottom: '30px', marginTop: '-40px' }}>\n        Staking, balances & earnings\n      </Text>\n      \n      <Container style={largeScreen? { flexDirection: 'row' } : { flexDirection: 'column', minWidth: 'auto' }}>\n      {/* <Container> */}\n      \n        <DetailsCont style={largeScreen? {} : {width: 'auto'}}>\n          <Text bold fontSize=\"24px\">\n            {formatTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {farm.quoteToken.symbol}\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addTokenUrl}>\n              Get {farm.quoteToken.symbol}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont style={largeScreen? {} : {width: 'auto'}}>\n          <Text bold fontSize=\"24px\">\n            {formatLPTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {tokenName} Tokens\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as=\"a\" target=\"_blank\" href={addLiquidityUrl}>\n              Get {tokenName}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont style={largeScreen? {} : {width: 'auto'}}>\n          <Text bold fontSize=\"24px\">\n            {formatStakedTokenBalance ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            Your {tokenName} Deposits\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            {isApproved ? (\n              <Button fullWidth onClick={onPresentStake}>\n                Stake {tokenName}\n              </Button>\n            ) : (\n              <Button fullWidth onClick={handleApprove} disabled={requestedApproval}>\n                Enable Farm\n              </Button>\n            )}\n          </ActionDiv>\n        </DetailsCont>\n        \n      </Container>\n      <ModalHr />\n      <Grid>\n      <ModalFooter>\n        <DetailsCont>\n          <Text bold fontSize=\"24px\">\n            {userRate}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\" >{`Your Rate ${farm.quoteToken.symbol}/week`}</Text>\n        </DetailsCont>\n        <DetailsCont>\n          <Text bold fontSize=\"24px\">\n            {formatTokenEarnings ?? <Skeleton width={60} display=\"inline-block\" />}\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\" >{`${farm.quoteToken.symbol} Token Earnings`}</Text>\n        </DetailsCont>\n        \n        <DetailsCont\n          style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n          onMouseEnter={() => setActiveSelect(true)}\n          onMouseLeave={() => setActiveSelect(false)}\n        >\n          <Button fullWidth onClick={onPresentWithdraw}>\n            <Text>Claim & Withdraw</Text>\n          </Button>\n        </DetailsCont>\n      </ModalFooter>\n      </Grid>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport useStake from 'hooks/useStake'\nimport useUnstake, { useExit } from 'hooks/useUnstake'\nimport { Farm } from 'state/types'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Loading from 'components/Loading'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { calculateUserRewardRate } from '../../../../utils/farmHelpers'\n\ninterface FarmCardActionsProps {\n  userDataReady?: boolean\n  userRate?: string\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  addTokenUrl,\n  farm,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useExit(getAddress(farm.stakingAddresses))\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string, contract?: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      addTokenUrl={addTokenUrl}\n      farm={farm}\n      handleUnstake={handleUnstake}\n      maxStake={stakedBalance}\n    />,\n  )\n  const earnings = getBalanceAmount(new BigNumber(farm.userData.earnings)).toFormat(6)\n  const formatStakedBalance = getBalanceAmount(new BigNumber(farm.userData.stakedBalance)).toFormat(6)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedBalance}\n      earnings={earnings}\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      tokenName={tokenName}\n    />,\n  )\n\n  const renderStakingButtons = () => {\n    let buttonTxt = 'Deposit'\n    if (farm.hasEnded && stakedBalance.isGreaterThan(0)) {\n      buttonTxt = 'Withdraw'\n    }\n    return (\n      <Button\n        onClick={farm.hasEnded && parseFloat(farm.userData.stakedBalance) ? onPresentWithdraw : onPresentDeposit}\n        disabled={\n          farm.hasEnded &&\n          !parseFloat(farm.userData.stakedBalance) &&\n          ['history', 'archived'].some((item) => location.pathname.includes(item))\n        }\n        fullWidth\n      >\n        {userDataReady ? buttonTxt : <Loading />}\n      </Button>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      {/* <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading> */}\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({\n  userDataReady,\n  farm,\n  account,\n  addLiquidityUrl,\n  addTokenUrl,\n}) => {\n  const { t } = useTranslation()\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n\n  const renderDepositButton = () => {\n    return (\n      <StakeAction\n        userDataReady={userDataReady}\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        addTokenUrl={addTokenUrl}\n        farm={farm}\n      />\n    )\n  }\n\n  return <Action>{!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderDepositButton()}</Action>\n}\n\nexport default CardActions\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport { Button, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useClaim } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { ActionContainer, ActionContent, ActionTitles, Earned } from './styles'\nimport useToast from '../../../../../hooks/useToast'\n\ninterface HarvestActionProps {\n  pid: number\n  stakingContract?: string\n  tokenRewardSymbol?: string\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  stakingContract,\n  tokenRewardSymbol,\n  pid,\n  userData,\n  userDataReady,\n}) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useClaim(stakingContract)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  return (\n    <ActionContainer style={{ margin: '10px 0' }}>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {tokenRewardSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Claimed')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: tokenRewardSymbol }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {t('Claim')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  stakingAddress?: string\n  lpInfoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({ stakingAddress, lpInfoAddress }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      {/* <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )} */}\n      <StyledLinkExternal href={stakingAddress}>View Staking Contract</StyledLinkExternal>\n      <StyledLinkExternal href={lpInfoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React, { useContext, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes, ThemeContext } from 'styled-components'\nimport { Flex, Skeleton, Text } from '@sparkpointio/sparkswap-uikit'\nimport { Farm } from 'state/types'\nimport { useFarmPrice } from 'hooks/price'\nimport { getFarmV2Apr } from 'utils/apr'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_EXCHANGE_URL, BASE_INFO_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport HarvestAction from '../FarmTable/Actions/HarvestAction'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { getBalanceAmount } from '../../../../utils/formatBalance'\nimport ExpandableSectionButton from '../../../../components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport { getBscScanAddressUrl } from '../../../../utils/bscscan'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  // background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border: 5px solid ${(props) => props.theme.colors.primary};\n  // border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n  max-width: 352px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ userDataReady, farm, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const formatTotalDeposits = getBalanceAmount(new BigNumber(farm.totalDeposits ?? 0)).toFormat(4)\n  const formatTotalRewardRate = getBalanceAmount(new BigNumber(farm.totalRewardRate ?? 0)).toFormat(4)\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.quoteToken.symbol\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n\n  const stakingAddress = getAddress(farm.stakingAddresses)\n\n  const addLiquidityUrl = `${farm.liquidityUrl ?? BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const AddTokenUrl = `${BASE_EXCHANGE_URL}/#/swap/${farm.token.address[56]}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  const theme = useContext(ThemeContext)\n\n  const { LPPrice, rewardPrice } = useFarmPrice(\n    Number(farm.lpTotalSupply),\n    farm.token.address[56],\n    farm.pairToken.address[56],\n    farm.quoteToken.address[56],\n  )\n\n  const aprBlackList = ['0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b']\n  const apr = aprBlackList.includes(farm.lpAddresses[56])\n    ? null\n    : getFarmV2Apr(LPPrice, rewardPrice, Number(farm.totalDeposits), Number(farm.rewardRate))\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImage={farmImage}\n        farmSymbol={farm.lpSymbol}\n        tokenSymbol={farm.token.symbol}\n        rewardToken={farm.quoteToken.symbol}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n        pairToken={farm.pairToken}\n      />\n      <hr style={{ width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px' }} />\n      {/* {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )} */}\n\n      <Flex justifyContent=\"space-between\" style={{ textAlign: 'left' }}>\n        <Text>{t('Total Deposits')}</Text>\n        <Text color=\"textSubtle\">\n          {farm.totalDeposits ? formatTotalDeposits : <Skeleton width={60} display=\"inline-block\" />}\n        </Text>\n      </Flex>\n      <Flex>\n        <HarvestAction\n          stakingContract={getAddress(farm.stakingAddresses)}\n          tokenRewardSymbol={earnLabel}\n          userDataReady={userDataReady}\n          userData={farm.userData}\n          pid={farm.pid}\n        />\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('APR')}</Text>\n        <Text color=\"textSubtle\">{apr === 0 || apr === null ? '-- ' : apr.toFixed(2)}%</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Rate')}</Text>\n        <Text color=\"textSubtle\">\n          {formatTotalRewardRate ?? <Skeleton width={60} display=\"inline-block\" />} {earnLabel} / week\n        </Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Duration')}</Text>\n        <Text color=\"textSubtle\">{farm.remainingDays ?? <Skeleton width={60} display=\"inline-block\" />} Days</Text>\n      </Flex>\n      <CardActionsContainer\n        userDataReady={userDataReady}\n        farm={farm}\n        account={account}\n        addLiquidityUrl={addLiquidityUrl}\n        addTokenUrl={AddTokenUrl}\n      />\n\n      <DetailsSection\n        removed={removed}\n        stakingAddress={getBscScanAddressUrl(stakingAddress)}\n        lpInfoAddress={`${farm.infoURL ?? BASE_INFO_URL}/${lpAddress}`}\n        lpLabel={lpLabel}\n      />\n\n      {/* <Divider />\n       <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getBscScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n          totalValueFormatted={farm.totalDeposits}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n      <Flex justifyContent='center'>\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '56') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>)}\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '1') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Ethereum Blockchain')}</Text>)}\n      </Flex> */}\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const mainTokenAddress = quoteTokenAddress\n  const pairTokenAddress = tokenAddress\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ mainTokenAddress, pairTokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <div>\n      {t('The multiplier represents the amount of CAKE rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.')}\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { Contract } from 'web3-eth-contract'\nimport { BigNumber } from 'bignumber.js'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\nimport { getAddress } from '../../../../../utils/addressHelpers'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  token,\n  pairToken,\n  userDataReady,\n  stakingAddresses,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: token.address,\n    pairTokenAddress: pairToken.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string, contract: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const lpStakingAddress = getAddress(stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const dispatch = useAppDispatch()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = getBscScanAddressUrl(lpAddress)\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#FFFFFF;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4C394.1,161,391,97.2,390.9,94.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmDark);\nexport default __webpack_public_path__ + \"static/media/farm-dark.781ef184.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#727071;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4c39-39,35.9-102.8,35.8-105.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmLight);\nexport default __webpack_public_path__ + \"static/media/farm-light.f8d41a65.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useLocation, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Image, RowType, Toggle } from '@pancakeswap/uikit'\nimport { Text } from '@sparkpointio/sparkswap-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport useMedia from 'use-media'\nimport { SvgIcon } from '@material-ui/core'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader'\nimport { useTheme } from '@mui/material/styles'\nimport useMediaQuery from '@mui/material/useMediaQuery'\nimport { StyledHr } from 'views/Farms/components/Divider'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport { ReactComponent as FarmsDarkLogo } from './components/assets/farm-dark.svg'\nimport { ReactComponent as FarmsLightLogo } from './components/assets/farm-light.svg'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.CARD, { localStorageKey: 'sparkswap_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('earned')\n  const theme = useContext(ThemeContext)\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n  const isMobile = useMedia({ maxWidth: 500 })\n  const muitheme = useTheme()\n  const largeScreen = useMediaQuery(muitheme.breakpoints.up('md'))\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && !farm.hasEnded && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.hasEnded && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return (\n            latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery) ||\n            latinise(farm.quoteToken.symbol.toLowerCase()).includes(lowercaseQuery)\n          )\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        // case 'promoted':\n        //   return orderBy(\n        //     farms,\n        //     (farm: FarmWithStakedValue) => (farm.isPromoted ?? 0),\n        //     'desc',\n        //   )\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'duration':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.remainingDays ? Number(farm.remainingDays) : 0),\n            'desc',\n          )\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  const [activeTab, setActiveTab] = useState(0)\n  const handleItemClick = (index: number) => setActiveTab(index)\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n    // Uncomment this if !comingsoon\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                userDataReady={userDataReady}\n                key={farm.pid}\n                farm={farm}\n                cakePrice={cakePrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          {/* {farmsList(activeFarms).map((farm) => ( */}\n          {/*  <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} /> */}\n          {/* ))} */}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const renderInactiveContent = (): JSX.Element => {\n    return (\n      <div>\n        <div style={{ margin: '20px' }}>\n          <Text fontSize=\"24px\" bold>\n            {' '}\n            Inactive Liquidity Pools{' '}\n          </Text>\n        </div>\n\n        <FlexLayout>\n          {farmsList(inactiveFarms).map((farm) => (\n            <FarmCard\n              userDataReady={userDataReady}\n              key={farm.pid}\n              farm={farm}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <PageHeader background={theme.card.background}>\n        <Flex\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexDirection={['column', null, 'row']}\n          style={isMobile ? { flexDirection: 'column-reverse' } : { minHeight: '20vh', marginLeft: '-16px' }}\n        >\n          <Flex\n            flexDirection=\"column\"\n            mr={['8px', 0]}\n            style={largeScreen ? { justifyContent: 'space-around' } : { textAlign: 'center' }}\n          >\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\n              Farms <StyledHr style={largeScreen ? { width: '25%' } : { width: '100%' }} />\n            </Text>\n            <Text color=\"text\" style={isMobile ? { fontSize: '17px' } : { fontSize: '27px' }}>\n              Earn SRK, SFUEL and other tokens by staking LP tokens!\n            </Text>\n          </Flex>\n          <Flex\n            style={\n              isMobile\n                ? {\n                    fontSize: '150px',\n                    margin: 'auto',\n                    marginTop: '20px',\n                    marginBottom: '20px',\n                  }\n                : { fontSize: '240px', marginRight: '-118px' }\n            }\n          >\n            <SvgIcon\n              component={theme.isDark ? FarmsDarkLogo : FarmsLightLogo}\n              viewBox=\"0  0 384 512\"\n              style={isMobile ? { width: '200px' } : { width: '500px' }}\n              fontSize=\"inherit\"\n            />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            {/* <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} /> */}\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  // {\n                  //   label: t('Hot'),\n                  //   value: 'hot',\n                  // },\n                  // {\n                  //   label: t('APR'),\n                  //   value: 'apr',\n                  // },\n                  // {\n                  //   label: t('Multiplier'),\n                  //   value: 'multiplier',\n                  // },\n                  // {\n                  //   label: t('Promoted'),\n                  //   value: 'promoted',\n                  // },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Duration'),\n                    value: 'duration',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n\n        {renderContent()}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}