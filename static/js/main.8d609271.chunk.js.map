{"version":3,"sources":["hooks/useRefresh.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","hooks/useApprove.ts","config/constants/nfts.ts","config/constants/endpoints.ts","config/constants/farms.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/bscscan.ts","components/UnlockButton.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","utils/wallet.ts","components/Tags.tsx","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/formatBalance.ts","hooks/useTokenBalance.ts","utils/collectibles.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/apr.ts","components/TokenPairImage/index.tsx","utils/bigNumber.ts","hooks/useUnstake.ts","hooks/useLastUpdated.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","hooks/useHarvest.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","views/Farms/components/Divider.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","config/index.ts","hooks/usePersistState.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","utils/settings.ts","utils/contractHelpers.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/farmHelpers.ts","state/hooks.ts","config/constants/tokens.ts","config/constants/types.ts","components/Balance.tsx","components/layout/Flex.tsx","hooks/price.ts","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","components/ModalInput/ModalInput.tsx","hooks/useContract.ts","views/Pools/helpers.tsx","hooks/useWeb3.ts","utils/multicall.ts","state/index.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/web3.ts","hooks/useToast.ts","state/types.ts","config/constants/pools.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useEagerConnect.ts","views/Farms/Redirects.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","utils/index.ts","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/Stake.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","state/block/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/assets/pool-dark.svg","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/components/assets/pool-light.svg","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useTheme.ts","utils/compoundApyHelpers.ts"],"names":["useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getProfileContract","profileApi","process","REACT_APP_API_PROFILE","getUsername","address","a","fetch","response","ok","json","username","getProfile","methods","hasRegistered","call","profile","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","set","avatar","images","sm","domain","secure","expires","initialState","isInitialized","isLoading","data","profileSlice","createSlice","name","reducers","profileFetchStart","state","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","addPoints","actions","fetchProfile","dispatch","teamsList","reduce","accum","id","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","teams","useApprove","lpContract","contractAddress","account","useWeb3React","onApprove","useCallback","approve","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","useAppDispatch","sousChefContract","useSousChef","handleApprove","tx","updateUserAllowance","symbol","console","error","message","useSousApproveWithAmount","stakingAmount","approveWithAmount","toString","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","56","97","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","ARCHIVED_NODE","farms","pid","lpSymbol","lpAddresses","stakingAddresses","token","tokens","srkb","pairToken","wbnb","quoteToken","own","kgo","kclp","busd","sfuel","isPromoted","liquidityUrl","PANCAKE_ADD_LIQUIDITY_URL","infoURL","CAKE_INFO_URL","priceHelperLps","fetchFarm","farm","lpAddress","getAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpStakingCalls","lpStaking","totalSupply","periodFinish","rewardRate","totalDeposits","totalRewardRate","times","endDate","Date","setUTCSeconds","hasEnded","now","remainingDays","Math","max","ceil","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","getFarmFromTokenSymbol","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","lpStakingAbi","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","setLoadArchivedFarmsData","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","fullWidth","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","getItem","walletconnect","close","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","log","request","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","image","tokenAdded","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","alt","background","textColor","users","MAINNET_CHAIN_ID","getCakeAddress","cake","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","i","push","multicallv2","profileABI","teamData","onChainTeamData","toNumber","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","campaigns","title","badge","campaignMap","Map","campaign","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pageMeta","path","getCustomMeta","useLocation","pathname","property","content","Page","children","getDecimalAmount","amount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","undefined","FetchStatus","useTokenAllowance","allowedAddress","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","contract","getBep20Contract","res","prev","fetchBalance","useGetBnbBalance","setBalance","web3","useWeb3","eth","getBalance","walletBalance","refresh","useTokenBalance","balanceOf","getIdentifierKeyFromAddress","nftSource","Object","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","getErc721Contract","tokenURI","uriDataResponse","uriData","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmV2Apr","LPTokenPrice","EPOCH_PER_YEAR","getFarmApr","cakePriceUsd","poolLiquidityUsd","CAKE_PER_YEAR","StyledLogo","img","PairLogoImg","Flex","getImageUrlFromToken","iconExtension","TokenPairImage","primaryToken","secondaryToken","src","BIG_NINE","useExit","stakingContract","useLPStakingContract","onUnstake","exit","txHash","useSousUnstake","enableEmergencyWithdraw","masterChefContract","useMasterchef","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","useUnstake","setStateLastUpdated","previousLastUpdated","usePreviousValue","useSousStake","isUsingBnb","handleStake","stake","sousStakeBnb","sousStake","onStake","useStake","ifos","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","pending","association","useClaim","onReward","claim","useSousHarvest","handleHarvest","harvest","soushHarvestBnb","soushHarvest","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","StyledHr","colors","textSubtle","primary","ModalHr","hr","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","clearInterval","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_INFO_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","SPARKSWAP_API","API_ASSETS","API_SUMMARY","API_LIQUIDITY","API_LASTPRICE","BASE_BSC_SCAN_URLS","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","pointCenterIfoABI","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","bep20Abi","erc721Abi","getLpStakingContract","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","calculateUserRewardRate","stakingToken","Token","ChainId","MAINNET","rewardsToken","rewardRateAmount","TokenAmount","stakedAmount","token0","token1","dummyPair","Pair","totalStakedAmount","liquidityToken","JSBI","BigInt","raw","greaterThan","divide","multiply","toSignificant","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","useProfile","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","usePriceCakeBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","projectLink","bnb","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","ttkb","kroot","bglg","tipsy","PoolIds","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","FlexLayout","usePoolPrice","stakingTokenAddress","rewardTokenAddress","_stakingTokenAddress","_rewardTokenAddress","stakingPrice","setStakingPrice","rewardPrice","setRewardPrice","utils","toChecksumAddress","assets","fetchData","useFarmPrice","token1Address","token2Address","_token1Address","_token2Address","LPPrice","setLPPrice","summary","pairLiquidity","prototype","hasOwnProperty","ref","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","onChange","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","StyledTokenInput","isWarning","shadows","warning","inset","text","xs","ModalInput","onSelectMax","isBalanceZero","position","margin","alignItems","pattern","inputMode","step","min","size","useIfoV1Contract","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","library","refEth","Web3","setweb3","multi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","requireSuccess","result","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","gas","enterStaking","deposit","leaveStaking","withdraw","emergencyWithdraw","getReward","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","archivedHttpProvider","web3WithArchivedNodeProvider","toastContext","BetPosition","CORE","isComingSoon","isAddTokenDisabled","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","connectorLocalStorageKey","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","RedirectToPools","location","to","GlobalStyle","createGlobalStyle","label","icon","items","Menu","useTheme","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","getBscScanLink","keyframes","ViewMode","StyledCard","Card","card","StyledCardInner","isPromotedPool","radii","CakeVaultTokenPairImage","primaryTokenSrc","primarySrc","secondarySrc","StyledCardHeader","isStaking","flexDirection","height","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","ModalBody","StakeActionModal","isBnbPool","isRemovingStake","isApprove","stakingTokenContract","pendingTx","setPendingTx","isApproved","setIsApproved","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","setPercent","userLimit","totalStakingTokens","remainingStakeTokens","totalAllowance","getCalculatedStakingLimit","fullDecimalStakeAmount","plus","handleConfirmClick","maxstake","tokensymbol","sliderPercent","percentageOfStakingMax","amountToStake","handleChangePercent","convertedInput","percentage","handleStakeInputChange","currentTarget","addLiquidityUrl","marginTop","marginBottom","endIcon","spin","disabled","marginRight","marginLeft","StyledFlex","StakeModal","addTokenUrl","activeSelect","setActiveSelect","earnedTokenBalance","totalStakedTokens","totalEarningTokens","totalEarnedTokens","temp","useModal","Stake","onPresentStakeAction","handleHarvestConfirm","className","open","border","borderTop","onMouseEnter","onMouseLeave","eq","StakeAction","isStaked","onPresentStake","useTooltip","placement","targetRef","tooltip","tooltipVisible","Text","CardActions","totalEarned","display","StakeActions","PoolCard","accountHasStakedBalance","rewardPerBlock","backgroundColor","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","onPresentApyModal","scale","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","StyledButton","Button","VaultStakeModal","stakingMax","percent","cakePriceBusd","usdValueStaked","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","minWidth","onUserInput","currencyValue","onValueChanged","valueLabel","HasSharesActions","stakedDollarValue","onPresentTokenRequired","onPresentUnstake","VaultStakeActions","accountHasSharesStaked","InlineText","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","useMatchBreakpoints","isXl","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","CardFooter","_style","_g","_g2","_g3","_g4","PoolTabButtons","activeIndex","stakedOnly","setStakedOnly","hasStakeInFinishedPools","viewMode","setViewMode","useRouteMatch","url","isExact","isXs","isSm","liveOrFinishedSwitch","BaseCell","expandAnimation","ChevronDownIcon","xl","collapseAnimation","css","dropdown","cardBorder","_extends","assign","arguments","source","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPoolDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","y","viewBox","enableBackground","xmlSpace","d","cx","cy","r","ForwardRef","SvgPoolLight","CardLayout","PoolControls","SearchSortContainer","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","TABLE","searchQuery","setSearchQuery","sortOption","isMobile","useMedia","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","showUpcomingPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","minHeight","padding","borderBottom","SvgIcon","component","PoolsDarkLogo","PoolsLightLogo","event","Farms","lazy","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","iterations","Providers","ReactDOM","render","StrictMode","getElementById","StyledThemeContext","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount"],"mappings":"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AM,MACN0S,MAAO,OACPC,MAAO,gBAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,aACPC,MAAO,iBAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,QACPC,MAAO,eAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,UACPC,MAAO,iBAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,SACPC,MAAO,kBAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,QACPC,MAAO,eAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,QACPC,MAAO,iBAET,CACEhY,GAAI,YACJqF,KAAM,MACN0S,MAAO,QACPC,MAAO,eAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,wBACPC,MAAO,4BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,uBACPC,MAAO,2BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,uBACPC,MAAO,2BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,uBACPC,MAAO,2BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,2BACPC,MAAO,+BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,0BACPC,MAAO,8BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,6BACPC,MAAO,iCAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,0BACPC,MAAO,8BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,yBACPC,MAAO,6BAET,CACEhY,GAAI,YACJqF,KAAM,aACN0S,MAAO,6BACPC,M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","file":"static/js/main.8d609271.chunk.js","sourcesContent":["import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { approve, approveWithAmount } from 'utils/callHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useCakeVaultContract, useLottery, useSousChef } from './useContract'\r\nimport useToast from './useToast'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract, contractAddress: Contract) => {\r\n  const { account } = useWeb3React()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      return await approve(lpContract, contractAddress, account)\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lpContract, contractAddress])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (tx) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), e?.message)\r\n      setRequestedApproval(false)\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useSousApproveWithAmount = (lpContract: Contract, sousId, earningTokenSymbol, stakingAmount) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await approveWithAmount(lpContract, sousChefContract, account, stakingAmount.toString())\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (tx) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), e?.message)\r\n      setRequestedApproval(false)\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, stakingAmount, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = () => {\r\n    cakeContract.methods\r\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setRequestedApproval(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\r\n        setLastUpdated()\r\n        setRequestedApproval(false)\r\n      })\r\n      .on('error', (error) => {\r\n        console.error(error)\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      })\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      return await approve(cakeContract, lotteryContract, account)\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { Nft, NftSource, NftType } from './types'\r\n\r\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\r\n\r\nexport const nftSources: NftSource = {\r\n  [NftType.PANCAKE]: {\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n  [NftType.MIXIE]: {\r\n    address: {\r\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\r\n      97: '',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n}\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Mixie v1',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-1-lg.png',\r\n      md: 'mixie-1-md.png',\r\n      sm: 'mixie-1-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '001-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Mixie v2',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-2-lg.png',\r\n      md: 'mixie-2-md.png',\r\n      sm: 'mixie-2-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '002-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Mixie v3',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-3-lg.png',\r\n      md: 'mixie-3-md.png',\r\n      sm: 'mixie-3-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '003-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-champion-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-caker',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-flipper',\r\n    type: NftType.PANCAKE,\r\n    variationId: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'bullish',\r\n    type: NftType.PANCAKE,\r\n    variationId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'hiccup',\r\n    type: NftType.PANCAKE,\r\n    variationId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sleepy',\r\n    type: NftType.PANCAKE,\r\n    variationId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sunny',\r\n    type: NftType.PANCAKE,\r\n    variationId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'churro',\r\n    type: NftType.PANCAKE,\r\n    variationId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'dollop',\r\n    type: NftType.PANCAKE,\r\n    variationId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'twinkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'swapsies',\r\n    type: NftType.PANCAKE,\r\n    variationId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'drizzle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'blueberries',\r\n    type: NftType.PANCAKE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'circular',\r\n    type: NftType.PANCAKE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sparkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\nimport { CAKE_INFO_URL, PANCAKE_ADD_LIQUIDITY_URL } from '../index'\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  /* {\r\n    pid: 0,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    token: tokens.syrup,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  */\r\n\r\n  /**\r\n   * INTERNAL STAKING POOLS\r\n   */\r\n  // OWN - BNB - OWN\r\n  {\r\n    pid: 251,\r\n    lpSymbol: 'SRKb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD581CdF609DD50fbaa25118583c6EE31b39662F9',\r\n    },\r\n    stakingAddresses: {\r\n      97: '',\r\n      56: '0xCec445174D6f4e87d38d43d4b13E36dd55CC56A1',\r\n    },\r\n    token: tokens.srkb,\r\n    pairToken: tokens.wbnb,\r\n    quoteToken: tokens.srkb,\r\n  },\r\n  {\r\n    pid: 252,\r\n    lpSymbol: 'OWN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB31F2F7939108D9a518f6152689Dc1463091Ee7b',\r\n    },\r\n    stakingAddresses: {\r\n      97: '',\r\n      56: '0x0Fe376032276Ad5fc55e782D6AB1f85Ce0669BFB',\r\n    },\r\n    token: tokens.own,\r\n    pairToken: tokens.wbnb,\r\n    quoteToken: tokens.own,\r\n  },\r\n\r\n  /**\r\n   * EXTERNAL STAKING POOLS\r\n   */\r\n  {\r\n    pid: 253,\r\n    lpSymbol: 'KGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAB80cD24f54566FD482ffd928c13b4a618DC6d0c',\r\n    },\r\n    stakingAddresses: {\r\n      97: '',\r\n      56: '0xF5927A81112ED7a5680DfB8D63E230b8c527CEA7',\r\n    },\r\n    token: tokens.kgo,\r\n    pairToken: tokens.wbnb,\r\n    quoteToken: tokens.srkb,\r\n  },\r\n  // KCLP - BUSD - SFUEL\r\n  {\r\n    pid: 254,\r\n    lpSymbol: 'KCLP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFDD633E7428cAEEc1712Ae9426BE0C29C9A5Cb49',\r\n    },\r\n    stakingAddresses: {\r\n      97: '',\r\n      56: '0x3CE0Dc444298133bD1e16B520Dc1B862c374f281',\r\n    },\r\n    token: tokens.kclp,\r\n    pairToken: tokens.busd,\r\n    quoteToken: tokens.sfuel,\r\n    isPromoted: 1\r\n  },\r\n  // KCLP - BUSD - KCLP\r\n  {\r\n    pid: 255,\r\n    lpSymbol: 'KCLP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b',\r\n    },\r\n    stakingAddresses: {\r\n      97: '',\r\n      56: '0x64f30722ce788c31dc28f09A6Ce3eA33f742B1D2',\r\n    },\r\n    token: tokens.kclp,\r\n    pairToken: tokens.busd,\r\n    quoteToken: tokens.kclp,\r\n    liquidityUrl: PANCAKE_ADD_LIQUIDITY_URL,\r\n    infoURL: CAKE_INFO_URL,\r\n  },\r\n\r\n]\r\n\r\nexport default farms\r\n","import { FarmConfig } from './types'\r\n\r\nconst priceHelperLps: FarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  // {\r\n  //   pid: null,\r\n  //   lpSymbol: 'QSD-BNB LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n  //   },\r\n  //   token: tokens.qsd,\r\n  //   quoteToken: tokens.wbnb,\r\n  // },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport { now } from 'lodash'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport lpStaking from 'config/abi/lpStaking.json'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  totalDeposits: SerializedBigNumber\r\n  rewardRate: SerializedBigNumber\r\n  totalRewardRate: SerializedBigNumber\r\n  hasEnded: boolean\r\n  remainingDays: string\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken, stakingAddresses } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n  const lpStakingCalls = [\r\n    // Total deposits in staking address\r\n    {\r\n      address: getAddress(stakingAddresses),\r\n      name: 'totalSupply',\r\n    },\r\n    // Total deposits in staking address\r\n    {\r\n      address: getAddress(stakingAddresses),\r\n      name: 'periodFinish',\r\n    },\r\n    {\r\n      address: getAddress(stakingAddresses),\r\n      name: 'rewardRate',\r\n    },\r\n  ]\r\n  const [totalSupply, periodFinish, rewardRate] =\r\n    await multicall(lpStaking, lpStakingCalls)\r\n\r\n  // Total Deposits in staking address\r\n  const totalDeposits = new BigNumber(totalSupply)\r\n\r\n  // total reward rate\r\n  const totalRewardRate = new BigNumber(rewardRate).times(60 * 60 * 24 * 7)\r\n\r\n  // console.log(totalRewardRate)\r\n\r\n  const endDate = (new Date(0)).setUTCSeconds(periodFinish)\r\n  const hasEnded = endDate < now()\r\n  const remainingDays = (Math.max(0, Math.ceil(((((endDate - now()) / 1000) / 60) / 60) / 24))).toString()\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n      ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    totalDeposits: totalDeposits.toJSON(),\r\n    'rewardRate': new BigNumber(rewardRate).toJSON(),\r\n    'totalRewardRate': totalRewardRate.toJSON(),\r\n    'hasEnded': hasEnded,\r\n    'remainingDays': remainingDays,\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport lpStakingAbi from 'config/abi/lpStaking.json'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, getAddress(farm.stakingAddresses)] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: getAddress(farm.stakingAddresses),\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n\r\n  const rawStakedBalances = await multicall(lpStakingAbi, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: getAddress(farm.stakingAddresses),\r\n      name: 'earned',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(lpStakingAbi, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import { BASE_BSC_SCAN_URL } from 'config'\r\n\r\nexport const getBscScanAddressUrl = (address: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\r\n}\r\n\r\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\r\n}\r\n\r\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\r\n}\r\n\r\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@sparkpointio/sparkswap-uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst UnlockButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props} fullWidth>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\n// import { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { ConnectorId } from '@sparkpointio/sparkswap-uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorId) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem('1')\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    console.log(process.env.REACT_APP_CHAIN_ID)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Testnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error('Can\\'t setup the BSC network on metamask because window.ethereum is undefined')\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst BinanceTag: React.FC<TagProps> = (props) => {\r\n  return (\r\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      Binance\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","export { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","export default {\r\n  masterChef: {\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  },\r\n  sousChef: {\r\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n  },\r\n  lottery: {\r\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  lotteryV2: {\r\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\r\n    56: '',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n  tradingCompetition: {\r\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\r\n  },\r\n  easterNft: {\r\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\r\n  },\r\n  cakeVault: {\r\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    97: '',\r\n  },\r\n  predictions: {\r\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\r\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\r\n    97: '',\r\n  },\r\n}\r\n","import { MAINNET_CHAIN_ID } from 'config'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'SparkDeFi',\r\n  description:\r\n    'Refuel your rocket with SFUEL and travel to the moon with SparkSwap, the prodigious decentralized exchange on Binance Smart Chain.',\r\n  image: 'https://sparkswap.finance//images/192x192_App_Icon.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('SparkDeFi')} - ${t('Earn SRK, SFUEL, and other tokens by just staking!')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('SparkPool')} - ${t('Earn SRK, SFUEL, and other tokens by just staking!')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('SparkDeFi')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('SparkDeFi')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  // const cakePriceUsd = usePriceCakeBusd()\r\n  // const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n  //   ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n  //       minimumFractionDigits: 3,\r\n  //       maximumFractionDigits: 3,\r\n  //     })}`\r\n  //   : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  // const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta property='og:title' content={title} />\r\n      <meta property='og:description' content={description} />\r\n      <meta property='og:image' content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.methods.balanceOf(account).call()\r\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, allowedAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.methods.allowance(account, allowedAddress).call()\r\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, allowedAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const walletBalance = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(walletBalance))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, lastUpdated, setBalance])\r\n\r\n  return { balance, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useTokenBalance\r\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\r\nimport { Nft, NftType } from 'config/constants/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Gets the identifier key based on the nft address\r\n * Helpful for looking up the key when all you have is the address\r\n */\r\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\r\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\r\n    const address = getAddress(nftSourceEntry.address)\r\n    return address === nftAddress\r\n  })\r\n\r\n  return nftSource ? nftSource.identifierKey : null\r\n}\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getAddressByType = (type: NftType) => {\r\n  return getAddress(nftSources[type].address)\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\r\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\r\n\r\n    if (!uriDataResponse.ok) {\r\n      return null\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  if (!identifierKey) {\r\n    return null\r\n  }\r\n\r\n  if (!uriData[identifierKey]) {\r\n    return null\r\n  }\r\n\r\n  return Nfts.find((nft) => {\r\n    return uriData[identifierKey].includes(nft.identifier)\r\n  })\r\n}\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, EPOCH_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  \r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get the FARM APR value in %\r\n * @param LPTokenPrice LP Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of LP Token in the pool\r\n * @param rewardForDuration Amount of rewards allocated to the farms\r\n * @param duration Duration of the farm in EPOCH\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getFarmV2Apr = (\r\n  LPTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  rewardRate: number\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(rewardRate).times(EPOCH_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(LPTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\nexport default null\r\n","import React from 'react'\r\nimport { TokenPairImageProps as UIKitTokenPairImageProps } from '@pancakeswap/uikit'\r\nimport { Flex } from '@sparkpointio/sparkswap-uikit'\r\nimport styled from 'styled-components'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst StyledLogo = styled.img`\r\n  width: 50px;\r\n`\r\nconst PairLogoImg = styled(Flex)`\r\n  margin-bottom: 30px;\r\n`\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\r\n  return `/images/tokens/${address}.${token.iconExtension?? 'svg'}`\r\n}\r\n\r\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken }) => {\r\n  return (\r\n    <PairLogoImg>\r\n      <StyledLogo src={getImageUrlFromToken(primaryToken)} alt='logo-img' />\r\n      <StyledLogo src={getImageUrlFromToken(secondaryToken)} alt='logo-img' />\r\n    </PairLogoImg>\r\n  )\r\n}\r\n\r\nexport default TokenPairImage\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward, updateUserStakedBalance } from 'state/actions'\r\nimport { exit, sousEmergencyUnstake, sousUnstake, unstake } from 'utils/callHelpers'\r\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useExit = (contract: string) => {\r\n  const { account } = useWeb3React()\r\n  const stakingContract = useLPStakingContract(contract)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await exit(stakingContract, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, stakingContract],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (enableEmergencyWithdraw) {\r\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, contract: Contract) => {\r\n      const txHash = await stake(contract?? masterChefContract, pid, amount, account, !!contract)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { Ifo } from './types'\r\n\r\n// const cakeBnbLpToken: Token = {\r\n//   // symbol: farms[1].lpSymbol,\r\n//   // address: farms[1].lpAddresses,\r\n//   // decimals: 18,\r\n// }\r\n\r\nconst ifos: Ifo[] = [\r\n  // {\r\n  //   id: 'kalmar',\r\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n  //   isActive: true,\r\n  //   name: 'Kalmar (KALM)',\r\n  //   poolBasic: {\r\n  //     saleAmount: '375,000 KALM',\r\n  //     raiseAmount: '$750,000',\r\n  //     cakeToBurn: '$375,000',\r\n  //     distributionRatio: 0.3,\r\n  //   },\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '875,000 KALM',\r\n  //     raiseAmount: '$2,500,000',\r\n  //     cakeToBurn: '$1,250,000',\r\n  //     distributionRatio: 0.7,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.kalm,\r\n  //   releaseBlockNumber: 7707736,\r\n  //   campaignId: '511110000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n  //   tokenOfferingPrice: 2.0,\r\n  //   version: 2,\r\n  // },\r\n  // {\r\n  //   id: 'hotcross',\r\n  //   address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n  //   isActive: false,\r\n  //   name: 'Hot Cross (HOTCROSS)',\r\n  //   poolBasic: {\r\n  //     saleAmount: '15,000,000 HOTCROSS',\r\n  //     raiseAmount: '$750,000',\r\n  //     cakeToBurn: '$375,000',\r\n  //     distributionRatio: 0.3,\r\n  //   },\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '35,000,000 HOTCROSS',\r\n  //     raiseAmount: '$1,750,000',\r\n  //     cakeToBurn: '$875,000',\r\n  //     distributionRatio: 0.7,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.hotcross,\r\n  //   releaseBlockNumber: 7477900,\r\n  //   campaignId: '511100000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n  //   tokenOfferingPrice: 0.05,\r\n  //   version: 2,\r\n  // },\r\n  // {\r\n  //   id: 'horizon',\r\n  //   address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n  //   isActive: false,\r\n  //   name: 'Horizon Protocol (HZN)',\r\n  //   poolBasic: {\r\n  //     saleAmount: '3,000,000 HZN',\r\n  //     raiseAmount: '$750,000',\r\n  //     cakeToBurn: '$375,000',\r\n  //     distributionRatio: 0.3,\r\n  //   },\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '7,000,000 HZN',\r\n  //     raiseAmount: '$1,750,000',\r\n  //     cakeToBurn: '$875,000',\r\n  //     distributionRatio: 0.7,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.hzn,\r\n  //   releaseBlockNumber: 6581111,\r\n  //   campaignId: '511090000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n  //   tokenOfferingPrice: 0.25,\r\n  //   version: 2,\r\n  // },\r\n  // {\r\n  //   id: 'belt',\r\n  //   address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n  //   isActive: false,\r\n  //   name: 'Belt (BELT)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '150,000 BELT',\r\n  //     raiseAmount: '$3,000,000',\r\n  //     cakeToBurn: '$1,500,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.belt,\r\n  //   releaseBlockNumber: 5493919,\r\n  //   campaignId: '511080000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'watch',\r\n  //   address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n  //   isActive: false,\r\n  //   name: 'Yieldwatch (WATCH)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '8,000,000 WATCH',\r\n  //     raiseAmount: '$800,000',\r\n  //     cakeToBurn: '$400,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.watch,\r\n  //   releaseBlockNumber: 5294924,\r\n  //   campaignId: '511070000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'berry',\r\n  //   address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n  //   isActive: false,\r\n  //   name: 'Berry (BRY)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '2,000,000 BRY',\r\n  //     raiseAmount: '$1,000,000',\r\n  //     cakeToBurn: '$500,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.bry,\r\n  //   releaseBlockNumber: 4750968,\r\n  //   campaignId: '511060000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'soteria',\r\n  //   address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n  //   isActive: false,\r\n  //   name: 'Soteria (wSOTE)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '1,500,000 wSOTE',\r\n  //     raiseAmount: '$525,000',\r\n  //     cakeToBurn: '$262,500',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.wsote,\r\n  //   releaseBlockNumber: 4086064,\r\n  //   campaignId: '511050000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'helmet',\r\n  //   address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n  //   isActive: false,\r\n  //   name: 'Helmet.insure (Helmet)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '10,000,000 Helmet',\r\n  //     raiseAmount: '$1,000,000',\r\n  //     cakeToBurn: '$500,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.helmet,\r\n  //   releaseBlockNumber: 3771926,\r\n  //   campaignId: '511040000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'tenet',\r\n  //   address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n  //   isActive: false,\r\n  //   name: 'Tenet (TEN)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '1,000,000 TEN',\r\n  //     raiseAmount: '$1,000,000',\r\n  //     cakeToBurn: '$500,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.ten,\r\n  //   releaseBlockNumber: 3483883,\r\n  //   campaignId: '511030000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'ditto',\r\n  //   address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n  //   isActive: false,\r\n  //   name: 'Ditto (DITTO)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '700,000 DITTO',\r\n  //     raiseAmount: '$630,000',\r\n  //     cakeToBurn: '$315,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.ditto,\r\n  //   releaseBlockNumber: 3279767,\r\n  //   campaignId: '511020000',\r\n  //   articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n  // {\r\n  //   id: 'blink',\r\n  //   address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n  //   isActive: false,\r\n  //   name: 'BLINk (BLK)',\r\n  //   poolUnlimited: {\r\n  //     saleAmount: '100,000,000 BLINK',\r\n  //     raiseAmount: '$1,000,000',\r\n  //     cakeToBurn: '$500,000',\r\n  //     distributionRatio: 1,\r\n  //   },\r\n  //   currency: cakeBnbLpToken,\r\n  //   token: tokens.blink,\r\n  //   releaseBlockNumber: 3279767,\r\n  //   campaignId: '511010000',\r\n  //   articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n  //   tokenOfferingPrice: null,\r\n  //   version: 1,\r\n  // },\r\n]\r\n\r\nexport default ifos\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport { nftSources } from 'config/constants/nfts'\r\nimport { NftType } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\r\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [Number(tokenId), walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\r\n      const balanceOf = Number(balanceOfResponse)\r\n\r\n      if (balanceOf === 0) {\r\n        return []\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest, claim } from 'utils/callHelpers'\r\nimport { useLPStakingContract, useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useClaim = (stakingContract: string) => {\r\n  const { account } = useWeb3React()\r\n  const contract = useLPStakingContract(stakingContract)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    const txHash = await claim(contract, account)\r\n    return txHash\r\n  }, [account, contract])\r\n\r\n  return { onReward: handleClaim }\r\n}\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    return txHash\r\n  }, [account, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'CAKE',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d(APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\">\r\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n            {t(\r\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n              { freq: compoundFrequency.toLocaleString() },\r\n            )}\r\n          </Text>\r\n          {performanceFee > 0 && (\r\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const { user } = await request(\r\n      GRAPH_API_PROFILE,\r\n      gql`\r\n        query getUserPointIncreaseEvents($account: ID!) {\r\n          user(id: $account) {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        account: account.toLowerCase(),\r\n      },\r\n    )\r\n\r\n    return user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@sparkpointio/sparkswap-uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: true, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n\r\nexport const StyledHr = styled.div`\r\n  border-style: solid none none none;\r\n  border-width: 2px;\r\n  border-color: ${({ theme }) => theme.colors.primary};\r\n  width: 95%;\r\n`\r\n\r\nexport const ModalHr = styled.hr`\r\n  border-style: solid none none none;\r\n  border-width: 2px;\r\n  border-color: ${({ theme }) => theme.colors.primary};\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`\r\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nconst useTabVisibility = () => {\r\n  const tabVisibleRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      tabVisibleRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return { tabVisibleRef }\r\n}\r\n\r\nexport default useTabVisibility\r\n","import React, { useState, useEffect } from 'react'\r\nimport useTabVisibility from 'hooks/useTabVisibility'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const { tabVisibleRef } = useTabVisibility()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 10 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\n// export const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_URL = 'https://sparkswap.finance'\r\nexport const BASE_EXCHANGE_URL = 'https://sparkswap.finance'\r\nexport const BASE_INFO_URL = 'https://sparkswap.info/#/token/'\r\nexport const CAKE_INFO_URL = 'https://pancakeswap.finance/info/pool/'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const PANCAKE_EXCHANGE_URL = 'https://pancakeswap.finance'\r\nexport const PANCAKE_ADD_LIQUIDITY_URL = `${PANCAKE_EXCHANGE_URL}/add`\r\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const DEFAULT_GAS_PRICE = 5\r\nexport const TESTNET_CHAIN_ID = '97'\r\nexport const MAINNET_CHAIN_ID = '56'\r\nexport const EPOCH_PER_YEAR = 31556926\r\nexport const SPARKSWAP_API = 'https://api.sparkswap.info/api/'\r\nexport const API_ASSETS = 'assets'\r\nexport const API_SUMMARY = 'summary'\r\nexport const API_LIQUIDITY = 'liquidity'\r\nexport const API_LASTPRICE = 'last_price'\r\n\r\n\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [MAINNET_CHAIN_ID]: 'https://bscscan.com',\r\n  [TESTNET_CHAIN_ID]: 'https://testnet.bscscan.com',\r\n}\r\n","import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n","import { ethers } from 'ethers'\r\nimport { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\r\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: ethers.BigNumber\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'IFO Shopper: %title%',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligible to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await multicallv2(\r\n    pointCenterIfoABI,\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\r\n      }\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: claimableIfoDataItem.numberPoints.toNumber(),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\r\nimport {\r\n  makeFutureRoundResponse,\r\n  transformRoundResponse,\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  getBet,\r\n  makeRoundData,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  currentRoundStartBlockNumber: 0,\r\n  intervalBlocks: 100,\r\n  bufferBlocks: 2,\r\n  minBetAmount: '1000000000000000',\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: {},\r\n  bets: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\r\n  'predictions/fetchBet',\r\n  async ({ account, id }) => {\r\n    const response = await getBet(id)\r\n    const bet = transformBetResponse(response)\r\n    return { account, bet }\r\n  },\r\n)\r\n\r\nexport const fetchRoundBet = createAsyncThunk<\r\n  { account: string; roundId: string; bet: Bet },\r\n  { account: string; roundId: string }\r\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\r\n  const betResponses = await getBetHistory({\r\n    user: account.toLowerCase(),\r\n    round: roundId,\r\n  })\r\n\r\n  // This should always return 0 or 1 bet because a user can only place\r\n  // one bet per round\r\n  if (betResponses && betResponses.length === 1) {\r\n    const [betResponse] = betResponses\r\n    return { account, roundId, bet: transformBetResponse(betResponse) }\r\n  }\r\n\r\n  return { account, roundId, bet: null }\r\n})\r\n\r\n/**\r\n * Used to poll the user bets of the current round cards\r\n */\r\nexport const fetchCurrentBets = createAsyncThunk<\r\n  { account: string; bets: Bet[] },\r\n  { account: string; roundIds: string[] }\r\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\r\n  const betResponses = await getBetHistory({\r\n    user: account.toLowerCase(),\r\n    round_in: roundIds,\r\n  })\r\n\r\n  return { account, bets: betResponses.map(transformBetResponse) }\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    },\r\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\r\n      const { rounds, market } = action.payload\r\n      const newRoundData = makeRoundData(rounds)\r\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\r\n\r\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\r\n        // Add new round\r\n        const newestRound = maxBy(rounds, 'epoch') as Round\r\n        const futureRound = transformRoundResponse(\r\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\r\n        )\r\n\r\n        newRoundData[futureRound.id] = futureRound\r\n      }\r\n\r\n      state.currentEpoch = incomingCurrentRound.epoch\r\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\r\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\r\n      state.rounds = { ...state.rounds, ...newRoundData }\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\r\n      const { account, roundId } = action.payload\r\n      const accountBets = state.bets[account]\r\n\r\n      if (accountBets && accountBets[roundId]) {\r\n        accountBets[roundId].claimed = true\r\n      }\r\n    },\r\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\r\n      const { account, roundId, bet } = action.payload\r\n\r\n      state.bets = {\r\n        ...state.bets,\r\n        [account]: {\r\n          ...state.bets[account],\r\n          [roundId]: bet,\r\n        },\r\n      }\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Get unclaimed bets\r\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n      const betData = bets.reduce((accum, bet) => {\r\n        return {\r\n          ...accum,\r\n          [bet.round.id]: bet,\r\n        }\r\n      }, {})\r\n\r\n      state.bets = merge({}, state.bets, {\r\n        [account]: betData,\r\n      })\r\n    })\r\n\r\n    // Get round bet\r\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\r\n      const { account, roundId, bet } = action.payload\r\n\r\n      if (bet) {\r\n        state.bets = {\r\n          ...state.bets,\r\n          [account]: {\r\n            ...state.bets[account],\r\n            [roundId]: bet,\r\n          },\r\n        }\r\n      }\r\n    })\r\n\r\n    // Update Bet\r\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\r\n      const { account, bet } = action.payload\r\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n      state.history[account] = bets\r\n\r\n      // Save any fetched bets in the \"bets\" namespace\r\n      const betData = bets.reduce((accum, bet) => {\r\n        return {\r\n          ...accum,\r\n          [bet.round.id]: bet,\r\n        }\r\n      }, {})\r\n\r\n      state.bets = merge({}, state.bets, {\r\n        [account]: betData,\r\n      })\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  initialize,\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  updateMarketData,\r\n  markBetAsCollected,\r\n  setPredictionStatus,\r\n  markPositionAsEntered,\r\n  setLastOraclePrice,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_PRICE } from 'config'\r\nimport { getDecimalAmount } from './formatBalance'\r\n\r\nexport interface UserSettings {\r\n  gasPrice: number\r\n}\r\n\r\nexport const VERSION = 1.01\r\n\r\nexport const GAS_SETTINGS = {\r\n  default: DEFAULT_GAS_PRICE,\r\n  fast: 10,\r\n  reallyfast: 15,\r\n}\r\n\r\nexport const getGasPriceInWei = (amountInGwei: number) => {\r\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\r\n}\r\n\r\nexport const getDefaultSettings = (): UserSettings => ({\r\n  gasPrice: GAS_SETTINGS.default,\r\n})\r\n\r\nexport const getStorageKey = (account: string) => {\r\n  return `pancakeswap_settings_${account}_${VERSION}`\r\n}\r\n\r\nexport const getSettings = (account: string): UserSettings => {\r\n  try {\r\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\r\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\r\n  } catch (error) {\r\n    return getDefaultSettings()\r\n  }\r\n}\r\n\r\nexport const setSettings = (account: string, newSettings: UserSettings) => {\r\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\r\n}\r\n\r\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\r\n  const currentSettings = getSettings(account)\r\n  setSettings(account, { ...currentSettings, ...newSetting })\r\n}\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpStakingAbi from 'config/abi/lpStaking.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\r\nimport { getSettings, getGasPriceInWei } from './settings'\r\n\r\nexport const getDefaultGasPrice = () => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  if (chainId === TESTNET_CHAIN_ID) {\r\n    return 10\r\n  }\r\n  return DEFAULT_GAS_PRICE\r\n}\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\r\n\r\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\r\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\r\n  })\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getErc721Contract = (address: string, web3?: Web3) => {\r\n  return getContract(erc721Abi, address, web3)\r\n}\r\nexport const getLpStakingContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpStakingAbi, address, web3)\r\n}\r\nexport const getLpContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpTokenAbi, address, web3)\r\n}\r\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoV1Abi, address, web3)\r\n}\r\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoV2Abi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getLotteryV2Contract = (web3?: Web3) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\nexport const getTradingCompetitionContract = (web3?: Web3) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\r\n}\r\nexport const getEasterNftContract = (web3?: Web3) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\r\n}\r\nexport const getCakeVaultContract = (web3?: Web3) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\r\n}\r\nexport const getPredictionsContract = (web3?: Web3) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\r\n}\r\nexport const getChainlinkOracleContract = (web3?: Web3) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\r\n}\r\nexport const getMulticallContract = (web3?: Web3) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Spinner}  from '@sparkpointio/sparkswap-uikit';\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import { ChainId, JSBI, Pair, Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { getAddress } from './addressHelpers'\r\n\r\nconst ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport const calculateUserRewardRate = (\r\n  {\r\n    lpAddresses,\r\n    totalDeposits,\r\n    quoteToken,\r\n    token,\r\n    rewardRate,\r\n    userData,\r\n    pairToken\r\n  }: any) => {\r\n  const stakingToken = new Token(\r\n    ChainId.MAINNET,\r\n    getAddress(lpAddresses),\r\n    18,\r\n  )\r\n  const rewardsToken = new Token(\r\n    ChainId.MAINNET, getAddress(quoteToken.address), quoteToken.decimals)\r\n  const rewardRateAmount = new TokenAmount(rewardsToken, rewardRate ?? 0)\r\n  const stakedAmount = new TokenAmount(stakingToken, userData.stakedBalance ?? 0)\r\n  const totalSupply = new TokenAmount(stakingToken, totalDeposits ?? 0)\r\n  const token0 = new Token(ChainId.MAINNET, getAddress(token.address), token.decimals)\r\n  const token1 = new Token(ChainId.MAINNET, getAddress(pairToken.address), pairToken.decimals)\r\n\r\n  const dummyPair = new Pair(new TokenAmount(token0, '0'), new TokenAmount(token1, '0'))\r\n\r\n  const totalStakedAmount = new TokenAmount(\r\n    dummyPair.liquidityToken, JSBI.BigInt(totalSupply.raw))\r\n\r\n  return new TokenAmount(\r\n    rewardsToken,\r\n    JSBI.greaterThan(totalStakedAmount.raw, JSBI.BigInt(0))\r\n      ? JSBI.divide(JSBI.multiply(rewardRateAmount.raw, stakedAmount.raw), totalStakedAmount.raw)\r\n      : JSBI.BigInt(0),\r\n  )?.multiply(`${60 * 60 * 24 * 7}`)\r\n    ?.toSignificant(4)\r\n}\r\n\r\n// export const calcuLateApy = () => {\r\n//\r\n// }\r\n\r\nexport default isArchivedPid\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { orderBy } from 'lodash'\r\nimport { Team } from 'config/constants/types'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { farmsConfig } from 'config/constants'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport {\r\n  fetchCakeVaultFees,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  setBlock,\r\n} from './actions'\r\nimport { AchievementState, Farm, FarmsState, Pool, ProfileState, State, TeamsState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchWalletNfts } from './collectibles'\r\nimport { getCanClaim } from './predictions/helpers'\r\nimport { transformPool } from './pools/helpers'\r\nimport { fetchPoolsStakingLimitsAsync } from './pools'\r\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\r\n\r\nexport const usePollFarmsData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): FarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\r\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\r\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.token.busdPrice)\r\n}\r\n\r\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\r\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\r\n  return tokenPrice\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// Pools\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const usePoolFromPid = (sousId: number): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return transformPool(pool)\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const bnbBusdFarm = useFarmFromPid(252)\r\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(251)\r\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\n// Predictions\r\nexport const useIsHistoryPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\r\n}\r\n\r\nexport const useIsChartPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\r\n}\r\n\r\nexport const useGetRounds = () => {\r\n  return useSelector((state: State) => state.predictions.rounds)\r\n}\r\n\r\nexport const useGetSortedRounds = () => {\r\n  const roundData = useGetRounds()\r\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\r\n}\r\n\r\nexport const useGetCurrentEpoch = () => {\r\n  return useSelector((state: State) => state.predictions.currentEpoch)\r\n}\r\n\r\nexport const useGetIntervalBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.intervalBlocks)\r\n}\r\n\r\nexport const useGetBufferBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.bufferBlocks)\r\n}\r\n\r\nexport const useGetTotalIntervalBlocks = () => {\r\n  const intervalBlocks = useGetIntervalBlocks()\r\n  const bufferBlocks = useGetBufferBlocks()\r\n  return intervalBlocks + bufferBlocks\r\n}\r\n\r\nexport const useGetRound = (id: string) => {\r\n  const rounds = useGetRounds()\r\n  return rounds[id]\r\n}\r\n\r\nexport const useGetCurrentRound = () => {\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const rounds = useGetSortedRounds()\r\n  return rounds.find((round) => round.epoch === currentEpoch)\r\n}\r\n\r\nexport const useGetPredictionsStatus = () => {\r\n  return useSelector((state: State) => state.predictions.status)\r\n}\r\n\r\nexport const useGetHistoryFilter = () => {\r\n  return useSelector((state: State) => state.predictions.historyFilter)\r\n}\r\n\r\nexport const useGetCurrentRoundBlockNumber = () => {\r\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\r\n}\r\n\r\nexport const useGetMinBetAmount = () => {\r\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\r\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\r\n}\r\n\r\nexport const useGetIsFetchingHistory = () => {\r\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\r\n}\r\n\r\nexport const useGetHistory = () => {\r\n  return useSelector((state: State) => state.predictions.history)\r\n}\r\n\r\nexport const useGetHistoryByAccount = (account: string) => {\r\n  const bets = useGetHistory()\r\n  return bets ? bets[account] : []\r\n}\r\n\r\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\r\n  const bets = useSelector((state: State) => state.predictions.bets)\r\n\r\n  if (!bets[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!bets[account][roundId]) {\r\n    return null\r\n  }\r\n\r\n  return bets[account][roundId]\r\n}\r\n\r\nexport const useBetCanClaim = (account: string, roundId: string) => {\r\n  const bet = useGetBetByRoundId(account, roundId)\r\n\r\n  if (!bet) {\r\n    return false\r\n  }\r\n\r\n  return getCanClaim(bet)\r\n}\r\n\r\nexport const useGetLastOraclePrice = (): BigNumber => {\r\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\r\n  return new BigNumber(lastOraclePrice)\r\n}\r\n\r\n// Collectibles\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n","const tokens = {\r\n  sfuel: {\r\n    symbol: 'SFUEL',\r\n    address: {\r\n      56: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\r\n      97: '0x37ac4d6140e54304d77437a5c11924f61a2d976f',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sparkpoint.io/',\r\n  },\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  txl: {\r\n    symbol: 'TXL',\r\n    address: {\r\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tixl.org/',\r\n  },\r\n  cos: {\r\n    symbol: 'COS',\r\n    address: {\r\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.contentos.io/',\r\n  },\r\n  bunny: {\r\n    symbol: 'BUNNY',\r\n    address: {\r\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakebunny.finance/',\r\n  },\r\n  alice: {\r\n    symbol: 'ALICE',\r\n    address: {\r\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.myneighboralice.com/',\r\n  },\r\n  for: {\r\n    symbol: 'FOR',\r\n    address: {\r\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.for.tube/home',\r\n  },\r\n  bux: {\r\n    symbol: 'BUX',\r\n    address: {\r\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://getbux.com/bux-crypto/',\r\n  },\r\n  nuls: {\r\n    symbol: 'NULS',\r\n    address: {\r\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.nuls.io/',\r\n  },\r\n  belt: {\r\n    symbol: 'BELT',\r\n    address: {\r\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beta.belt.fi/',\r\n  },\r\n  ramp: {\r\n    symbol: 'RAMP',\r\n    address: {\r\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://rampdefi.com/',\r\n  },\r\n  bfi: {\r\n    symbol: 'BFI',\r\n    address: {\r\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bearn.fi/',\r\n  },\r\n  dexe: {\r\n    symbol: 'DEXE',\r\n    address: {\r\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dexe.network/',\r\n  },\r\n  bel: {\r\n    symbol: 'BEL',\r\n    address: {\r\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bella.fi/',\r\n  },\r\n  tpt: {\r\n    symbol: 'TPT',\r\n    address: {\r\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://www.tokenpocket.pro/',\r\n  },\r\n  watch: {\r\n    symbol: 'WATCH',\r\n    address: {\r\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yieldwatch.net/',\r\n  },\r\n  xmark: {\r\n    symbol: 'xMARK',\r\n    address: {\r\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://benchmarkprotocol.finance/',\r\n  },\r\n  bmxx: {\r\n    symbol: 'bMXX',\r\n    address: {\r\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://multiplier.finance/',\r\n  },\r\n  iotx: {\r\n    symbol: 'IOTX',\r\n    address: {\r\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://iotex.io/',\r\n  },\r\n  bor: {\r\n    symbol: 'BOR',\r\n    address: {\r\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  bopen: {\r\n    symbol: 'bOPEN',\r\n    address: {\r\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  dodo: {\r\n    symbol: 'DODO',\r\n    address: {\r\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dodoex.io/',\r\n  },\r\n  swingby: {\r\n    symbol: 'SWINGBY',\r\n    address: {\r\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swingby.network/',\r\n  },\r\n  bry: {\r\n    symbol: 'BRY',\r\n    address: {\r\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://berrydata.co/',\r\n  },\r\n  zee: {\r\n    symbol: 'ZEE',\r\n    address: {\r\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://zeroswap.io/',\r\n  },\r\n  swgb: {\r\n    symbol: 'SWGb',\r\n    address: {\r\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  swg: {\r\n    symbol: 'SWG',\r\n    address: {\r\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  sfp: {\r\n    symbol: 'SFP',\r\n    address: {\r\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.safepal.io/',\r\n  },\r\n  lina: {\r\n    symbol: 'LINA',\r\n    address: {\r\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://linear.finance/',\r\n  },\r\n  lit: {\r\n    symbol: 'LIT',\r\n    address: {\r\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.litentry.com/',\r\n  },\r\n  hget: {\r\n    symbol: 'HGET',\r\n    address: {\r\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.hedget.com/',\r\n  },\r\n  bdo: {\r\n    symbol: 'BDO',\r\n    address: {\r\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bdollar.fi/',\r\n  },\r\n  egld: {\r\n    symbol: 'EGLD',\r\n    address: {\r\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://elrond.com/',\r\n  },\r\n  ust: {\r\n    symbol: 'UST',\r\n    address: {\r\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  wsote: {\r\n    symbol: 'wSOTE',\r\n    address: {\r\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://soteria.finance/#/',\r\n  },\r\n  front: {\r\n    symbol: 'FRONT',\r\n    address: {\r\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://frontier.xyz/',\r\n  },\r\n  helmet: {\r\n    symbol: 'Helmet',\r\n    address: {\r\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.helmet.insure/',\r\n  },\r\n  btcst: {\r\n    symbol: 'BTCST',\r\n    address: {\r\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n      97: '',\r\n    },\r\n    decimals: 17,\r\n    projectLink: 'https://www.1-b.tc/',\r\n  },\r\n  bscx: {\r\n    symbol: 'BSCX',\r\n    address: {\r\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bscex.org/',\r\n  },\r\n  ten: {\r\n    symbol: 'TEN',\r\n    address: {\r\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tenet.farm/',\r\n  },\r\n  balbt: {\r\n    symbol: 'bALBT',\r\n    address: {\r\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://allianceblock.io/',\r\n  },\r\n  asr: {\r\n    symbol: 'ASR',\r\n    address: {\r\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  atm: {\r\n    symbol: 'ATM',\r\n    address: {\r\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  og: {\r\n    symbol: 'OG',\r\n    address: {\r\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  reef: {\r\n    symbol: 'REEF',\r\n    address: {\r\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://reef.finance/',\r\n  },\r\n  ditto: {\r\n    symbol: 'DITTO',\r\n    address: {\r\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://ditto.money/',\r\n  },\r\n  juv: {\r\n    symbol: 'JUV',\r\n    address: {\r\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  psg: {\r\n    symbol: 'PSG',\r\n    address: {\r\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  vai: {\r\n    symbol: 'VAI',\r\n    address: {\r\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  blink: {\r\n    symbol: 'BLINK',\r\n    address: {\r\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://blink.wink.org',\r\n  },\r\n  unfi: {\r\n    symbol: 'UNFI',\r\n    address: {\r\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unifiprotocol.com',\r\n  },\r\n  twt: {\r\n    symbol: 'TWT',\r\n    address: {\r\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://trustwallet.com/',\r\n  },\r\n  hard: {\r\n    symbol: 'HARD',\r\n    address: {\r\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://hard.kava.io',\r\n  },\r\n  broobee: {\r\n    symbol: 'bROOBEE',\r\n    address: {\r\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://roobee.io/',\r\n  },\r\n  stax: {\r\n    symbol: 'STAX',\r\n    address: {\r\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://stablexswap.com/',\r\n  },\r\n  nar: {\r\n    symbol: 'NAR',\r\n    address: {\r\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://narwhalswap.org/',\r\n  },\r\n  nya: {\r\n    symbol: 'NYA',\r\n    address: {\r\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nyanswop.org/',\r\n  },\r\n  ctk: {\r\n    symbol: 'CTK',\r\n    address: {\r\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.certik.foundation/',\r\n  },\r\n  inj: {\r\n    symbol: 'INJ',\r\n    address: {\r\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://injectiveprotocol.com/',\r\n  },\r\n  sxp: {\r\n    symbol: 'SXP',\r\n    address: {\r\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swipe.io/',\r\n  },\r\n  alpha: {\r\n    symbol: 'ALPHA',\r\n    address: {\r\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://alphafinance.io/',\r\n  },\r\n  xvs: {\r\n    symbol: 'XVS',\r\n    address: {\r\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  sushi: {\r\n    symbol: 'SUSHI',\r\n    address: {\r\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sushi.com/',\r\n  },\r\n  comp: {\r\n    symbol: 'COMP',\r\n    address: {\r\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://compound.finance/',\r\n  },\r\n  syrup: {\r\n    symbol: 'SYRUP',\r\n    address: {\r\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  bifi: {\r\n    symbol: 'BIFI',\r\n    address: {\r\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beefy.finance/',\r\n  },\r\n  dusk: {\r\n    symbol: 'DUSK',\r\n    address: {\r\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusk.network/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  beth: {\r\n    symbol: 'BETH',\r\n    address: {\r\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\r\n  },\r\n  mamzn: {\r\n    symbol: 'mAMZN',\r\n    address: {\r\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mgoogl: {\r\n    symbol: 'mGOOGL',\r\n    address: {\r\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mnflx: {\r\n    symbol: 'mNFLX',\r\n    address: {\r\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mtsla: {\r\n    symbol: 'mTSLA',\r\n    address: {\r\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  ltc: {\r\n    symbol: 'LTC',\r\n    address: {\r\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://litecoin.org/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  dai: {\r\n    symbol: 'DAI',\r\n    address: {\r\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://www.makerdao.com/',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  band: {\r\n    symbol: 'BAND',\r\n    address: {\r\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bandprotocol.com/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eos: {\r\n    symbol: 'EOS',\r\n    address: {\r\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://eos.io/',\r\n  },\r\n  link: {\r\n    symbol: 'LINK',\r\n    address: {\r\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chain.link/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      56: '0x55d398326f99059fF775485246999027B3197955',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n  btcb: {\r\n    symbol: 'BTCB',\r\n    address: {\r\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bitcoin.org/',\r\n  },\r\n  xrp: {\r\n    symbol: 'XRP',\r\n    address: {\r\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ripple.com/xrp/',\r\n  },\r\n  atom: {\r\n    symbol: 'ATOM',\r\n    address: {\r\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cosmos.network/',\r\n  },\r\n  yfii: {\r\n    symbol: 'YFII',\r\n    address: {\r\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dfi.money/#/',\r\n  },\r\n  xtz: {\r\n    symbol: 'XTZ',\r\n    address: {\r\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tezos.com/',\r\n  },\r\n  bch: {\r\n    symbol: 'BCH',\r\n    address: {\r\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://bch.info/',\r\n  },\r\n  yfi: {\r\n    symbol: 'YFI',\r\n    address: {\r\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yearn.finance/',\r\n  },\r\n  uni: {\r\n    symbol: 'UNI',\r\n    address: {\r\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://uniswap.org/',\r\n  },\r\n  fil: {\r\n    symbol: 'FIL',\r\n    address: {\r\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://filecoin.io/',\r\n  },\r\n  bake: {\r\n    symbol: 'BAKE',\r\n    address: {\r\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bakeryswap.org/',\r\n  },\r\n  burger: {\r\n    symbol: 'BURGER',\r\n    address: {\r\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://burgerswap.org/',\r\n  },\r\n  bdigg: {\r\n    symbol: 'bDIGG',\r\n    address: {\r\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  bbadger: {\r\n    symbol: 'bBadger',\r\n    address: {\r\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  trade: {\r\n    symbol: 'TRADE',\r\n    address: {\r\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unitrade.app/',\r\n  },\r\n  pnt: {\r\n    symbol: 'PNT',\r\n    address: {\r\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  mir: {\r\n    symbol: 'MIR',\r\n    address: {\r\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  pbtc: {\r\n    symbol: 'pBTC',\r\n    address: {\r\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  lto: {\r\n    symbol: 'LTO',\r\n    address: {\r\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ltonetwork.com/',\r\n  },\r\n  pcws: {\r\n    symbol: 'pCWS',\r\n    address: {\r\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://game.seascape.network/',\r\n  },\r\n  zil: {\r\n    symbol: 'ZIL',\r\n    address: {\r\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n      97: '',\r\n    },\r\n    decimals: 12,\r\n    projectLink: 'https://www.zilliqa.com/',\r\n  },\r\n  lien: {\r\n    symbol: 'LIEN',\r\n    address: {\r\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://lien.finance/',\r\n  },\r\n  swth: {\r\n    symbol: 'SWTH',\r\n    address: {\r\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://switcheo.network/',\r\n  },\r\n  dft: {\r\n    symbol: 'DFT',\r\n    address: {\r\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.dfuture.com/home',\r\n  },\r\n  gum: {\r\n    symbol: 'GUM',\r\n    address: {\r\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://gourmetgalaxy.io/',\r\n  },\r\n  dego: {\r\n    symbol: 'DEGO',\r\n    address: {\r\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.dego.finance/home',\r\n  },\r\n  nrv: {\r\n    symbol: 'NRV',\r\n    address: {\r\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nerve.fi/',\r\n  },\r\n  easy: {\r\n    symbol: 'EASY',\r\n    address: {\r\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  oddz: {\r\n    symbol: 'ODDZ',\r\n    address: {\r\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://oddz.fi/',\r\n  },\r\n  hoo: {\r\n    symbol: 'HOO',\r\n    address: {\r\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://hoo.com/',\r\n  },\r\n  apys: {\r\n    symbol: 'APYS',\r\n    address: {\r\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://apyswap.com/',\r\n  },\r\n  bondly: {\r\n    symbol: 'BONDLY',\r\n    address: {\r\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bondly.finance/',\r\n  },\r\n  tko: {\r\n    symbol: 'TKO',\r\n    address: {\r\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tokocrypto.com/',\r\n  },\r\n  itam: {\r\n    symbol: 'ITAM',\r\n    address: {\r\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://itam.network/',\r\n  },\r\n  arpa: {\r\n    symbol: 'ARPA',\r\n    address: {\r\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://arpachain.io/',\r\n  },\r\n  eps: {\r\n    symbol: 'EPS',\r\n    address: {\r\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ellipsis.finance/',\r\n  },\r\n  jgn: {\r\n    symbol: 'JGN',\r\n    address: {\r\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://jgndefi.com/',\r\n  },\r\n  tlm: {\r\n    symbol: 'TLM',\r\n    address: {\r\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://alienworlds.io/',\r\n  },\r\n  perl: {\r\n    symbol: 'PERL',\r\n    address: {\r\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://perlinx.finance/',\r\n  },\r\n  alpa: {\r\n    symbol: 'ALPA',\r\n    address: {\r\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.alpaca.city/',\r\n  },\r\n  hzn: {\r\n    symbol: 'HZN',\r\n    address: {\r\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://horizonprotocol.com/',\r\n  },\r\n  suter: {\r\n    symbol: 'SUTER',\r\n    address: {\r\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://shield.suterusu.io/',\r\n  },\r\n  cgg: {\r\n    symbol: 'CGG',\r\n    address: {\r\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chainguardians.io/',\r\n  },\r\n  mix: {\r\n    symbol: 'MIX',\r\n    address: {\r\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mixie.chainguardians.io/',\r\n  },\r\n  hakka: {\r\n    symbol: 'HAKKA',\r\n    address: {\r\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hakka.finance/',\r\n  },\r\n  xed: {\r\n    symbol: 'XED',\r\n    address: {\r\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.exeedme.com/',\r\n  },\r\n  τbtc: {\r\n    symbol: 'τBTC',\r\n    address: {\r\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  alpaca: {\r\n    symbol: 'ALPACA',\r\n    address: {\r\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.alpacafinance.org/',\r\n  },\r\n  dfd: {\r\n    symbol: 'DFD',\r\n    address: {\r\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusd.finance/',\r\n  },\r\n  lmt: {\r\n    symbol: 'LMT',\r\n    address: {\r\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://lympo.io/lmt/',\r\n  },\r\n  btt: {\r\n    symbol: 'BTT',\r\n    address: {\r\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bittorrent.com/',\r\n  },\r\n  trx: {\r\n    symbol: 'TRX',\r\n    address: {\r\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tron.network/',\r\n  },\r\n  win: {\r\n    symbol: 'WIN',\r\n    address: {\r\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://winklink.org/',\r\n  },\r\n  mcoin: {\r\n    symbol: 'mCOIN',\r\n    address: {\r\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  math: {\r\n    symbol: 'MATH',\r\n    address: {\r\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mathwallet.org/',\r\n  },\r\n  kun: {\r\n    symbol: 'KUN',\r\n    address: {\r\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  qsd: {\r\n    symbol: 'QSD',\r\n    address: {\r\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  hyfi: {\r\n    symbol: 'HYFI',\r\n    address: {\r\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hyfi.pro/#/',\r\n  },\r\n  oin: {\r\n    symbol: 'OIN',\r\n    address: {\r\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://oin.finance/',\r\n  },\r\n  doge: {\r\n    symbol: 'DOGE',\r\n    address: {\r\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://dogecoin.com/',\r\n  },\r\n  fine: {\r\n    symbol: 'FINE',\r\n    address: {\r\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://refinable.com/',\r\n  },\r\n  one: {\r\n    symbol: 'ONE',\r\n    address: {\r\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bigone.com/',\r\n  },\r\n  pmon: {\r\n    symbol: 'PMON',\r\n    address: {\r\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkamon.com/',\r\n  },\r\n  hotcross: {\r\n    symbol: 'HOTCROSS',\r\n    address: {\r\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.hotcross.com/',\r\n  },\r\n  τdoge: {\r\n    symbol: 'τDOGE',\r\n    address: {\r\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  btr: {\r\n    symbol: 'BTR',\r\n    address: {\r\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitrue.com/',\r\n  },\r\n  ubxt: {\r\n    symbol: 'UBXT',\r\n    address: {\r\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://upbots.com/',\r\n  },\r\n  wmass: {\r\n    symbol: 'WMASS',\r\n    address: {\r\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://massnet.org/en/',\r\n  },\r\n  rfox: {\r\n    symbol: 'RFOX',\r\n    address: {\r\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.redfoxlabs.io/',\r\n  },\r\n  xend: {\r\n    symbol: 'XEND',\r\n    address: {\r\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://xend.finance/',\r\n  },\r\n  cyc: {\r\n    symbol: 'CYC',\r\n    address: {\r\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cyclone.xyz/',\r\n  },\r\n  chr: {\r\n    symbol: 'CHR',\r\n    address: {\r\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://chromia.com/',\r\n  },\r\n  kalm: {\r\n    symbol: 'KALM',\r\n    address: {\r\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kalmar.io/',\r\n  },\r\n  deri: {\r\n    symbol: 'DERI',\r\n    address: {\r\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://deri.finance/#/index',\r\n  },\r\n  well: {\r\n    symbol: 'WELL',\r\n    address: {\r\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitwellex.com/',\r\n  },\r\n  popen: {\r\n    symbol: 'pOPEN',\r\n    address: {\r\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  ez: {\r\n    symbol: 'EZ',\r\n    address: {\r\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  vrt: {\r\n    symbol: 'VRT',\r\n    address: {\r\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  tusd: {\r\n    symbol: 'TUSD',\r\n    address: {\r\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.trueusd.com/',\r\n  },\r\n  mtrg: {\r\n    symbol: 'MTRG',\r\n    address: {\r\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.meter.io/',\r\n  },\r\n  ktn: {\r\n    symbol: 'KTN',\r\n    address: {\r\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kattana.io/',\r\n  },\r\n  qkc: {\r\n    symbol: 'QKC',\r\n    address: {\r\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://quarkchain.io/',\r\n  },\r\n  bcfx: {\r\n    symbol: 'bCFX',\r\n    address: {\r\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.confluxnetwork.org/',\r\n  },\r\n  mx: {\r\n    symbol: 'MX',\r\n    address: {\r\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mxc.com/',\r\n  },\r\n  ata: {\r\n    symbol: 'ATA',\r\n    address: {\r\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.ata.network/',\r\n  },\r\n  mbox: {\r\n    symbol: 'MBOX',\r\n    address: {\r\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mobox.io/#/',\r\n  },\r\n  boring: {\r\n    symbol: 'BORING',\r\n    address: {\r\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  marsh: {\r\n    symbol: 'MARSH',\r\n    address: {\r\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unmarshal.io/',\r\n  },\r\n  ampl: {\r\n    symbol: 'AMPL',\r\n    address: {\r\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://www.ampleforth.org/',\r\n  },\r\n  o3: {\r\n    symbol: 'O3',\r\n    address: {\r\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://o3swap.com/',\r\n  },\r\n  hai: {\r\n    symbol: 'HAI',\r\n    address: {\r\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://hacken.io/',\r\n  },\r\n  htb: {\r\n    symbol: 'HTB',\r\n    address: {\r\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.hotbit.io/',\r\n  },\r\n  woo: {\r\n    symbol: 'WOO',\r\n    address: {\r\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://woo.network/',\r\n  },\r\n  $dg: {\r\n    symbol: '$DG',\r\n    address: {\r\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://decentral.games/',\r\n  },\r\n  srkb: {\r\n    symbol: 'SRKb',\r\n    address: {\r\n      56: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\r\n      97: '0xC3440c10c4F36f354eB591B19FafB4906d449B75',\r\n    },\r\n    decimals: 18,\r\n    iconExtension: 'png',\r\n    projectLink: 'https://sparkpoint.io/',\r\n  },\r\n  ttkb: {\r\n    symbol: 'TTKb',\r\n    address: {\r\n      56: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\r\n      97: '0x9ee47c9630a41525c139ef9ca42ba3b238ecfecf',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sparkpoint.io/',\r\n  },\r\n  own: {\r\n    symbol: 'OWN',\r\n    address: {\r\n      56: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\r\n      97: '0x7665CB7b0d01Df1c9f9B9cC66019F00aBD6959bA',\r\n    },\r\n    decimals: 18,\r\n    iconExtension: 'png',\r\n    projectLink: 'https://ownly.io/',\r\n  },\r\n  kclp: {\r\n    symbol: 'KCLP',\r\n    address: {\r\n      56: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\r\n      97: '0x47b8806C2891c4a92b5c590C32CFE1Eb617648EF',\r\n    },\r\n    decimals: 18,\r\n    iconExtension: 'png',\r\n    projectLink: 'https://kucoinlaunchpad.com/',\r\n  },\r\n  kroot: {\r\n    symbol: 'KROOT',\r\n    address: {\r\n      56: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\r\n      97: '0x0cD3a8Ce155A8d9DAAF19E5caa642e72a2a24Cd8',\r\n    },\r\n    decimals: 18,\r\n  },\r\n  bglg: {\r\n    symbol: 'BGLG',\r\n    address: {\r\n      56: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\r\n      97: '0xEa01D8D9EaCCa9996Db6Bb3377c1Fe64308e7328',\r\n    },\r\n    decimals: 18,\r\n  },\r\n  kgo: {\r\n    symbol: 'KGO',\r\n    address: {\r\n      56: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\r\n      97: '0x5d3AfBA1924aD748776E4Ca62213BF7acf39d773',\r\n    },\r\n    decimals: 18,\r\n    iconExtension: 'png',\r\n  },\r\n  tipsy: {\r\n    symbol: 'TIPSY ',\r\n    address: {\r\n      56: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\r\n      97: '0xf380334b9A181F54BF2f32FDD3e153D259472eBB',\r\n    },\r\n    decimals: 18,\r\n    iconExtension: 'png',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n\r\n","import { TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n  iconExtension?: string | 'svg'\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  stakingAddresses: Address\r\n  token: Token\r\n  pairToken: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  liquidityUrl?: string\r\n  infoURL?: string\r\n  isPromoted?: number\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  isComingSoon?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n  isAddTokenDisabled?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type NftSource = {\r\n  [key in NftType]: {\r\n    address: Address\r\n    identifierKey: string\r\n  }\r\n}\r\n\r\nexport enum NftType {\r\n  PANCAKE = 'pancake',\r\n  MIXIE = 'mixie',\r\n}\r\n\r\nexport type Nft = {\r\n  description: string\r\n  name: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  type: NftType\r\n  video?: NftVideo\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  // Used to be \"bunnyId\". Used when minting NFT\r\n  variationId?: number | string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      {prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {unit && <span>{unit}</span>}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    min-height: 500px;\r\n    height: auto;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useEffect, useState } from 'react'\r\nimport { SPARKSWAP_API, API_ASSETS, API_SUMMARY, API_LIQUIDITY, API_LASTPRICE } from 'config'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport const usePoolPrice = (stakingTokenAddress: string, rewardTokenAddress: string) => {\r\n    const [stakingPrice, setStakingPrice] = useState(0)\r\n    const [rewardPrice, setRewardPrice] = useState(0)\r\n\r\n    const web3 = useWeb3()\r\n    let _stakingTokenAddress\r\n    let _rewardTokenAddress\r\n    try{\r\n        _stakingTokenAddress = web3.utils.toChecksumAddress(stakingTokenAddress)\r\n        _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\r\n    }\r\n    catch{\r\n        console.error('Invalid staking and reward address')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        try {\r\n            let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\r\n            assets = await assets.json();\r\n            const lastPrice = \"last_price\"\r\n            \r\n            setStakingPrice(assets[_stakingTokenAddress][lastPrice])\r\n            setRewardPrice(assets[_rewardTokenAddress][lastPrice])\r\n        } catch (error) {\r\n          console.error('Unable to fetch data:', error)\r\n        }\r\n      }\r\n  \r\n      fetchData()\r\n    }, [setStakingPrice, setRewardPrice,_stakingTokenAddress, _rewardTokenAddress])\r\n\r\n    return {stakingPrice, rewardPrice}\r\n}\r\n\r\nexport const useFarmPrice = (lpTotalSupply: number, token1Address: string, token2Address: string, rewardTokenAddress: string) => {\r\n    const [LPPrice, setLPPrice] = useState(0)\r\n    const [rewardPrice, setRewardPrice] = useState(0)\r\n\r\n    const web3 = useWeb3()\r\n    let _token1Address\r\n    let _token2Address\r\n    let _rewardTokenAddress\r\n    try{\r\n        _token1Address = web3.utils.toChecksumAddress(token1Address)\r\n        _token2Address = web3.utils.toChecksumAddress(token2Address)\r\n        _rewardTokenAddress = web3.utils.toChecksumAddress(rewardTokenAddress)\r\n    }\r\n    catch{\r\n        console.error('Invalid staking and reward address')\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        try {\r\n\r\n            let assets = await fetch(SPARKSWAP_API.concat(API_ASSETS))\r\n            assets = await assets.json()\r\n            let summary = await fetch(SPARKSWAP_API.concat(API_SUMMARY))\r\n            summary = await summary.json()\r\n\r\n            let pairLiquidity\r\n\r\n            if(Object.prototype.hasOwnProperty.call(summary, _token1Address.concat(\"_\",_token2Address))){\r\n                pairLiquidity = summary[_token1Address.concat(\"_\",_token2Address)][API_LIQUIDITY];\r\n            }\r\n            else{\r\n                pairLiquidity = summary[_token2Address.concat(\"_\",_token1Address)][API_LIQUIDITY];\r\n            }\r\n\r\n            setLPPrice( pairLiquidity / getBalanceNumber(new BigNumber(lpTotalSupply), 18)  )\r\n            setRewardPrice(assets[_rewardTokenAddress][API_LASTPRICE])\r\n        } catch (error) {\r\n          console.error('Unable to fetch data:', error)\r\n        }\r\n      }\r\n  \r\n      fetchData()\r\n    }, [setLPPrice, setRewardPrice, lpTotalSupply, _token1Address, _token2Address, _rewardTokenAddress])\r\n\r\n    return {LPPrice, rewardPrice}\r\n}\r\n\r\nexport default usePoolPrice","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  // background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from '@sparkpointio/sparkswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  decimals?: number\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: transparent;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n    // box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  flex: 1;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n  background: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n\r\n  &:focus:not(:disabled) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\n// const StyledErrorMessage = styled(Text)`\r\n//   position: absolute;\r\n//   bottom: -22px;\r\n//\r\n//   a {\r\n//     display: inline;\r\n//   }\r\n// `\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n                                                 max,\r\n                                                 // symbol,\r\n                                                 onChange,\r\n                                                 onSelectMax,\r\n                                                 value,\r\n                                                 // addLiquidityUrl,\r\n                                                 // inputTitle,\r\n                                                 decimals = 18,\r\n                                               }) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  // const displayBalance = (balance: string) => {\r\n  //   if (isBalanceZero) {\r\n  //     return '0'\r\n  //   }\r\n  //   const balanceBigNumber = new BigNumber(balance)\r\n  //   if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\r\n  //     return balanceBigNumber.toLocaleString()\r\n  //   }\r\n  //   return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  // }\r\n\r\n  return (\r\n    <div style={{ position: 'relative', margin: '15px 0px' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        {/* <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n        </Flex> */}\r\n        <Flex alignItems='flex-end' justifyContent='space-around'>\r\n          <StyledInput\r\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n            inputMode='decimal'\r\n            step='any'\r\n            min='0'\r\n            onChange={onChange}\r\n            placeholder='0'\r\n            value={value}\r\n          />\r\n          <Button size='sm' onClick={onSelectMax} mr='8px' mb='4px'>\r\n            {t('Max')}\r\n          </Button>\r\n          {/* <Text fontSize=\"16px\">{symbol}</Text> */}\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      <Flex>\r\n        {/* <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Available')}: {getFullDisplayBalance}\r\n          </Text>  */}\r\n\r\n\r\n      </Flex>\r\n      {/* {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getLpStakingContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useLPStakingContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLpStakingContract(address, web3), [address, web3])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getEasterNftContract(web3), [web3])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeVaultContract(web3), [web3])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPredictionsContract(web3), [web3])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\r\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\r\n\r\nexport const getAprData = (pool: Pool, performanceFee: number) => {\r\n  const { isAutoVault, earningTokenPrice, apr } = pool\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimals = isHighValueToken ? 4 : 2\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\r\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n      numberOfDays: 365,\r\n      farmApr: apr,\r\n      tokenPrice: earningTokenPrice,\r\n      roundingDecimals,\r\n      compoundFrequency,\r\n      performanceFee,\r\n    })\r\n    const autoApr = getRoi({\r\n      amountEarned: tokenEarnedPerThousand365D,\r\n      amountInvested: oneThousandDollarsWorthOfToken,\r\n    })\r\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n  }\r\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport web3NoAccount from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : web3NoAccount)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import Web3 from 'web3'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  web3?: Web3\r\n  blockNumber?: number\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\r\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\r\n    const itf = new Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\r\n */\r\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}): Promise<any> => {\r\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.methods\r\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\r\n    .call(undefined, options.blockNumber)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n  },\r\n})\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\nexport { setBlock } from './block'\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { ethers } from 'ethers'\r\nimport { Pair, Token, TokenAmount } from '@pancakeswap-libs/sdk'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLpContract, getLpStakingContract, getMasterchefContract } from 'utils/contractHelpers'\r\nimport farms from 'config/constants/farms'\r\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\r\nimport tokens from 'config/constants/tokens'\r\nimport { web3WithArchivedNodeProvider } from './web3'\r\nimport { getBalanceAmount } from './formatBalance'\r\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const approveWithAmount = async (lpContract, masterChefContract, account, amount) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, amount)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account, useV2 = false) => {\r\n  if (useV2) {\r\n    return masterChefContract.methods\r\n      .stake(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({\r\n      from: account,\r\n      gas: DEFAULT_GAS_LIMIT,\r\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\r\n    })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const exit = async (contract: Contract, account) => {\r\n  return contract.methods\r\n    .exit()\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const claim = async (contract, account) => {\r\n  return contract.methods\r\n    .getReward()\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking('0')\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\nconst cakeBnbPid = 251\r\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\r\n\r\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\r\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\r\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\r\n\r\n/**\r\n * Returns the total CAKE staked in the CAKE-BNB LP\r\n */\r\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\r\n  try {\r\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\r\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), web3WithArchivedNodeProvider)\r\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\r\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\r\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\r\n\r\n    const pair: Pair = new Pair(\r\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\r\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\r\n    )\r\n    const cakeLPBalance = pair.getLiquidityValue(\r\n      pair.token0,\r\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\r\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\r\n      false,\r\n    )\r\n\r\n    return new BigNumber(cakeLPBalance.toSignificant(18))\r\n  } catch (error) {\r\n    console.error(`CAKE-BNB LP error: ${error}`)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const getLPStakingDetails = async (stakingAddresses, account: string) => {\r\n  try {\r\n    const contract = getLpStakingContract(getAddress(stakingAddresses))\r\n\r\n    return {\r\n      stakedTokens: await contract.methods.balanceOf(account).call(),\r\n      totalDeposits: await contract.methods.totalSupply().call(),\r\n      rewardRate: await contract.methods.rewardRate().call(),\r\n    }\r\n  } catch (error) {\r\n    console.error(`LP Staking error: ${error}`)\r\n    return {\r\n      totalDeposits: '-',\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the cake staked in the main pool\r\n */\r\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\r\n  try {\r\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\r\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\r\n\r\n    return getBalanceAmount(new BigNumber(response.amount))\r\n  } catch (error) {\r\n    console.error('Error getting stake in CAKE pool', error)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'totalDeposit',\r\n      params: [],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(sousChefV2, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\r\n    return new BigNumber(stakingLimit)\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport web3NoAccount from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\r\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\r\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\r\n\r\nexport default web3NoAccount\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\n\r\nexport type SerializedBigNumber = string\r\n\r\nexport interface Farm extends FarmConfig {\r\n  totalDeposits?: string\r\n  rewardRate?: SerializedBigNumber\r\n  totalRewardRate?: SerializedBigNumber\r\n  hasEnded?: boolean\r\n  remainingDays?: string\r\n  tokenAmountMc?: SerializedBigNumber\r\n  quoteTokenAmountMc?: SerializedBigNumber\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  quoteTokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  isPromoted?: number\r\n  userData?: {\r\n    allowance: string\r\n    tokenBalance: string\r\n    stakedBalance: string\r\n    earnings: string\r\n  }\r\n}\r\n\r\nexport interface Pool extends PoolConfig {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface FarmsState {\r\n  data: Farm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: Pool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  failed?: boolean\r\n  startBlock: number\r\n  startAt: number\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockPrice: number\r\n  endBlock: number\r\n  closePrice: number\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bullAmount: number\r\n  position: BetPosition\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  id: string\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: PredictionUser\r\n  round: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  address: string\r\n  block: number\r\n  totalBets: number\r\n  totalBNB: number\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: Round\r\n}\r\n\r\nexport interface HistoryData {\r\n  [key: string]: Bet[]\r\n}\r\n\r\nexport interface BetData {\r\n  [key: string]: {\r\n    [key: string]: Bet\r\n  }\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  currentRoundStartBlockNumber: number\r\n  intervalBlocks: number\r\n  bufferBlocks: number\r\n  minBetAmount: string\r\n  lastOraclePrice: string\r\n  rounds: RoundData\r\n  history: HistoryData\r\n  bets: BetData\r\n}\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: FarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n}\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 3,\r\n    stakingToken: tokens.srkb,\r\n    earningToken: tokens.srkb,\r\n    contractAddress: {\r\n      97: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\r\n      56: '0x0dE59a7217deAa24f891797142F6fBf9CE78B698',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2893518518518518518',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    isComingSoon: false,\r\n  },\r\n  {\r\n    sousId: 4,\r\n    stakingToken: tokens.sfuel,\r\n    earningToken: tokens.sfuel,\r\n    contractAddress: {\r\n      97: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\r\n      56: '0x54277Be7F64168E8713B710fbCcC5b2B663BD637',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '135030864197530864',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    isComingSoon: false,\r\n  },\r\n  {\r\n    sousId: 5,\r\n    stakingToken: tokens.kroot,\r\n    earningToken: tokens.srkb,\r\n    contractAddress: {\r\n      97: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\r\n      56: '0x8BCcC95ED233e8f89359c6c704deb0EbF4938Dfb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2905478395061728395',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    isComingSoon: false,\r\n    isAddTokenDisabled: true\r\n  },\r\n  {\r\n    sousId: 6,\r\n    stakingToken: tokens.srkb,\r\n    earningToken: tokens.kroot,\r\n    contractAddress: {\r\n      97: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\r\n      56: '0xC9359C0929a00429EBfA6c373938bBdacB45F414',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3307098765432098765',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    isComingSoon: false,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: tokens.bglg,\r\n    earningToken: tokens.sfuel,\r\n    contractAddress: {\r\n      97: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\r\n      56: '0x6964ac226B29Aae4c674a7aeC3De67a5AB345d51',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '200231481481481481',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    isComingSoon: false,\r\n    isAddTokenDisabled: true\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: tokens.sfuel,\r\n    earningToken: tokens.bglg,\r\n    contractAddress: {\r\n      97: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\r\n      56: '0xec93fe084d1b439fc7dcc6e67340ecaabe39c17f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '530864197530864197',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: tokens.tipsy,\r\n    earningToken: tokens.tipsy,\r\n    contractAddress: {\r\n      97: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\r\n      56: '0x1DEC10EF7a9F8031715bC09DB5fa0bCC20E2780B',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '307004629629629629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: tokens.sfuel,\r\n    earningToken: tokens.tipsy,\r\n    contractAddress: {\r\n      97: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\r\n      56: '0x147c920e611d474E66151070C2EAdcCBAfBd6bc1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '307004629629629629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  // Dummy Contract #1\r\n  // {\r\n  //   sousId: 4,\r\n  //   stakingToken: tokens.sfuel,\r\n  //   earningToken: tokens.sfuel,\r\n  //   contractAddress: {\r\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f1a',\r\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca1a',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '49603174603174603',\r\n  //   sortOrder: 999,\r\n  //   isFinished: true,\r\n  //   isComingSoon: true,\r\n  // },\r\n  // Dummy Contract #2\r\n  // {\r\n  //   sousId: 5,\r\n  //   stakingToken: tokens.srkb,\r\n  //   earningToken: tokens.sfuel,\r\n  //   contractAddress: {\r\n  //     97: '0xa4bf8a4abb7fd91971854ac0aade50c61afd9f3a',\r\n  //     56: '0x9c03326543bf9a927a5ff51c407fbc444f19ca3a',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '49603174603174603',\r\n  //   sortOrder: 999,\r\n  //   isFinished: true,\r\n  //   isComingSoon: false,\r\n  // }\r\n]\r\n\r\nexport default pools\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  MarketResponse,\r\n  TotalWonMarketResponse,\r\n  TotalWonRoundResponse,\r\n} from './queries'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\r\n  return {\r\n    id: epoch.toString(),\r\n    epoch: epoch.toString(),\r\n    startBlock: startBlock.toString(),\r\n    failed: null,\r\n    startAt: null,\r\n    lockAt: null,\r\n    lockBlock: null,\r\n    lockPrice: null,\r\n    endBlock: null,\r\n    closePrice: null,\r\n    totalBets: '0',\r\n    totalAmount: '0',\r\n    bearBets: '0',\r\n    bullBets: '0',\r\n    bearAmount: '0',\r\n    bullAmount: '0',\r\n    position: null,\r\n    bets: [],\r\n  }\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedHash: betResponse.claimedHash,\r\n    user: {\r\n      id: betResponse.user.id,\r\n      address: betResponse.user.address,\r\n      block: numberOrNull(betResponse.user.block),\r\n      totalBets: numberOrNull(betResponse.user.totalBets),\r\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\r\n    },\r\n  } as Bet\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    startBlock,\r\n    startAt,\r\n    lockAt,\r\n    lockBlock,\r\n    lockPrice,\r\n    endBlock,\r\n    closePrice,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bearBets,\r\n    bearAmount,\r\n    bullAmount,\r\n    position,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  const getRoundPosition = (positionResponse: string) => {\r\n    if (positionResponse === 'Bull') {\r\n      return BetPosition.BULL\r\n    }\r\n\r\n    if (positionResponse === 'Bear') {\r\n      return BetPosition.BEAR\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    epoch: numberOrNull(epoch),\r\n    startBlock: numberOrNull(startBlock),\r\n    startAt: numberOrNull(startAt),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\r\n    endBlock: numberOrNull(endBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : null,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: numberOrNull(bearAmount),\r\n    bullAmount: numberOrNull(bullAmount),\r\n    position: getRoundPosition(position),\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\r\n  return {\r\n    id: marketResponse.id,\r\n    paused: marketResponse.paused,\r\n    epoch: Number(marketResponse.epoch.epoch),\r\n  }\r\n}\r\n\r\nexport const transformTotalWonResponse = (\r\n  marketResponse: TotalWonMarketResponse,\r\n  roundResponse: TotalWonRoundResponse[],\r\n): number => {\r\n  const houseRounds = roundResponse.reduce((accum, round) => {\r\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\r\n  }, 0)\r\n\r\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\r\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\r\n}\r\n\r\nexport const makeRoundData = (rounds: Round[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.id]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\n/**\r\n * Given a bet object, check if it is eligible to be claimed or refunded\r\n */\r\nexport const getCanClaim = (bet: Bet) => {\r\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n}\r\n\r\n/**\r\n * Returns only bets where the user has won.\r\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\r\n */\r\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\r\n  return bets.filter(getCanClaim)\r\n}\r\n\r\n/**\r\n * Gets static data from the contract\r\n */\r\nexport const getStaticPredictionsData = async () => {\r\n  const calls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks'].map((method) => ({\r\n    address: getPredictionsAddress(),\r\n    name: method,\r\n  }))\r\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [isPaused], [bufferBlocks]] = await multicallv2(\r\n    predictionsAbi,\r\n    calls,\r\n  )\r\n\r\n  return {\r\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalBlocks: intervalBlocks.toNumber(),\r\n    bufferBlocks: bufferBlocks.toNumber(),\r\n    minBetAmount: minBetAmount.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getMarketData = async (): Promise<{\r\n  rounds: Round[]\r\n  market: Market\r\n}> => {\r\n  const response = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getMarketData {\r\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\r\n          ${getRoundBaseFields()}\r\n        }\r\n        market(id: 1) {\r\n          id\r\n          paused\r\n          epoch {\r\n            epoch\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\r\n\r\n  return {\r\n    rounds: response.rounds.map(transformRoundResponse),\r\n    market: transformMarketResponse(response.market),\r\n  }\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const response = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData($position: String) {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n        rounds(where: { position: $position }) {\r\n          totalAmount\r\n        }\r\n      }\r\n    `,\r\n    { position: BetPosition.HOUSE },\r\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\r\n\r\n  return transformTotalWonResponse(response.market, response.rounds)\r\n}\r\n\r\nexport const getRound = async (id: string) => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getRound($id: ID!) {\r\n        round(id: $id) {\r\n          ${getRoundBaseFields()}\r\n          bets {\r\n           ${getBetBaseFields()}\r\n            user {\r\n             ${getUserBaseFields()}\r\n            }\r\n          }\r\n        }\r\n      }\r\n  `,\r\n    { id },\r\n  )\r\n  return response.round\r\n}\r\n\r\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (\r\n  where: BetHistoryWhereClause = {},\r\n  first = 1000,\r\n  skip = 0,\r\n): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n","export interface UserResponse {\r\n  id: string\r\n  address: string\r\n  block: string\r\n  totalBets: string\r\n  totalBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  failed: boolean\r\n  startBlock: string\r\n  startAt: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockPrice: string\r\n  endBlock: string\r\n  closePrice: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bearBets: string\r\n  bullBets: string\r\n  bearAmount: string\r\n  bullAmount: string\r\n  position: string\r\n  bets: BetResponse[]\r\n}\r\n\r\nexport interface MarketResponse {\r\n  id: string\r\n  paused: boolean\r\n  epoch: {\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\nexport interface TotalWonRoundResponse {\r\n  totalAmount: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  failed\r\n  startAt\r\n  startBlock\r\n  lockAt\r\n  lockBlock\r\n  lockPrice\r\n  endAt\r\n  endBlock\r\n  closePrice\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n  position\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n  id\r\n  hash  \r\n  amount\r\n  position\r\n  claimed\r\n  claimedHash\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  address\r\n  block\r\n  totalBets\r\n  totalBNB\r\n`\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\nexport function RedirectToFarms({ location }: RouteComponentProps){\r\n    return <Redirect to={{...location, pathname: '/farms'}} />\r\n}\r\n\r\nexport function RedirectToPools({ location }: RouteComponentProps){\r\n    return <Redirect to={{...location, pathname: '/pools'}} />\r\n}","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@sparkpointio/sparkswap-uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: \"Swap\",\r\n    icon: \"TradeIcon\",\r\n    href: \"https://sparkswap.finance/#/swap\",\r\n  },\r\n  {\r\n    label: \"Staking\",\r\n    icon: \"FarmIcon\",\r\n    items: [\r\n      {\r\n        label: \"Farms\",\r\n        href: \"/farms\",\r\n      },\r\n      {\r\n        label: \"Pools\",\r\n        href: \"/pools\",\r\n      },\r\n      {\r\n        label: \"Old Farms/Pools\",\r\n        href: \"https://app.srk.finance/#/stake\",\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: \"Farm\",\r\n  //   icon: \"FarmIcon\",\r\n  //   href: \"https://app.srk.finance/#/stake\",\r\n  // },\r\n  // {\r\n  //   label: \"Pool\",\r\n  //   icon: \"PoolIcon\",\r\n  //   href: \"/pools\",\r\n  // },\r\n  {\r\n    label: \"Bridge\",\r\n    icon: \"BridgeIcon\",\r\n    href: \"https://app.srk.finance/#/bridge\",\r\n  },\r\n  {\r\n    label: \"Launch\",\r\n    icon: \"LaunchIcon\",\r\n    href: \"https://launch.sparkswap.finance/#/\",\r\n  },\r\n  {\r\n    label: \"Info\",\r\n    icon: \"InfoIcon\",\r\n    href: \"https://sparkswap.info/#/home\",\r\n  },\r\n  {\r\n    label: \"Airdrop\",\r\n    icon: \"AirdropIcon\",\r\n    href: \"https://app.srk.finance/#/airdrop\",\r\n  },\r\n  {\r\n    label: \"Teams\",\r\n    icon: \"GroupsIcon\",\r\n    href: \"https://srk.finance/team\",\r\n  },\r\n  {\r\n    label: \"Help\",\r\n    icon: \"MoreIcon\",\r\n    href: \"https://medium.com/theecosystem/a-beginners-guide-to-sparkswap-79f92a2f7074\"\r\n  }\r\n  // {\r\n  //   label: 'Trade',\r\n  //   icon: 'TradeIcon',\r\n  //   initialOpenState: true,\r\n  //   items: [\r\n  //     {\r\n  //       label: 'Exchange',\r\n  //       href: '/swap'\r\n  //     },\r\n  //     {\r\n  //       label: 'Liquidity',\r\n  //       href: '/pool'\r\n  //     }\r\n  //   ]\r\n  // },\r\n  /*\r\n  {\r\n    label: \"Info\",\r\n    icon: \"InfoIcon\",\r\n    items: [\r\n      {\r\n        label: \"Overview\",\r\n        href: \"https://coinmarketcap.com/currencies/sparkpoint/\",\r\n      },\r\n      {\r\n        label: \"Trade SRK\",\r\n        href: \"https://srk.sh/trade\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"More\",\r\n    icon: \"MoreIcon\",\r\n    items: [\r\n      {\r\n        label: \"SparkDeFi\",\r\n        href: \"https://srk.finance/\",\r\n      },\r\n      {\r\n        label: \"SparkPoint\",\r\n        href: \"https://sparkpoint.io/\",\r\n      },\r\n      {\r\n        label: \"Github\",\r\n        href: \"https://github.com/sparkpointio\",\r\n      },\r\n      {\r\n        label: \"White Paper\",\r\n        href: \"https://github.com/sparkpointio/sparkdefi-whitepaper/blob/main/WHITEPAPER.md\",\r\n      },\r\n      {\r\n        label: \"Blog\",\r\n        href: \"https://medium.com/theecosystem\",\r\n      },\r\n    ],\r\n  },\r\n  */\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@sparkpointio/sparkswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const { currentLanguage, setLanguage } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      links={config}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { ToastContainer } from '@pancakeswap/uikit'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { ChainId, CurrencyAmount, JSBI, Percent } from '@pancakeswap-libs/sdk'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport { Card } from '@sparkpointio/sparkswap-uikit'\r\n\r\nconst PromotedGradient = keyframes`\r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\nexport const StyledCard = styled(Card)<{ isPromotedPool?: boolean; isFinished?: boolean }>`\r\n  border: 5px solid ${(props) => props.theme.colors.primary};\r\n  max-width: 352px;\r\n  padding: 24px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  justify-content: space-around;\r\n  background: ${(props) => props.theme.card.background};\r\n  text-align: center;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport const StyledCardInner = styled.div<{ isPromotedPool?: boolean }>`\r\n  background: ${({ theme }) => theme.card.background};\r\n\r\n  // border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\r\n\r\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage\r\n","import React, { useContext } from 'react'\r\nimport { Heading, Text, Flex, Image } from '@sparkpointio/sparkswap-uikit'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Token } from 'config/constants/types'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled.div<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) => theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n//  background: ${({ isFinished, background, theme }) =>\r\n// isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n// border-radius: ${({ theme, isPromotedPool }) =>\r\n// isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  // const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n  const background = 'cardHeader'\r\n\r\n/*\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n*/\r\n\r\n  const getCardTitle = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t(`Stake CAKE to Earn CAKE`)\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n    // return t('Stake %symbol% to Earn SRK', { symbol: stakingToken.symbol } )\r\n  }\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\" style={{textAlign: 'left'}}>\r\n          <Heading color='text' size=\"lg\">\r\n            {`Stake ${stakingToken.symbol}`} <br/>\r\n            to <br />\r\n            {`Earn ${earningToken.symbol}`}\r\n          </Heading>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={stakingToken} secondaryToken={earningToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\r\nimport { Modal, Text, Flex, Image, Button} from '@sparkpointio/sparkswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useSousApprove, useSousApproveWithAmount } from 'hooks/useApprove'\r\nimport { useTokenAllowance } from 'hooks/useTokenBalance'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount, getBalanceNumber } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport PercentageButton from './PercentageButton'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onSelectMax?: () => void\r\n  onDismiss?: () => void\r\n  isApprove?: boolean\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst ModalBody = styled(Flex)`\r\n  width: 450px;\r\n  margin-top: -20px;\r\n  padding: 20px;\r\n`\r\nconst StakeActionModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n  isApprove = false,\r\n}) => {\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const approveBtn = useRef(null);\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  // const [approvedTx, setApprovedTx] = useState(false)\r\n  const [isApproved, setIsApproved] = useState(isApprove)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const userLimit = stakingLimit.minus(userData.stakedBalance);\r\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : BIG_ZERO\r\n  const numTotalStaked = totalStakedTokens\r\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : BIG_ZERO\r\n  const remainingStakeTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(pool.stakingLimit.minus(userData.stakedBalance)), stakingToken.decimals) : BIG_ZERO\r\n  const totalAllowance = useTokenAllowance(stakingToken.address[56], pool.contractAddress[56])\r\n  const { handleApprove, requestedApproval } = useSousApproveWithAmount(stakingTokenContract, sousId, earningToken.symbol, getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals))\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(BIG_ZERO) && stakingTokenBalance.gt(userLimit) ? userLimit : stakingTokenBalance\r\n  }\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n    setIsApproved(totalAllowance.balance.gte(getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)))\r\n  }, [requestedApproval, stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, totalAllowance, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  // const handleApproveClick = async () => {\r\n  //   setApprovedTx(true)\r\n  // }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        setIsApproved(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal title=\"\" onDismiss={onDismiss}>\r\n      <ModalBody flexDirection=\"column\">\r\n        {/* {stakingLimit.gt(0) && !isRemovingStake && (\r\n          <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n            {t('Max stake for this pool: %amount% %token%', {\r\n              amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n              token: stakingToken.symbol,\r\n            })}\r\n          </Text>\r\n        )} */}\r\n\r\n        <Flex justifyContent=\"center\">\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"38px\" mt=\"-48px\" style={{ textAlign: 'center'}}>\r\n            {t('Maximum stakable amount in this pool: %maxstake% %tokensymbol%', {\r\n              maxstake: getFullDisplayBalance(stakingLimit, stakingToken.decimals),\r\n              tokensymbol: pool.stakingToken.symbol\r\n            })}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n          <Text bold>Stake amount</Text>\r\n          {/* <Flex alignItems=\"center\">\r\n            <Image\r\n              src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n              width={24}\r\n              height={24}\r\n              alt={stakingToken.symbol}\r\n            />\r\n            <Text ml=\"4px\" bold>\r\n              {stakingToken.symbol}\r\n            </Text>\r\n          </Flex> */}\r\n        </Flex>\r\n        <ModalInput\r\n          value={stakeAmount}\r\n          onSelectMax={() => {handleChangePercent(100)}}\r\n          onChange={e => handleStakeInputChange(e.currentTarget.value)}\r\n          max={getFullDisplayBalance(new BigNumber(userLimit), stakingToken.decimals, 0)}\r\n          symbol={stakingToken.symbol}\r\n          addLiquidityUrl=''\r\n        />\r\n\r\n        {/* Fetch and display actual balance */}\r\n\r\n        <Text color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\r\n          Remaining stakable amount: {remainingStakeTokens} {pool.stakingToken.symbol}\r\n        </Text>\r\n\r\n\r\n        <div>\r\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"14px\" mb=\"8px\" style={{ textAlign: 'left'}}>\r\n          {/* {t('Balance: %balance%', {\r\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n          })} */}\r\n          Balance: {totalStakingTokens.toFixed(4)} {pool.stakingToken.symbol}\r\n        </Text>\r\n        </div>\r\n\r\n\r\n\r\n        {/* {hasReachedStakeLimit && (\r\n          <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n            {t('Maximum total stake: %amount% %token%', {\r\n              amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n              token: stakingToken.symbol,\r\n            })}\r\n          </Text>\r\n        )} */}\r\n        {/* <Flex>\r\n        <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\" mt=\"-8px\" style={{ textAlign: 'left'}}>\r\n          {t('Balance: %balance%', {\r\n            balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n          })}\r\n        </Text>\r\n        </Flex> */}\r\n        {/* <Slider\r\n          min={0}\r\n          max={100}\r\n          value={percent}\r\n          onValueChanged={handleChangePercent}\r\n          name=\"stake\"\r\n          valueLabel={`${percent}%`}\r\n          step={1}\r\n        />\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n          <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n          <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n          <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n          <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n        </Flex> */}\r\n\r\n        <Flex justifyContent=\"space-between\"  marginTop=\"17px\" marginBottom=\"17px\">\r\n          <Text bold>Approved Tokens</Text>\r\n          <Text>\r\n            {getBalanceNumber(totalAllowance.balance, stakingToken.decimals)} {pool.stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n        <Flex style={{width: '100%'}}>\r\n        <Button\r\n          isLoading={pendingTx}\r\n          // endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          // onClick={handleApproveClick}\r\n          // disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || approvedTx}\r\n          onClick={handleApprove}\r\n          disabled={!stakeAmount || isApproved}\r\n          mt=\"24px\"\r\n          fullWidth\r\n          marginRight=\"20px\"\r\n        >\r\n         Approve\r\n        </Button>\r\n        <Button\r\n          isLoading={pendingTx}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          disabled={!stakeAmount || hasReachedStakeLimit || !isApproved}\r\n          // disabled={!approvedTx}\r\n          mt=\"24px\"\r\n          fullWidth\r\n          marginLeft=\"20px\"\r\n        >\r\n          {/* {pendingTx ? t('Depositing') : t('Deposit')} */}\r\n          {t('Deposit')}\r\n        </Button>\r\n        </Flex>\r\n        {/* {!isRemovingStake && (\r\n          <StyledLink external href={BASE_EXCHANGE_URL}>\r\n            <Button fullWidth mt=\"8px\" variant=\"secondary\">\r\n              {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n            </Button>\r\n          </StyledLink>\r\n        )} */}\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeActionModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {  Slider, BalanceInput, } from '@pancakeswap/uikit';\r\nimport { Modal, Text, Flex, Image, Button, AutoRenewIcon, Link, Dropdown, useModal} from '@sparkpointio/sparkswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport { ChevronDown, ChevronUp } from 'react-feather';\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getBalanceNumber } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\nimport StakeTokenModal from './Stake';\r\nimport PercentageButton from './PercentageButton'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n  addTokenUrl?: string\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\nconst StyledFlex = styled(Flex)`\r\njustify-content: center;\r\n  & > * {\r\n    flex: 1;\r\n    margin: 0px 10px;\r\n  }\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  addTokenUrl,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, userData, isAddTokenDisabled, earningToken } = pool\r\n  console.log(isAddTokenDisabled?? false)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId, false)\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const [activeSelect, setActiveSelect] = useState(false)\r\n  const { balance: earnedTokenBalance } = useTokenBalance(pool.earningToken.address[56])\r\n  const { toastSuccess, toastError } = useToast()\r\n  const totalStakingTokens = userData?.stakingTokenBalance ? getBalanceNumber(new BigNumber(userData.stakingTokenBalance), stakingToken.decimals) : 0\r\n  const totalStakedTokens = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : 0\r\n  const totalEarningTokens = earnedTokenBalance ? getBalanceNumber(new BigNumber(earnedTokenBalance)) : 0\r\n  const totalEarnedTokens = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : 0\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const temp = new BigNumber(pool.tokenPerBlock).times( new BigNumber(userData.stakedBalance).div(pool.totalStaked)  )\r\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : 0\r\n  const [ onPresentStakeAction ] = useModal(<StakeTokenModal isBnbPool={isBnbPool} pool={pool} stakingTokenBalance={stakingTokenBalance} stakingTokenPrice={stakingTokenPrice} />)\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Claimed')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n  }\r\n\r\n  const handleUnstake = async () => {\r\n    setPendingTx(true)\r\n      // unstaking\r\n      try {\r\n        await onUnstake(getFullDisplayBalance(new BigNumber(userData.stakedBalance), stakingToken.decimals, 18) , stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been claimed to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n\r\n\r\n  return (\r\n    <Modal\r\n    title=\"\"\r\n    onDismiss={onDismiss}\r\n  >\r\n    <Flex flexDirection=\"column\" style={{marginTop: '-50px', width: \"550px\"}} >\r\n      <Text fontSize=\"20px\" marginBottom=\"10px\" marginLeft=\"10px\">Account Info</Text>\r\n      <Text fontSize=\"15px\" marginLeft=\"10px\">Staking, balances & earnings</Text>\r\n\r\n      {/* Remove extra add liquidity button component when staking token symbol is equal to earning token symbol */}\r\n      <StyledFlex marginTop=\"21px\">\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"24px\">{formatNumber(totalStakingTokens,2,5)}</Text>\r\n        <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.stakingToken.symbol} Tokens</Text>\r\n        <Button\r\n          disabled={isAddTokenDisabled}\r\n          fullWidth\r\n          className='disabled'\r\n          onClick={() => {\r\n            window.open(`https://sparkswap.finance/#/swap/${pool.stakingToken.address[56]}`, '_blank')\r\n          }}\r\n        >Add More</Button>\r\n      </Flex>\r\n      { pool.stakingToken.symbol !== pool.earningToken.symbol &&\r\n        <Flex flexDirection=\"column\">\r\n          <Text fontSize=\"24px\">{formatNumber(totalEarningTokens,2,5)}</Text>\r\n          <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.earningToken.symbol} Tokens</Text>\r\n          <Button\r\n            fullWidth\r\n            onClick={() => {\r\n              window.open(`https://sparkswap.finance/#/swap/${pool.earningToken.address[56]}`, '_blank')\r\n            }}>Add More</Button>\r\n        </Flex>\r\n      }\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"24px\">{formatNumber(totalStakedTokens,2,5)}</Text>\r\n        <Text color=\"textSubtle\" marginBottom=\"24px\">{pool.stakingToken.symbol} Staked</Text>\r\n        <Button fullWidth onClick={onPresentStakeAction}>Stake Tokens</Button>\r\n      </Flex>\r\n      </StyledFlex>\r\n\r\n      <StyledFlex >\r\n      <hr style={{marginTop: '30px', border: 'none', borderTop: `2px solid ${theme.colors.primary}` }} />\r\n      </StyledFlex>\r\n      <StyledFlex marginTop=\"30px\" marginBottom=\"20px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Text fontSize=\"24px\">{formatNumber(rewardRate,2,10)}</Text>\r\n          <Text color=\"textSubtle\" fontSize=\"17px\">Your Rate {pool.earningToken.symbol}/block</Text>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\">\r\n          <Text fontSize=\"24px\">{formatNumber(totalEarnedTokens,2,5)}</Text>\r\n          <Text color=\"textSubtle\" fontSize=\"17px\">{pool.earningToken.symbol} Token Earnings</Text>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\" mb=\"16px\" marginLeft=\"5px\"\r\n        onMouseEnter={() => setActiveSelect(true)}\r\n        onMouseLeave={() => setActiveSelect(false)}>\r\n\r\n       {userData.stakedBalance.eq(0) ? <Button disabled fullWidth> Withdraw </Button> : <Dropdown\r\n          position=\"top\"\r\n          target={\r\n            // Disable component if total staked tokens is empty\r\n            <Button fullWidth variant=\"secondary\">\r\n              <Text>Withdraw</Text> {activeSelect ? <ChevronDown /> : <ChevronUp />}\r\n            </Button>\r\n          }\r\n        >\r\n            {/* Disable Claim & Withdraw if no staked tokens */}\r\n            <Button fullWidth>\r\n              <Text onClick={handleHarvestConfirm}>Claim</Text>\r\n            </Button>\r\n            <Button>\r\n              <Text onClick={handleUnstake}>Claim & Withdraw</Text>\r\n            </Button>\r\n        </Dropdown>\r\n\r\n       }\r\n\r\n\r\n\r\n  </Flex>\r\n      </StyledFlex>\r\n    </Flex>\r\n  </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { IconButton, AddIcon, MinusIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { Button, Text, Flex, useModal } from '@sparkpointio/sparkswap-uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    // isStaked ? (\r\n    //   <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n    //     <Flex flexDirection=\"column\">\r\n    //       <>\r\n    //         <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n    //         {stakingTokenPrice !== 0 && (\r\n    //           <Text fontSize=\"12px\" color=\"textSubtle\">\r\n    //             <Balance\r\n    //               fontSize=\"12px\"\r\n    //               color=\"textSubtle\"\r\n    //               decimals={2}\r\n    //               value={stakedTokenDollarBalance}\r\n    //               prefix=\"~\"\r\n    //               unit=\" USD\"\r\n    //             />\r\n    //           </Text>\r\n    //         )}\r\n    //       </>\r\n    //     </Flex>\r\n    //     <Flex>\r\n    //       <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n    //         <MinusIcon color=\"primary\" width=\"24px\" />\r\n    //       </IconButton>\r\n    //       {reachStakingLimit ? (\r\n    //         <span ref={targetRef}>\r\n    //           <IconButton variant=\"secondary\" disabled>\r\n    //             <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n    //           </IconButton>\r\n    //         </span>\r\n    //       ) : (\r\n    //         <IconButton\r\n    //           variant=\"secondary\"\r\n    //           onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n    //           disabled={isFinished}\r\n    //         >\r\n    //           <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n    //         </IconButton>\r\n    //       )}\r\n    //     </Flex>\r\n    //     {tooltipVisible && tooltip}\r\n    //   </Flex>\r\n    // ) : \r\n\r\n    // Reserve function for future use\r\n    // <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired} fullWidth>\r\n    return (\r\n      <Button fullWidth disabled={isFinished} onClick={ onPresentStake }>\r\n        Stake\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex justifyContent=\"space-between\" alignItems=\"center\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport { getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst StyledFlex = styled(Flex)`\r\n  & > * {\r\n    flex: 1;\r\n    height: 60px;\r\n  }\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice, isComingSoon } = pool\r\n  // getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  const totalStaked = userData?.stakedBalance ? getBalanceNumber(new BigNumber(userData.stakedBalance), stakingToken.decimals) : 0\r\n  const totalEarned = userData?.pendingReward ? getBalanceNumber(new BigNumber(userData.pendingReward)) : 0\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\" >\r\n        {harvest && (\r\n          <>\r\n            <Flex justifyContent=\"space-between\">\r\n              <Box display=\"inline\">\r\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\r\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\r\n                  {`${stakingToken.symbol} Staked`}\r\n                </Text>\r\n              </Box>\r\n              <Box display=\"inline\">\r\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\r\n                <Text color=\"text\" bold fontSize=\"15px\" marginBottom=\"8px\">\r\n                  {`${earningToken.symbol} Earned`}\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n            <Flex justifyContent=\"space-between\" marginBottom=\"20px\">\r\n              <Box display=\"inline\">\r\n                {/* <Text color=\"text\" textTransform=\"uppercase\"  bold fontSize=\"12px\"> */}\r\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\r\n                   {!isComingSoon && formatNumber(totalStaked,2,5)} {isComingSoon && '-'} {stakingToken.symbol}\r\n                </Text>\r\n              </Box>\r\n              <Box display=\"inline\">\r\n                {/* <Text color=\"text\" textTransform=\"uppercase\" bold fontSize=\"12px\"> */}\r\n                <Text color=\"text\" textTransform=\"uppercase\" fontSize=\"12px\">\r\n                   {!isComingSoon && formatNumber(totalEarned,2,5)} {isComingSoon && '-'} {earningToken.symbol}\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        )}\r\n        {/* <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box> */}\r\n          <StyledFlex justifyContent=\"space-between\" marginTop=\"10px\">\r\n             <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n             {/* <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            /> */}\r\n          </StyledFlex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { CardBody, Flex, Text , Link, LinkExternal} from '@sparkpointio/sparkswap-uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { usePoolPrice } from 'hooks/price'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { Pool } from 'state/types'\r\nimport { getBalanceNumber , formatNumber } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport { StyledCard, StyledCardInner } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\n\r\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData, startBlock, endBlock, isComingSoon } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const totalStaked = pool.totalStaked ? getBalanceNumber(new BigNumber(pool.totalStaked.toString()), stakingToken.decimals) : 0\r\n\r\n  const rewardPerBlock = pool?.tokenPerBlock ? getBalanceNumber(new BigNumber(pool.tokenPerBlock.toString()), earningToken.decimals) : 0\r\n\r\n  const temp = new BigNumber(pool.tokenPerBlock).times( new BigNumber(userData.stakedBalance).div(pool.totalStaked)  )\r\n  const rewardRate = pool?.tokenPerBlock ? getBalanceNumber(temp) : 0\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n  getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const {stakingPrice, rewardPrice} = usePoolPrice(stakingToken.address[56], earningToken.address[56])\r\n\r\n  const apr = getPoolApr(stakingPrice, rewardPrice, totalStaked, rewardPerBlock)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n    >\r\n        <StyledCardHeader\r\n          isStaking={accountHasStakedBalance}\r\n          earningToken={earningToken}\r\n          stakingToken={stakingToken}\r\n          isFinished={isFinished && sousId !== 0}\r\n        />\r\n         <hr style={{width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px'}}/>\r\n\r\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n            <Text>Remaining blocks</Text>\r\n            <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n              <Text>{!isComingSoon && `${ formatNumber(blocksRemaining, 0, 0) }`} {isComingSoon && '-'} blocks</Text>\r\n            </Link>\r\n          </Flex>\r\n\r\n          {/* <AprRow pool={pool} stakingTokenPrice={stakingTokenPrice} /> */}\r\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n            <Text>Total Deposit</Text>\r\n            <Text>{!isComingSoon && `${ formatNumber(totalStaked) }`} {isComingSoon && '-'} {stakingToken.symbol}</Text>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n              <Text>Reward per block</Text>\r\n              <Text>{!isComingSoon && rewardPerBlock} {isComingSoon && '-'}</Text>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n            <Text>APY</Text>\r\n            <Text>{(apr === 0 || apr === null ? \"-- \" : apr.toFixed(2))}%</Text>\r\n          </Flex>\r\n          <Flex justifyContent=\"space-between\" style={{textAlign: 'left'}}>\r\n        <Text>{t('Your Rate')}</Text>\r\n        <Text>{!isComingSoon && formatNumber(rewardRate,2,10)} {isComingSoon && '-'} {pool.earningToken.symbol}/block</Text>\r\n      </Flex>\r\n          <Flex mt=\"24px\" flexDirection=\"column\" marginTop=\"10px\">\r\n            {account ? (\r\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n            ) : (\r\n              <>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n          {/* <Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text> */}\r\n        {/* <CardFooter pool={pool} account={account} /> */ }\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address &&\r\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n              <span ref={totalStakedTargetRef}>\r\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            <Text ml=\"4px\" small>\r\n              {performanceFee / 100}%\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\r\n          {t('Info site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from 'hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee').toLowerCase()\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { convertCakeToShares } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: Pool\r\n  stakingMax: BigNumber\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked =\r\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      cakeVaultContract.methods\r\n        .withdrawAll()\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setPendingTx(true)\r\n        })\r\n        .on('receipt', () => {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        })\r\n        .on('error', (error) => {\r\n          console.error(error)\r\n          // Remove message from toast before prod\r\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n          setPendingTx(false)\r\n        })\r\n    } else {\r\n      cakeVaultContract.methods\r\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\r\n        // .toString() being called to fix a BigNumber error in prod\r\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setPendingTx(true)\r\n        })\r\n        .on('receipt', () => {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        })\r\n        .on('error', (error) => {\r\n          console.error(error)\r\n          // Remove message from toast before prod\r\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n          setPendingTx(false)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    cakeVaultContract.methods\r\n      .deposit(convertedStakeAmount.toString())\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setPendingTx(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      })\r\n      .on('error', (error) => {\r\n        console.error(error)\r\n        // Remove message from toast before prod\r\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n        setPendingTx(false)\r\n      })\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    setPendingTx(true)\r\n    // unstaking\r\n    if (isRemovingStake) {\r\n      handleWithdrawal(convertedStakeAmount)\r\n      // staking\r\n    } else {\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: Pool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, useMatchBreakpoints } from '@sparkpointio/sparkswap-uikit'\r\nimport {Box,CardBody} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningToken={tokens.cake}\r\n          stakingToken={tokens.cake}\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#39BEEC;}\\r\\n\\t.st1{fill:#1B60A3;}\\r\\n\\t.st2{fill:#FFFFFF;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolDark);\nexport default __webpack_public_path__ + \"static/media/pool-dark.50231155.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  Toggle,\r\n  Text,\r\n  Flex,\r\n  useMatchBreakpoints,\r\n} from '@sparkpointio/sparkswap-uikit'\r\nimport {   NotificationDot, } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const location = useLocation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  let activeIndex\r\n  switch (location.pathname) {\r\n    case '/pools':\r\n      activeIndex = 0\r\n      break\r\n    case '/pools/history':\r\n      activeIndex = 1\r\n      break\r\n    case '/pools/upcoming':\r\n      activeIndex = 2\r\n      break\r\n    default:\r\n      activeIndex = 0\r\n      break\r\n  }\r\n\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <ButtonMenu activeIndex={activeIndex} size=\"sm\" variant=\"subtle\">\r\n      <ButtonMenuItem as={Link} to={`${url}`}>\r\n        {t('Active')}\r\n      </ButtonMenuItem>\r\n      <NotificationDot show={hasStakeInFinishedPools}>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {t('Ended')}\r\n        </ButtonMenuItem>\r\n      </NotificationDot>\r\n      {/* <ButtonMenuItem as={Link} to={`${url}/upcoming`}>\r\n        {t('Upcoming')}\r\n      </ButtonMenuItem> */}\r\n    </ButtonMenu>\r\n  )\r\n\r\n   const stakedOnlySwitch = (\r\n     <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\r\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\r\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\r\n     </Flex>\r\n   )\r\n\r\n  if (isXs || isSm) {\r\n    return (\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\r\n        <Flex style={{width: '100%' }}justifyContent=\"space-between\">\r\n          {/* {viewModeToggle} */}\r\n          {liveOrFinishedSwitch}\r\n        </Flex>\r\n        {/* {stakedOnlySwitch}  */}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent={['space-around', 'space-around', 'flex-start']}\r\n      mb={['24px', '24px', '24px', '0px']}\r\n    >\r\n      {/* {viewModeToggle} */}\r\n      {liveOrFinishedSwitch}\r\n      {/* {stakedOnlySwitch} */}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('Info site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isXs && !isSm}\r\n                  fontSize={isXs || isSm ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\r\n                    decimals={2}\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                    prefix=\"~\"\r\n                  />\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { isAutoVault } = pool\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {isAutoVault ? t('APY') : t('APR')}\r\n        </Text>\r\n        <Apr\r\n          pool={pool}\r\n          performanceFee={isAutoVault ? performanceFee : 0}\r\n          showIcon={!isXs && !isSm}\r\n          alignItems=\"flex-start\"\r\n        />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"100%\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { Pool } from 'state/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPoolLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#39BEEC;}\\r\\n\\t.st1{fill:#1B60A3;}\\r\\n\\t.st2{fill:#727071;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M270.7,262v-77.9c18-1.2,50.5-6.6,72.9-29c31.8-31.8,29.3-84,29.2-86.2c-0.4-6.5-5.5-11.6-12-12 c-2.2-0.1-54.4-2.6-86.2,29.2c-3.4,3.4-6.4,7-9,10.8c-4.7-18.7-13.4-39.7-29.8-56C197.7,3,135.2,6,132.5,6.1 c-6.5,0.4-11.6,5.5-12,12c-0.1,2.6-3.1,65.2,34.9,103.2c27.8,27.8,68.8,33.7,89.8,34.8v106c4.2-0.5,8.5-0.7,12.7-0.7 C262.2,261.3,266.5,261.6,270.7,262L270.7,262z\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 137.3,\n    cy: 371,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 250.9,\n    cy: 331,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 364.5,\n    cy: 371,\n    r: 109.4\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 21,\n    y: 400,\n    className: \"st2\",\n    width: 461,\n    height: 89\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPoolLight);\nexport default __webpack_public_path__ + \"static/media/pool-light.5bb68bf8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useMemo, useRef, useState, useContext} from 'react'\r\nimport { useLocation, Route, useRouteMatch } from 'react-router-dom'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\r\nimport { Text } from '@sparkpointio/sparkswap-uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { SvgIcon } from '@material-ui/core';\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport { StyledHr } from 'views/Farms/components/Divider'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport useMedia from 'use-media';\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\nimport { ReactComponent as PoolsDarkLogo } from './components/assets/pool-dark.svg';\r\nimport { ReactComponent as PoolsLightLogo} from './components/assets/pool-light.svg';\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: flex-start;\r\n`\r\n\r\nconst PoolControls = styled(Flex)`\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SearchSortContainer = styled(Flex)`\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const theme = useContext(ThemeContext);\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const isMobile = useMedia({maxWidth: 500})\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const [upcomingPools, notUpcomingPools] = useMemo(() => partition(pools, (pool) => pool.isComingSoon), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n  const showUpcomingPools = location.pathname.includes('upcoming')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  const poolsToShow = () => {\r\n    let chosenPools = []\r\n    if (showUpcomingPools){\r\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools // TODO: @koji @mat-ivan Please apply here how to filter upcoming pools\r\n    }\r\n    else if (showFinishedPools) {\r\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n    } else {\r\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n    }\r\n\r\n    if (searchQuery) {\r\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n      chosenPools = chosenPools.filter((pool) =>\r\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n      )\r\n    }\r\n\r\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  }\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {poolsToShow().map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\r\n  const { path, url, isExact } = useRouteMatch()\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageHeader background={theme.card.background}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" flexDirection={['column', null, 'row']} style={isMobile? { flexDirection: 'column-reverse'} : {minHeight: '20vh', marginLeft: '-12px'}} padding=\"24px\"> \r\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Text color=\"text\" fontSize=\"60px\" bold marginBottom=\"10px\">\r\n              <span style={{borderBottom: `2px solid ${theme.colors.primary}`}}>Pools</span>\r\n            </Text>\r\n            <Text color=\"text\" style={isMobile? { fontSize: \"17px\" } : { fontSize: \"27px\" }}>\r\n                Earn SRK, SFUEL and other tokens by just staking!\r\n            </Text>\r\n          </Flex>\r\n          <Flex style={isMobile? {fontSize: '150px', margin: 'auto', marginTop: '20px', marginBottom: '20px' } : {fontSize: '240px', marginRight: '-137px', position: 'relative'}}>\r\n              <SvgIcon component={theme.isDark? PoolsDarkLogo : PoolsLightLogo} viewBox=\"0  0 384 512\" style={isMobile? {width: '200px'} : {width: '500px'}} fontSize=\"inherit\"/>\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" style={isMobile? { flexDirection: 'column'} : { flexDirection: 'row', marginLeft: '12px' }}>\r\n          <Flex>\r\n          <PoolTabButtons\r\n              stakedOnly={stakedOnly}\r\n              setStakedOnly={setStakedOnly}\r\n              hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n              viewMode={viewMode}\r\n              setViewMode={setViewMode}\r\n          />\r\n         </Flex>\r\n         <Flex alignItems=\"center\" justifyContent=\"space-between\" marginTop=\"16px\">\r\n        <SearchSortContainer>\r\n            {/* <PoolControls>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </PoolControls> */}\r\n            <PoolControls>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" marginRight=\"12px\" marginTop=\"12px\">\r\n                {t('Search')}\r\n              </Text>\r\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n            </PoolControls>\r\n          </SearchSortContainer>\r\n          </Flex>\r\n          </Flex>\r\n        {/* \r\n        <div>\r\n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\r\n            <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n              <Text color=\"text\" fontSize=\"24px\" bold>\r\n                \r\n              </Text>\r\n              <Text color=\"text\" fontSize=\"16px\">\r\n                {t(' Stake Liquidity Pool tokens to earn')}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        */}\r\n\r\n        { !showFinishedPools && !showUpcomingPools && (<div>\r\n          {/* <Text bold fontSize=\"20px\" marginLeft=\"24px\" paddingBottom=\"24px\">\r\n            {' '}\r\n            Stake tokens to earn{' '}\r\n          </Text> */}\r\n          <StyledHr style={{ marginTop: '35px', width: '100%'}}/>\r\n          \r\n          {/* Header title for Active Pools   */}\r\n          \r\n          <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\r\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n                  <Heading scale=\"md\" color=\"text\">\r\n                    {t('Stake tokens to earn')}\r\n                  </Heading>\r\n              </Flex>\r\n          </Flex>\r\n        </div>)}\r\n\r\n        {/* UPCOMING  */}\r\n        {showUpcomingPools && (\r\n          <>\r\n            <StyledHr style={{ marginTop: '35px'}}/>\r\n            \r\n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\r\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n                  <Heading scale=\"md\" color=\"text\">\r\n                    {t('These pools are coming in the near future. Stay tuned.')}\r\n                  </Heading>\r\n              </Flex>\r\n            </Flex>\r\n          </>\r\n        )}\r\n        \r\n\r\n        {/* ENDED  */}\r\n        {showFinishedPools && (\r\n          <>\r\n            <StyledHr style={{ marginTop: '35px'}}/>\r\n\r\n            <Flex justifyContent=\"space-between\" style={{ margin: '20px' }}>\r\n              <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n                  <Heading scale=\"md\" color=\"text\">\r\n                    {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n                  </Heading>\r\n              </Flex>\r\n            </Flex>\r\n          </>\r\n        )}\r\n\r\n        {/* viewMode === ViewMode.CARD ? cardLayout : tableLayout */} \r\n       \r\n        {cardLayout}\r\n      \r\n        <div ref={loadMoreRef} />\r\n        {/* <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        /> */}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import React, { lazy } from 'react'\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS,  } from '@sparkpointio/sparkswap-uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { useFetchProfile, usePollBlockNumber, usePollCoreFarmData } from 'state/hooks'\r\nimport { RedirectToPools } from 'views/Farms/Redirects'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\n// const Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Collectibles = lazy(() => import('./views/Collectibles'))\r\nconst Teams = lazy(() => import('./views/Teams'))\r\nconst Team = lazy(() => import('./views/Teams/Team'))\r\nconst Profile = lazy(() => import('./views/Profile'))\r\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\r\nconst Predictions = lazy(() => import('./views/Predictions'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <HashRouter>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path='/' exact>\r\n              <Pools />\r\n            </Route>\r\n            <Route path='/farms'>\r\n              <Farms />\r\n            </Route>\r\n            <Route path='/pools'>\r\n              <Pools />\r\n            </Route>\r\n            <Route path='/lottery'>\r\n              <Lottery />\r\n            </Route>\r\n            <Route path='/ifo'>\r\n              <Ifos />\r\n            </Route>\r\n            <Route path='/collectibles'>\r\n              <Collectibles />\r\n            </Route>\r\n            <Route exact path='/teams'>\r\n              <Teams />\r\n            </Route>\r\n            <Route path='/teams/:id'>\r\n              <Team />\r\n            </Route>\r\n            <Route path='/profile'>\r\n              <Profile />\r\n            </Route>\r\n            <Route path='/competition'>\r\n              <TradingCompetition />\r\n            </Route>\r\n            <Route path='/prediction'>\r\n              <Predictions />\r\n            </Route>\r\n            {/* Redirect */}\r\n            <Route path='/staking'>\r\n              <Redirect to='/pools' />\r\n            </Route>\r\n            <Route path='/syrup'>\r\n              <Redirect to='/pools' />\r\n            </Route>\r\n            <Route path='/nft'>\r\n              <Redirect to='/collectibles' />\r\n            </Route>\r\n            <Route path='/' component={RedirectToPools} />\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider } from '@sparkpointio/sparkswap-uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeContextProvider>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeContextProvider>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","export const tokenEarnedPerThousandDollarsCompounding = ({\r\n  numberOfDays,\r\n  farmApr,\r\n  tokenPrice,\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  let aprAsDecimal = farmApr / 100\r\n\r\n  if (performanceFee) {\r\n    // Reduce the APR by the % performance fee\r\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\r\n    const aprAfterFee = farmApr - feeRelativeToApr\r\n    aprAsDecimal = aprAfterFee / 100\r\n  }\r\n\r\n  const daysAsDecimalOfYear = numberOfDays / 365\r\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\r\n  const principal = 1000 / tokenPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n\r\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n"],"sourceRoot":""}