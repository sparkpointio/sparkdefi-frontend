{"version":3,"sources":["components/Select/Select.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","views/Lottery/components/Hero.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","hooks/useTickets.ts","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/ClaimPrizesCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["DropDownHeader","styled","div","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","width","props","isOpen","css","DropDownList","ul","ListItem","li","Select","options","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","useEffect","current","offsetWidth","offsetHeight","ref","onClick","label","color","map","option","index","selectedIndex","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","a","multi","getMulticallContract","itf","Interface","res","length","i","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","decodeFunctionResult","getTickets","lotteryContract","ticketsContract","account","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","address","ticketAbi","tokenIds","id","toString","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","BigNumber","eq","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","send","from","on","tx","transactionHash","console","error","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","BIG_ZERO","getLotteryIssueIndex","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","Title","Heading","attrs","as","scale","ComeBack","Text","StyledHero","StyledContainer","Container","LeftWrapper","lg","RightWrapper","Hero","t","useTranslation","bold","mt","external","href","src","alt","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","useContext","PastLotteryDataContext","roundData","fetchRecentLotteryData","Wrapper","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","inputMode","min","isWarning","max","currentTarget","disabled","PastRoundCardError","message","IconWrapper","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","fontSize","defaultProps","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWeb3React","useLotteryTicket","useLottery","useLastUpdated","lastUpdated","setLastUpdated","fetchBalance","useCallback","useTickets","setTickets","useRefresh","fastRefresh","RewardP","TicketsList","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","setWinningNumbers","useWinningNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","ExternalLinkWrap","LinkExternal","TicketCard","contractLink","ticketsLength","useModal","onPresentMyTickets","UnlockButton","CardValue","decimals","lineHeight","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","style","CardBusdValue","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","amount","multipliedBy","toNumber","toLocaleString","gt","formatLotteryDate","lotteryDate","date","Date","dateString","toDateString","hours","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","CardHeading","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","mb","num","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","StyledLoading","Loading","StyledCardBody","CardBody","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","useMemo","tooltips","mode","intersect","cornerRadius","backgroundColor","xPadding","yPadding","caretSize","titleFontFamily","titleFontSize","titleMarginBottom","bodyFontFamily","bodyFontSize","bodySpacing","beforeBody","callbacks","tooltipItem","yLabel","labelColor","chart","config","datasetIndex","cardBorder","legend","scales","yAxes","position","xAxes","fallback","justifyContent","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","WinningsWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","handleClaim","winnings","getBalanceNumber","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledHeading","UnlockWalletCard","ClaimPrizesCard","handleSuccess","Cards","BaseLayout","SecondCardColumnWrapper","BunnyImageWrapper","PastDrawsPage","Lottery","setHistoryData","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/13.7983534d.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const multi = getMulticallContract()\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', scale: 'xl' })`\n  color: #ffffff;\n  margin-bottom: 24px;\n  text-shadow: 2px 2px 2px #00000040;\n`\n\nconst ComeBack = styled(Text)`\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\n  font-size: 24px;\n  font-weight: 600;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(#7645d9, #452a7a);\n  max-height: max-content;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: 256px;\n  }\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n\n  & img {\n    width: 80%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n    & img {\n      margin-top: -25px;\n    }\n  }\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{t('The Lottery Is Changing!')}</Title>\n          <ComeBack>{t('Come back soon!')}</ComeBack>\n          <LinkExternal\n            bold\n            mt={20}\n            external\n            href=\"https://pancakeswap.medium.com/pancakeswap-april-may-recap-a4e7cf990f72\"\n          >\n            {t('Learn more')}\n          </LinkExternal>\n        </LeftWrapper>\n        <RightWrapper>\n          <img src=\"/images/tombola.png\" alt=\"lottery bunny\" />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{t('Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {t('Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading scale=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const { t } = useTranslation()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={t('My Tickets (Total: %TICKETS%)', { TICKETS: myTicketNumbers.length })} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {t('Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const { t } = useTranslation()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n        {t('View your tickets')}\n      </Button>\n      <ExternalLinkWrap href={contractLink}>{t('View on BscScan')}</ExternalLinkWrap>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const { t } = useTranslation()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {t('Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {t('Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && cakeBusdPrice.gt(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{t(pastDraw ? 'Burned' : 'To burn')}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const { t } = useTranslation()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading scale=\"md\" mb=\"24px\">\n              {t('Round #%num%', { num: lotteryNumber })}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {t('Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading valueToDisplay={`${poolSize.toLocaleString()} CAKE`} Icon={PancakeRoundIcon}>\n              {t('Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const { t } = useTranslation()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: t('The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: t('Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\nconst Bar = lazy(() => import('./BarChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\ninterface HistoryChartProps {\n  showLast: 'max' | number\n}\n\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    const rawData = historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = () => {\n    return {\n      labels: getDataArray('lotteryNumber'),\n      datasets: [\n        {\n          label: t('Pool Size'),\n          data: getDataArray('poolSize'),\n          yAxisID: 'y-axis-pool',\n          ...lineStyles({ color: '#7A6EAA' }),\n        },\n        {\n          label: t('Burned'),\n          data: getDataArray('burned'),\n          yAxisID: 'y-axis-burned',\n          ...lineStyles({ color: '#1FC7D4' }),\n        },\n      ],\n    }\n  }\n\n  const axesStyles = ({ color, lineHeight, prefix = '' }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 12,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return `${prefix}${value.toLocaleString()}`\n        },\n      },\n    }\n  }\n\n  const options = useMemo(() => {\n    return {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        cornerRadius: 16,\n        backgroundColor: '#27262c',\n        xPadding: 16,\n        yPadding: 16,\n        caretSize: 6,\n        titleFontFamily: 'Kanit, sans-serif',\n        titleFontSize: 16,\n        titleMarginBottom: 8,\n        bodyFontFamily: 'Kanit, sans-serif',\n        bodyFontSize: 16,\n        bodySpacing: 8,\n        beforeBody: '##',\n        callbacks: {\n          title: (tooltipItem) => {\n            return `${t('Round #%num%', { num: tooltipItem[0].label })}`\n          },\n          label: (tooltipItem) => {\n            return ` ${tooltipItem.yLabel.toLocaleString()} CAKE`\n          },\n          labelColor: (tooltipItem, chart) => {\n            return {\n              borderColor: chart.config.data.datasets[tooltipItem.datasetIndex].cardBorder,\n              backgroundColor: chart.config.data.datasets[tooltipItem.datasetIndex].borderColor,\n            }\n          },\n        },\n      },\n      legend: { display: false },\n      scales: {\n        yAxes: [\n          {\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-pool',\n            ...axesStyles({ color: '#7A6EAA', lineHeight: 1.6 }),\n          },\n          {\n            type: 'linear',\n            position: 'right',\n            id: 'y-axis-burned',\n            ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n          },\n        ],\n        xAxes: [\n          {\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1, prefix: '#' }),\n          },\n        ],\n      },\n    }\n  }, [isDark, t])\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>{t('Error fetching data')}</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense\n          fallback={\n            <Flex justifyContent=\"center\">\n              <Loading />\n            </Flex>\n          }\n        >\n          {showLast === 50 || showLast === 100 ? (\n            <Bar data={chartData()} options={options} />\n          ) : (\n            <Line data={chartData()} options={options} type=\"line\" />\n          )}\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 24px 0 24px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => (isPoolSize ? '#7A6EAA' : theme.colors.primary)};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{t('Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{t('Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React, { useState } from 'react'\nimport { Heading, Card, CardBody, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-wrap: nowrap;\n    flex-direction: row;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n  }\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const { t } = useTranslation()\n  const [showLast, setShowLast] = useState<'max' | number>(50)\n  const handleShowLastChange = (option: OptionProps): void => {\n    setShowLast(option.value)\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading scale=\"md\">{t('History')}</Heading>\n        <Wrapper>\n          <Legend />\n          <LabelWrapper>\n            <Text textTransform=\"uppercase\">{t('Show Last')}</Text>\n            <Select\n              options={[\n                {\n                  label: '50',\n                  value: 50,\n                },\n                {\n                  label: '100',\n                  value: 100,\n                },\n                {\n                  label: '200',\n                  value: 200,\n                },\n                {\n                  label: t('Max'),\n                  value: 'max',\n                },\n              ]}\n              onChange={handleShowLastChange}\n            />\n          </LabelWrapper>\n        </Wrapper>\n        <HistoryChart showLast={showLast} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {t('You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {t('Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {t('View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const { t } = useTranslation()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{t('Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {t('View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\ninterface YourPrizesCardProps {\n  isAWin: boolean\n  onSuccess: () => void\n}\n\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  max-height: 196px;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <div>\n          <StyledHeading scale=\"md\">{t('Unlock wallet to access lottery')}</StyledHeading>\n          <UnlockButton />\n        </div>\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React, { useCallback } from 'react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport YourPrizesCard from './YourPrizesCard'\nimport UnlockWalletCard from './UnlockWalletCard'\n\nconst ClaimPrizesCard = () => {\n  const { account } = useWeb3React()\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  const handleSuccess = useCallback(() => {\n    setLastUpdated()\n  }, [setLastUpdated])\n\n  return (\n    <Box mb=\"32px\">\n      {!account ? <UnlockWalletCard /> : <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />}\n    </Box>\n  )\n}\n\nexport default ClaimPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport ClaimPrizesCard from './components/ClaimPrizesCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <>\n      <ClaimPrizesCard />\n      <Cards>\n        <PastLotteryRoundViewer />\n        <SecondCardColumnWrapper>\n          <PastDrawsHistoryCard />\n          <BunnyImageWrapper>\n            <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n          </BunnyImageWrapper>\n        </SecondCardColumnWrapper>\n      </Cards>\n    </>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          <PastDrawsPage />\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}