{"version":3,"sources":["components/Select/Select.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/CardHeading.tsx","../node_modules/@material-ui/system/esm/styleFunctionSx.js","../node_modules/@material-ui/system/esm/compose.js","../node_modules/@material-ui/system/esm/style.js","../node_modules/@material-ui/system/esm/borders.js","../node_modules/@material-ui/system/esm/display.js","../node_modules/@material-ui/system/esm/flexbox.js","../node_modules/@material-ui/system/esm/grid.js","../node_modules/@material-ui/system/esm/positions.js","../node_modules/@material-ui/system/esm/palette.js","../node_modules/@material-ui/system/esm/shadows.js","../node_modules/@material-ui/system/esm/sizing.js","../node_modules/@material-ui/system/esm/typography.js","../node_modules/@material-ui/styles/esm/styled/styled.js","../node_modules/@material-ui/core/esm/styles/styled.js","../node_modules/@material-ui/core/esm/Box/Box.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","components/Loading.tsx","views/Farms/components/types.ts","views/Farms/components/WithdrawModal.tsx","views/Farms/components/Styled.tsx","views/Farms/components/Modals/Styled.tsx","views/Farms/components/Modals/Stake.tsx","views/Farms/components/Modals/ClaimModal.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/assets/farm-dark.svg","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/assets/farm-light.svg","views/Farms/Farms.tsx"],"names":["DropDownHeader","styled","div","theme","shadows","inset","colors","inputSecondary","input","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","width","props","isOpen","css","DropDownList","ul","ListItem","li","Select","options","onChange","containerRef","useRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","useEffect","current","offsetWidth","offsetHeight","ref","onClick","label","color","map","option","index","selectedIndex","getLiquidityUrlPathParts","mainTokenAddress","pairTokenAddress","wBNBAddressString","getWbnbAddress","mainTokenAddressString","process","pairTokenAddressString","secondPart","Wrapper","Flex","CardHeading","Tag","lpLabel","rewardToken","multiplier","isCommunityFarm","farmImage","tokenSymbol","farmSymbol","token","pairToken","justifyContent","alignItems","mb","flexDirection","style","textAlign","split","TokenPairImage","variant","primaryToken","secondaryToken","omit","fields","output","Object","keys","forEach","prop","indexOf","styleFunctionSx","styleFunction","newStyleFunction","_extends","merge","filterProps","sx","propTypes","concat","_toConsumableArray","compose","_len","arguments","length","styles","Array","_key","fn","reduce","acc","getPath","obj","path","item","_options$cssProperty","cssProperty","themeKey","transform","propValue","themeMapping","handleBreakpoints","propValueFinal","value","isArray","_defineProperty","getBorder","borders","display","flexbox","grid","palette","boxShadow","maxWidth","minWidth","maxHeight","minHeight","sizing","typography","Component","componentCreator","undefined","name","stylesOptions","_objectWithoutProperties","classNamePrefix","stylesOrCreator","root","useStyles","makeStyles","displayName","StyledComponent","React","forwardRef","children","classNameProp","className","clone","ComponentProp","component","other","classes","clsx","spread","cloneElement","FinalComponent","createElement","hoistNonReactStatics","styledWithoutDefault","defaultTheme","positions","spacing","Box","SIZE","CircularProgress","_props$color","_props$disableShrink","disableShrink","_props$size","size","_props$thickness","thickness","_props$value","_props$variant","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","capitalize","determinate","indeterminate","static","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","transition","transitions","create","animation","colorPrimary","primary","main","colorSecondary","secondary","stroke","transformOrigin","flip","CircularIndeterminate","ViewMode","WithdrawModal","farm","staked","earnings","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","t","useTranslation","fullBalance","useMemo","getFullDisplayBalance","BigNumber","useToast","toastError","toastSuccess","useCallback","e","currentTarget","validity","valid","replace","title","marginTop","fontSize","bold","quoteToken","symbol","lpSymbol","margin","padding","disabled","fullWidth","a","console","error","Container","DetailsCont","ActionDiv","ModalFooter","StyledFlex","CancelButton","Button","DepositButton","Stake","pid","addLiquidityUrl","inputTitle","lpStakingContract","valNumber","dispatch","useAppDispatch","account","useWeb3React","fullBalanceNumber","handleChange","fetchFarmUserDataAsync","pids","handleSelectMax","ModalInput","onSelectMax","isFinite","eq","gt","ClaimModal","DepositModal","addTokenUrl","handleUnstake","maxStake","requestedApproval","setRequestedApproval","setActiveSelect","userData","allowance","tokenBalance","stakedBalance","userRate","calculateUserRewardRate","lpAddresses","lpAddress","getAddress","lpContract","useERC20","RewardTokenBalance","useTokenBalance","address","formatTokenBalance","getBalanceAmount","balance","toFormat","formatLPTokenBalance","formatStakedTokenBalance","formatTokenEarnings","isGreaterThanOrEqualTo","isApproved","setIsApproved","lpStakingAddress","stakingAddresses","useLPStakingContract","onApprove","useApprove","handleApprove","useModal","onPresentStake","onPresentWithdraw","paddingBottom","as","target","href","onMouseEnter","onMouseLeave","StakeAction","userDataReady","onStake","useStake","onUnstake","useExit","location","useLocation","handleStake","useLpTokenPrice","amount","contract","stakedBalanceBigNumber","lt","toLocaleString","ROUND_DOWN","onPresentDeposit","formatStakedBalance","buttonTxt","hasEnded","isGreaterThan","parseFloat","some","pathname","includes","renderStakingButtons","Action","CardActions","tokenBalanceAsString","stakedBalanceAsString","UnlockButton","mt","ActionContainer","xl","ActionTitles","ActionContent","Earned","text","HarvestAction","stakingContract","tokenRewardSymbol","earningsBigNumber","cakePrice","usePriceCakeBusd","BIG_ZERO","earningsBusd","displayBalance","isZero","multipliedBy","toNumber","onReward","useClaim","textTransform","pr","Balance","decimals","unit","prefix","ml","StyledLinkExternal","LinkExternal","DetailsSection","stakingAddress","lpInfoAddress","AccentGradient","keyframes","StyledCardAccent","primaryBright","FCard","card","background","isPromotedFarm","radii","FarmCard","cardBorder","expanded","removed","toLocaleLowerCase","formatTotalDeposits","totalDeposits","formatTotalRewardRate","totalRewardRate","toUpperCase","earnLabel","liquidityUrlPathParts","apr","maximumFractionDigits","liquidityUrl","BASE_ADD_LIQUIDITY_URL","AddTokenUrl","BASE_EXCHANGE_URL","useContext","ThemeContext","useFarmPrice","Number","lpTotalSupply","LPPrice","rewardPrice","getFarmV2Apr","rewardRate","isCommunity","border","backgroundColor","remainingDays","CardActionsContainer","getBscScanAddressUrl","infoURL","BASE_INFO_URL","ApyButton","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","onPresentApyModal","event","stopPropagation","scale","textSubtle","AprWrapper","Apr","tokenAddress","quoteTokenAddress","originalValue","hideButton","TokenWrapper","Farm","useFarmUser","rawStakedBalance","getBalanceNumber","Amount","span","earned","textDisabled","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","LiquidityWrapper","Liquidity","liquidity","displayLiquidity","IconButtonWrapper","Staked","useUnstake","lpPrice","times","mr","marginBottom","expandAnimation","collapseAnimation","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","dual","bsc","info","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","sortable","DesktopColumnSchema","_style","_g","_g2","_g3","_g4","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isXs","tableSchema","columnNames","column","key","columnIndex","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","Link","to","show","assign","i","source","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFarmDark","_ref","svgRef","titleId","xmlns","xmlnsXlink","x","y","enableBackground","xmlSpace","type","d","ForwardRef","SvgFarmLight","ControlContainer","ToggleWrapper","Text","LabelWrapper","FilterContainer","ViewControls","Farms","Image","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","CARD","localStorageKey","viewMode","sortOption","setSortOption","isArchived","isInactive","useMedia","usePollFarmsData","stakedOnly","setStakedOnly","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","marginLeft","borderBottom","marginRight","SvgIcon","isDark","FarmsDarkLogo","FarmsLightLogo","Page","checked","SearchInput","placeholder","TABLE","sort","b","exact","renderContent"],"mappings":"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","file":"static/js/12.752335e1.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ mainTokenAddress, pairTokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const mainTokenAddressString: string = mainTokenAddress ? mainTokenAddress[chainId] : null\n  const pairTokenAddressString: string = pairTokenAddress ? pairTokenAddress[chainId] : null\n  const firstPart =\n    !mainTokenAddressString || mainTokenAddressString === wBNBAddressString ? 'ETH' : mainTokenAddressString\n  const secondPart = !pairTokenAddressString || pairTokenAddressString === wBNBAddressString ? 'ETH' : pairTokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@sparkpointio/sparkswap-uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  farmSymbol?: string\n  tokenSymbol?: string\n  rewardToken?:string\n  token: Token\n  quoteToken: Token\n  pairToken?: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n  farmSymbol,\n  rewardToken,\n  token,\n  pairToken\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Flex flexDirection=\"row\" alignItems=\"\">\n        <Heading  mb=\"4px\" style={{textAlign: 'left'}}>Stake <br/> {lpLabel.split(' ')[0]} <br /> Earn {rewardToken}</Heading>\n      </Flex>\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={pairToken} width={64} height={64} />\n      {/* <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} /> */}\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nvar warnedOnce = false;\n\nfunction styleFunctionSx(styleFunction) {\n  var newStyleFunction = function newStyleFunction(props) {\n    var output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    if (props.sx) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.sx))), omit(props.sx, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: chainPropTypes(PropTypes.object, function (props) {\n      if (!warnedOnce && props.css !== undefined) {\n        warnedOnce = true;\n        return new Error('Material-UI: The `css` prop is deprecated, please use the `sx` prop instead.');\n      }\n\n      return null;\n    }),\n    sx: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', 'sx'].concat(_toConsumableArray(styleFunction.filterProps));\n  return newStyleFunction;\n}\n/**\r\n *\r\n * @deprecated\r\n * The css style function is deprecated. Use the `styleFunctionSx` instead.\r\n */\n\n\nexport function css(styleFunction) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Material-UI: The `css` function is deprecated. Use the `styleFunctionSx` instead.');\n  }\n\n  return styleFunctionSx(styleFunction);\n}\nexport default styleFunctionSx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\n\nfunction getPath(obj, path) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  return path.split('.').reduce(function (acc, item) {\n    return acc && acc[item] ? acc[item] : null;\n  }, obj);\n}\n\nfunction style(options) {\n  var prop = options.prop,\n      _options$cssProperty = options.cssProperty,\n      cssProperty = _options$cssProperty === void 0 ? options.prop : _options$cssProperty,\n      themeKey = options.themeKey,\n      transform = options.transform;\n\n  var fn = function fn(props) {\n    if (props[prop] == null) {\n      return null;\n    }\n\n    var propValue = props[prop];\n    var theme = props.theme;\n    var themeMapping = getPath(theme, themeKey) || {};\n\n    var styleFromPropValue = function styleFromPropValue(propValueFinal) {\n      var value;\n\n      if (typeof themeMapping === 'function') {\n        value = themeMapping(propValueFinal);\n      } else if (Array.isArray(themeMapping)) {\n        value = themeMapping[propValueFinal] || propValueFinal;\n      } else {\n        value = getPath(themeMapping, propValueFinal) || propValueFinal;\n\n        if (transform) {\n          value = transform(value);\n        }\n      }\n\n      if (cssProperty === false) {\n        return value;\n      }\n\n      return _defineProperty({}, cssProperty, value);\n    };\n\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? _defineProperty({}, prop, responsivePropType) : {};\n  fn.filterProps = [prop];\n  return fn;\n}\n\nexport default style;","import style from './style';\nimport compose from './compose';\n\nfunction getBorder(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n\n  return \"\".concat(value, \"px solid\");\n}\n\nexport var border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: getBorder\n});\nexport var borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport var borderRadius = style({\n  prop: 'borderRadius',\n  themeKey: 'shape'\n});\nvar borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nexport var displayPrint = style({\n  prop: 'displayPrint',\n  cssProperty: false,\n  transform: function transform(value) {\n    return {\n      '@media print': {\n        display: value\n      }\n    };\n  }\n});\nexport var displayRaw = style({\n  prop: 'display'\n});\nexport var overflow = style({\n  prop: 'overflow'\n});\nexport var textOverflow = style({\n  prop: 'textOverflow'\n});\nexport var visibility = style({\n  prop: 'visibility'\n});\nexport var whiteSpace = style({\n  prop: 'whiteSpace'\n});\nexport default compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);","import style from './style';\nimport compose from './compose';\nexport var flexBasis = style({\n  prop: 'flexBasis'\n});\nexport var flexDirection = style({\n  prop: 'flexDirection'\n});\nexport var flexWrap = style({\n  prop: 'flexWrap'\n});\nexport var justifyContent = style({\n  prop: 'justifyContent'\n});\nexport var alignItems = style({\n  prop: 'alignItems'\n});\nexport var alignContent = style({\n  prop: 'alignContent'\n});\nexport var order = style({\n  prop: 'order'\n});\nexport var flex = style({\n  prop: 'flex'\n});\nexport var flexGrow = style({\n  prop: 'flexGrow'\n});\nexport var flexShrink = style({\n  prop: 'flexShrink'\n});\nexport var alignSelf = style({\n  prop: 'alignSelf'\n});\nexport var justifyItems = style({\n  prop: 'justifyItems'\n});\nexport var justifySelf = style({\n  prop: 'justifySelf'\n});\nvar flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);\nexport default flexbox;","import style from './style';\nimport compose from './compose';\nexport var gridGap = style({\n  prop: 'gridGap'\n});\nexport var gridColumnGap = style({\n  prop: 'gridColumnGap'\n});\nexport var gridRowGap = style({\n  prop: 'gridRowGap'\n});\nexport var gridColumn = style({\n  prop: 'gridColumn'\n});\nexport var gridRow = style({\n  prop: 'gridRow'\n});\nexport var gridAutoFlow = style({\n  prop: 'gridAutoFlow'\n});\nexport var gridAutoColumns = style({\n  prop: 'gridAutoColumns'\n});\nexport var gridAutoRows = style({\n  prop: 'gridAutoRows'\n});\nexport var gridTemplateColumns = style({\n  prop: 'gridTemplateColumns'\n});\nexport var gridTemplateRows = style({\n  prop: 'gridTemplateRows'\n});\nexport var gridTemplateAreas = style({\n  prop: 'gridTemplateAreas'\n});\nexport var gridArea = style({\n  prop: 'gridArea'\n});\nvar grid = compose(gridGap, gridColumnGap, gridRowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\nexport default grid;","import style from './style';\nimport compose from './compose';\nexport var position = style({\n  prop: 'position'\n});\nexport var zIndex = style({\n  prop: 'zIndex',\n  themeKey: 'zIndex'\n});\nexport var top = style({\n  prop: 'top'\n});\nexport var right = style({\n  prop: 'right'\n});\nexport var bottom = style({\n  prop: 'bottom'\n});\nexport var left = style({\n  prop: 'left'\n});\nexport default compose(position, zIndex, top, right, bottom, left);","import style from './style';\nimport compose from './compose';\nexport var color = style({\n  prop: 'color',\n  themeKey: 'palette'\n});\nexport var bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette'\n});\nvar palette = compose(color, bgcolor);\nexport default palette;","import style from './style';\nvar boxShadow = style({\n  prop: 'boxShadow',\n  themeKey: 'shadows'\n});\nexport default boxShadow;","import style from './style';\nimport compose from './compose';\n\nfunction transform(value) {\n  return value <= 1 ? \"\".concat(value * 100, \"%\") : value;\n}\n\nexport var width = style({\n  prop: 'width',\n  transform: transform\n});\nexport var maxWidth = style({\n  prop: 'maxWidth',\n  transform: transform\n});\nexport var minWidth = style({\n  prop: 'minWidth',\n  transform: transform\n});\nexport var height = style({\n  prop: 'height',\n  transform: transform\n});\nexport var maxHeight = style({\n  prop: 'maxHeight',\n  transform: transform\n});\nexport var minHeight = style({\n  prop: 'minHeight',\n  transform: transform\n});\nexport var sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: transform\n});\nexport var sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: transform\n});\nexport var boxSizing = style({\n  prop: 'boxSizing'\n});\nvar sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","import style from './style';\nimport compose from './compose';\nexport var fontFamily = style({\n  prop: 'fontFamily',\n  themeKey: 'typography'\n});\nexport var fontSize = style({\n  prop: 'fontSize',\n  themeKey: 'typography'\n});\nexport var fontStyle = style({\n  prop: 'fontStyle',\n  themeKey: 'typography'\n});\nexport var fontWeight = style({\n  prop: 'fontWeight',\n  themeKey: 'typography'\n});\nexport var letterSpacing = style({\n  prop: 'letterSpacing'\n});\nexport var lineHeight = style({\n  prop: 'lineHeight'\n});\nexport var textAlign = style({\n  prop: 'textAlign'\n});\nvar typography = compose(fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign);\nexport default typography;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\n\nfunction omit(input, fields) {\n  var output = {};\n  Object.keys(input).forEach(function (prop) {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  var componentCreator = function componentCreator(style) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var name = options.name,\n        stylesOptions = _objectWithoutProperties(options, [\"name\"]);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    var classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        var displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    var stylesOrCreator = typeof style === 'function' ? function (theme) {\n      return {\n        root: function root(props) {\n          return style(_extends({\n            theme: theme\n          }, props));\n        }\n      };\n    } : {\n      root: style\n    };\n    var useStyles = makeStyles(stylesOrCreator, _extends({\n      Component: Component,\n      name: name || Component.displayName,\n      classNamePrefix: classNamePrefix\n    }, stylesOptions));\n    var filterProps;\n    var propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    var StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      var children = props.children,\n          classNameProp = props.className,\n          clone = props.clone,\n          ComponentProp = props.component,\n          other = _objectWithoutProperties(props, [\"children\", \"className\", \"clone\", \"component\"]);\n\n      var classes = useStyles(props);\n      var className = clsx(classes.root, classNameProp);\n      var spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className: className\n        }, spread));\n      }\n\n      var FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/React.createElement(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread), children);\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, function (props) {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = \"Styled(\".concat(classNamePrefix, \")\");\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { styled as styledWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nvar styled = function styled(Component) {\n  var componentCreator = styledWithoutDefault(Component);\n  return function (style, options) {\n    return componentCreator(style, _extends({\n      defaultTheme: defaultTheme\n    }, options));\n  };\n};\n\nexport default styled;","import { borders, compose, display, flexbox, grid, palette, positions, shadows, sizing, spacing, typography, styleFunctionSx } from '@material-ui/system';\nimport styled from '../styles/styled';\nexport var styleFunction = styleFunctionSx(compose(borders, display, flexbox, grid, positions, palette, shadows, sizing, spacing, typography));\n/**\n * @ignore - do not document.\n */\n\nvar Box = styled('div')(styleFunction, {\n  name: 'MuiBox'\n});\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import * as React from 'react'\nimport { Box, CircularProgress } from '@material-ui/core'\n\nexport default function CircularIndeterminate() {\n  return (\n    <Box sx={{ display: 'flex', color: '#FFF' }}>\n      <CircularProgress color='inherit' />\n    </Box>\n  );\n}\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Flex, Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from '../../../hooks/useToast'\n\ninterface WithdrawModalProps {\n  farm?: any,\n  staked?: any,\n  earnings?: any,\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = (\n  {\n    farm,\n    staked,\n    earnings,\n    onConfirm,\n    onDismiss,\n    max, tokenName = '',\n  }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title='' onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop='-10px' style={{ width: '450px' }} alignItems='center' flexDirection='column'>\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize='28px' bold>{earnings} {farm.quoteToken.symbol}</Text>\n        <Text>and withdrawing the staked amount of</Text>\n        <Text fontSize='28px' bold>{staked} {farm.lpSymbol}</Text>\n      </Flex>\n      <Flex justifyContent='center' margin='24px' padding='0px 35px'>\n        <Button\n          disabled={pendingTx}\n          fullWidth onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onConfirm(val)\n            toastSuccess(t('Unstaked!'), t('Your LPs and earnings have been transferred to your wallet'))\n            onDismiss()\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n        }}>Confirm</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\n\nconst Container = styled.div`\n    min-width: 720px;\n    display: flex;\n    justify-content: space-between;\n    height: auto;\n`\n\nconst DetailsCont = styled.div`\n    width: 30%;\n    height: auto;\n    overflow: visible;\n`\n\nconst ActionDiv = styled.div`\n    margin: 15px 0px;\n    padding: 10px;\n`\nconst ModalFooter = styled.div`\n    min-width: 720px;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport { DetailsCont, ActionDiv, ModalFooter }\nexport default Container;\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Button } from '@sparkpointio/sparkswap-uikit' \n\nconst Container = styled.div`\n    margin-top: -30px;\n    display: flex;\n    flex-direction: column;\n    min-width: 500px;\n`\nconst StyledFlex = styled(Flex)`\n    padding: 10px 0px;\n`\nconst CancelButton = styled(Button)`\n    flex: 1;\n    margin-right: 10px;\n`\nconst DepositButton = styled(Button)`\n    flex: 1;\n    margin-left: 10px;\n`\n\nexport {StyledFlex, CancelButton, DepositButton}\nexport default Container;\n\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { Modal, Text } from '@sparkpointio/sparkswap-uikit'\nimport ModalInput from 'components/ModalInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport Container, { CancelButton, DepositButton, StyledFlex } from './Styled'\nimport useToast from '../../../../hooks/useToast'\nimport { useTranslation } from '../../../../contexts/Localization'\nimport { useAppDispatch } from '../../../../state'\nimport { fetchFarmUserDataAsync } from '../../../../state/farms'\n\ninterface StakeModalInterface {\n  pid: number,\n  onDismiss?: () => void\n  max: BigNumber\n  symbol: string\n  placeholder?: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  onConfirm: (amount: string, contract: Contract) => void\n  lpStakingContract?: Contract\n}\n\nconst Stake: React.FC<StakeModalInterface> = ({ pid, onDismiss, max, symbol, addLiquidityUrl, inputTitle, onConfirm, lpStakingContract}) => {\n  const [val, setVal] = useState('0')\n  const [pendingTx, setPendingTx] = useState(false)\n  const valNumber = new BigNumber(val)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const { toastError, toastSuccess } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const onClick = async () => {\n    try {\n      setPendingTx(true)\n      await onConfirm(val, lpStakingContract)\n      setPendingTx(false)\n      toastSuccess(\n        `${t('Staked')}!`,\n        t('Your %symbol% tokens have been staked to the pool!', { 'symbol': symbol }),\n      )\n      onDismiss()\n    } catch (e) {\n      toastError(\n        t('Error'),\n        t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n      )\n      console.error(e)\n    } finally {\n      setPendingTx(false)\n    }\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n  return (\n    <Modal title=\"\" onDismiss={!pendingTx && onDismiss}>\n      <Container>\n        <Text>Stake amount: </Text>\n        <ModalInput\n          value={val}\n          onSelectMax={handleSelectMax}\n          onChange={handleChange}\n          max={fullBalance}\n          symbol={symbol}\n          addLiquidityUrl={addLiquidityUrl}\n          //  inputTitle={t('Stake')}\n        />\n      </Container>\n      <StyledFlex justifyContent=\"space-between\">\n        <Text>{ symbol } balance: </Text>\n        <Text>{ fullBalance }</Text>\n      </StyledFlex>\n      <StyledFlex justifyContent=\"space-between\">\n        <CancelButton\n          onClick={onDismiss}\n        >\n         Close\n        </CancelButton>\n        <DepositButton\n          onClick={onClick}\n          // disable Deposit button if not yet approved\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n        >\n        Deposit\n        </DepositButton>\n      </StyledFlex>\n    </Modal>\n  )\n}\n\nexport default Stake\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal, Text, Flex } from '@sparkpointio/sparkswap-uikit'\n\ninterface ClaimModalProps {\n  onDismiss?: () => void\n}\n\nconst ClaimModal: React.FC<ClaimModalProps> = ({ onDismiss}) => {\n  \n  return (\n    <Modal title=\"\" onDismiss={onDismiss}>\n      {/* <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions> */}\n      <Flex marginTop=\"-10px\" style={{width: '450px'}} alignItems=\"center\" flexDirection=\"column\">\n        <Text>You will be claiming the reward amount of </Text>\n        <Text fontSize=\"28px\" bold>78.912 SRK Tokens</Text>\n      </Flex>\n      <Flex justifyContent=\"center\" margin=\"24px\" padding=\"0px 35px\">\n        <Button fullWidth>Confirm</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport { Contract } from 'web3-eth-contract'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Modal, Skeleton, Text, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WithdrawModal from './WithdrawModal'\nimport Container, { ActionDiv, DetailsCont, ModalFooter } from './Styled'\nimport { ModalHr } from './Divider'\nimport StakeModal from './Modals/Stake'\nimport ClaimModal from './Modals/ClaimModal'\nimport { calculateUserRewardRate } from '../../../utils/farmHelpers'\n\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, contract: Contract) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n  handleUnstake?: (amount: string) => void\n  maxStake?: BigNumber\n}\n\nconst DepositModal: React.FC<DepositModalProps> = (\n  {\n    max,\n    onConfirm,\n    onDismiss,\n    tokenName = '',\n    addLiquidityUrl,\n    addTokenUrl,\n    handleUnstake,\n    farm,\n    maxStake,\n  }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const [activeSelect, setActiveSelect] = useState(false)\n  const {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  } = farm.userData || {}\n  const userRate = calculateUserRewardRate(farm)\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { pid, lpAddresses } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const lpContract = useERC20(lpAddress)\n  const RewardTokenBalance = useTokenBalance(getAddress(farm.quoteToken.address))\n  const formatTokenBalance = getBalanceAmount(RewardTokenBalance.balance).toFormat(6)\n  const formatLPTokenBalance = getBalanceAmount(new BigNumber(tokenBalance)).toFormat(6)\n  const formatStakedTokenBalance = getBalanceAmount(new BigNumber(stakedBalance)).toFormat(6)\n  const formatTokenEarnings = getBalanceAmount(new BigNumber(earnings)).toFormat(6)\n\n  const [isApproved, setIsApproved] = useState(account && allowance && (new BigNumber(allowance)).isGreaterThanOrEqualTo(tokenBalance))\n  const lpStakingAddress = getAddress(farm.stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setIsApproved(true)\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n  const [onPresentStake] = useModal(\n    <StakeModal\n      pid={pid}\n      onConfirm={onConfirm} lpStakingContract={lpStakingContract} max={max} symbol={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      inputTitle={t('Stake')} />,\n  )\n\n  const [onPresentClaim] = useModal(<ClaimModal />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedTokenBalance}\n      earnings={formatTokenEarnings}\n      max={maxStake} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  return (\n    <Modal title={t('Account Info')} onDismiss={onDismiss}>\n      <Text color='textSubtle' fontSize='14px' style={{ paddingBottom: '30px', marginTop: '-40px' }}>\n        Staking, balances & earnings\n      </Text>\n      <Container>\n        <DetailsCont>\n          <Text bold fontSize='24px'>\n            {formatTokenBalance ?? <Skeleton width={60} display='inline-block' />}\n          </Text>\n          <Text color='textSubtle' fontSize='14px'>\n            {farm.quoteToken.symbol}\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as='a' target='_blank' href={addTokenUrl}>\n              Get {farm.quoteToken.symbol}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont>\n          <Text bold fontSize='24px'>\n            {formatLPTokenBalance ?? <Skeleton width={60} display='inline-block' />}\n          </Text>\n          <Text color='textSubtle' fontSize='14px'>\n            {tokenName} Tokens\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            <Button fullWidth as='a' target='_blank' href={addLiquidityUrl}>\n              Get {tokenName}\n            </Button>\n          </ActionDiv>\n        </DetailsCont>\n        <DetailsCont>\n          <Text bold fontSize='24px'>\n            {formatStakedTokenBalance ?? <Skeleton width={60} display='inline-block' />}\n          </Text>\n          <Text color='textSubtle' fontSize='14px'>\n            Your {tokenName} Deposits\n          </Text>\n          <ActionDiv style={{ padding: '0px' }}>\n            {isApproved ?\n              <Button fullWidth onClick={onPresentStake}>\n                Stake {tokenName}\n              </Button>\n              :\n              <Button fullWidth onClick={handleApprove} disabled={requestedApproval}>\n                Enable Farm\n              </Button>\n            }\n\n          </ActionDiv>\n        </DetailsCont>\n      </Container>\n      <ModalHr />\n      <ModalFooter>\n        <DetailsCont>\n          <Text bold fontSize='24px'>\n            {userRate}\n          </Text>\n          <Text color='textSubtle' fontSize='14px'>{`Your Rate ${farm.quoteToken.symbol}/week`}</Text>\n        </DetailsCont>\n        <DetailsCont>\n          <Text bold fontSize='24px'>\n            {formatTokenEarnings ?? <Skeleton width={60} display='inline-block' />}\n          </Text>\n          <Text color='textSubtle' fontSize='14px'>{`${farm.quoteToken.symbol} Token Earnings`}</Text>\n        </DetailsCont>\n        <DetailsCont\n          style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n          onMouseEnter={() => setActiveSelect(true)}\n          onMouseLeave={() => setActiveSelect(false)}\n        >\n          <Button fullWidth onClick={onPresentWithdraw}>\n            <Text>Claim & Withdraw</Text>\n          </Button>\n        </DetailsCont>\n      </ModalFooter>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@sparkpointio/sparkswap-uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport useStake from 'hooks/useStake'\nimport useUnstake, { useExit } from 'hooks/useUnstake'\nimport { Farm } from 'state/types'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Loading from 'components/Loading'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { calculateUserRewardRate } from '../../../../utils/farmHelpers'\n\ninterface FarmCardActionsProps {\n  userDataReady?: boolean\n  userRate?:string,\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n  farm?: Farm\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  addTokenUrl,\n  farm,\n  userDataReady\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useExit(getAddress(farm.stakingAddresses))\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string, contract?: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      addTokenUrl={addTokenUrl}\n      farm={farm}\n      handleUnstake={handleUnstake}\n      maxStake={stakedBalance}\n    />\n  )\n  const earnings = getBalanceAmount(new BigNumber(farm.userData.earnings)).toFormat(6)\n  const formatStakedBalance = getBalanceAmount(new BigNumber(farm.userData.stakedBalance)).toFormat(6)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      farm={farm}\n      staked={formatStakedBalance}\n      earnings={earnings}\n      max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />\n  )\n\n  const renderStakingButtons = () => {\n    let buttonTxt = 'Deposit'\n    if (farm.hasEnded && stakedBalance.isGreaterThan(0)) {\n      buttonTxt = 'Withdraw'\n    }\n    return (\n      <Button\n        onClick={farm.hasEnded && parseFloat(farm.userData.stakedBalance)? onPresentWithdraw: onPresentDeposit}\n        disabled={(farm.hasEnded && !parseFloat(farm.userData.stakedBalance)) && ['history', 'archived'].some((item) => location.pathname.includes(item))}\n        fullWidth\n      >\n        {userDataReady?\n          buttonTxt\n          : <Loading /> }\n      </Button>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      {/* <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading> */}\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  addTokenUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = (\n  {\n    userDataReady,\n    farm,\n    account,\n    addLiquidityUrl,\n    addTokenUrl,\n  }) => {\n  const { t } = useTranslation()\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n\n  const renderDepositButton = () => {\n    return (\n      <StakeAction\n        userDataReady={userDataReady}\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        addTokenUrl={addTokenUrl}\n        farm={farm}\n      />\n    )\n  }\n\n  return (\n    <Action>\n      {!account ? <UnlockButton mt='8px' width='100%' /> : renderDepositButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport { Button, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useClaim } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { ActionContainer, ActionContent, ActionTitles, Earned } from './styles'\nimport useToast from '../../../../../hooks/useToast'\n\ninterface HarvestActionProps {\n  pid: number\n  stakingContract?: string,\n  tokenRewardSymbol?: string,\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = (\n  {\n    stakingContract, tokenRewardSymbol, pid, userData, userDataReady,\n  }) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useClaim(stakingContract)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  return (\n    <ActionContainer style={{ margin: '10px 0' }}>\n      <ActionTitles>\n        <Text bold textTransform='uppercase' color='secondary' fontSize='12px' pr='4px'>\n          {tokenRewardSymbol}\n        </Text>\n        <Text bold textTransform='uppercase' color='textSubtle' fontSize='12px'>\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {earningsBusd > 0 && (\n            <Balance fontSize='12px' color='textSubtle' decimals={2} value={earningsBusd} unit=' USD' prefix='~' />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Claimed')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: tokenRewardSymbol }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml='4px'\n        >\n          {t('Claim')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  stakingAddress?: string\n  lpInfoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  stakingAddress,\n  lpInfoAddress,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      {/* <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )} */}\n      <StyledLinkExternal href={stakingAddress}>View Staking Contract</StyledLinkExternal>\n      <StyledLinkExternal href={lpInfoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React, { useContext, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes, ThemeContext } from 'styled-components'\nimport { Flex, Skeleton, Text } from '@sparkpointio/sparkswap-uikit'\nimport { Farm } from 'state/types'\nimport { useFarmPrice } from 'hooks/price'\nimport { getFarmV2Apr } from 'utils/apr'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_EXCHANGE_URL, BASE_INFO_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport HarvestAction from '../FarmTable/Actions/HarvestAction'\nimport { getAddress } from '../../../../utils/addressHelpers'\nimport { getBalanceAmount } from '../../../../utils/formatBalance'\nimport ExpandableSectionButton from '../../../../components/ExpandableSectionButton'\nimport DetailsSection from './DetailsSection'\nimport { getBscScanAddressUrl } from '../../../../utils/bscscan'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n    // background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border: 5px solid ${(props) => props.theme.colors.primary};\n    // border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  userDataReady: boolean\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ userDataReady, farm, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n  const formatTotalDeposits = getBalanceAmount(new BigNumber(farm.totalDeposits ?? 0)).toFormat(4)\n  const formatTotalRewardRate = getBalanceAmount(new BigNumber(farm.totalRewardRate ?? 0)).toFormat(4)\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.quoteToken.symbol\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n\n  const stakingAddress = getAddress(farm.stakingAddresses);\n\n  const addLiquidityUrl = `${farm.liquidityUrl ?? BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const AddTokenUrl = `${BASE_EXCHANGE_URL}/#/swap/${farm.token.address[56]}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  const theme = useContext(ThemeContext)\n\n\n  const {LPPrice, rewardPrice} = useFarmPrice(Number(farm.lpTotalSupply), farm.token.address[56], farm.pairToken.address[56], farm.quoteToken.address[56])\n\n  const aprBlackList = [\"0x9f6b80e3867ab402081574e9e0a3be6fdf4ae95b\"]\n  const apr = (aprBlackList.includes(farm.lpAddresses[56]) ? null : getFarmV2Apr(LPPrice, rewardPrice, Number(farm.totalDeposits), Number(farm.rewardRate)) )\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImage={farmImage}\n        farmSymbol={farm.lpSymbol}\n        tokenSymbol={farm.token.symbol}\n        rewardToken={farm.quoteToken.symbol}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n        pairToken={farm.pairToken}\n      />\n      <hr style={{ width: '100%', border: 'none', backgroundColor: theme.colors.primary, height: '2px' }} />\n      {/* {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )} */}\n\n\n      <Flex justifyContent='space-between' style={{ textAlign: 'left' }}>\n        <Text>{t('Total Deposits')}</Text>\n        <Text color='textSubtle'>{farm.totalDeposits ? formatTotalDeposits : <Skeleton width={60} display='inline-block' />}</Text>\n      </Flex>\n      <Flex>\n        <HarvestAction stakingContract={getAddress(farm.stakingAddresses)}\n                       tokenRewardSymbol={earnLabel} userDataReady={userDataReady} userData={farm.userData}\n                       pid={farm.pid} />\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text>{t('APR')}</Text>\n        <Text color='textSubtle'>{(apr === 0 || apr === null ? \"-- \" : apr.toFixed(2))}%</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text>{t('Rate')}</Text>\n        <Text color='textSubtle'>\n          {formatTotalRewardRate ?? <Skeleton width={60} display='inline-block' />} {earnLabel} / week</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text>{t('Duration')}</Text>\n        <Text color='textSubtle'>{farm.remainingDays ??  <Skeleton width={60} display='inline-block' />} Days</Text>\n      </Flex>\n      <CardActionsContainer userDataReady={userDataReady} farm={farm} account={account}\n                            addLiquidityUrl={addLiquidityUrl} addTokenUrl={AddTokenUrl} />\n\n      <DetailsSection\n        removed={removed}\n        stakingAddress={getBscScanAddressUrl(stakingAddress)}\n        lpInfoAddress={`${farm.infoURL?? BASE_INFO_URL}/${lpAddress}`}\n        lpLabel={lpLabel}\n      />\n\n      {/* <Divider />\n       <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getBscScanAddressUrl(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID])}\n          infoAddress={`https://pancakeswap.info/pool/${lpAddress}`}\n          totalValueFormatted={farm.totalDeposits}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n      <Flex justifyContent='center'>\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '56') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Binance Smart Chain')}</Text>)}\n         {Object.prototype.hasOwnProperty.call(farm.lpAddresses, '1') && (<Text color=\"textSubtle\" fontSize=\"14px\">{t('This will only work on Ethereum Blockchain')}</Text>)}\n      </Flex> */}\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const mainTokenAddress = quoteTokenAddress;\n  const pairTokenAddress = tokenAddress\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ mainTokenAddress, pairTokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <div>\n      {t('The multiplier represents the amount of CAKE rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 1 CAKE per block, a 40x farm would be getting 40 CAKE per block.')}\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { Contract } from 'web3-eth-contract'\nimport { BigNumber } from 'bignumber.js'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20, useLPStakingContract } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\nimport { getAddress } from '../../../../../utils/addressHelpers'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  token,\n  pairToken,\n  userDataReady,\n  stakingAddresses,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: token.address,\n    pairTokenAddress: pairToken.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string, contract: Contract) => {\n    await onStake(amount, contract)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const lpStakingAddress = getAddress(stakingAddresses)\n  const lpStakingContract = useLPStakingContract(lpStakingAddress)\n  const { onApprove } = useApprove(lpContract, lpStakingContract)\n  const dispatch = useAppDispatch()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.background};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    mainTokenAddress: farm.token.address,\n    pairTokenAddress: farm.pairToken.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = getBscScanAddressUrl(lpAddress)\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#FFFFFF;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4C394.1,161,391,97.2,390.9,94.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmDark);\nexport default __webpack_public_path__ + \"static/media/farm-dark.781ef184.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","var _style, _g, _g2, _g3, _g4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFarmLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      enableBackground: \"new 0 0 500 500\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#727071;}\\n\\t.st1{fill:#39BEEC;}\\n\\t.st2{fill:#1B60A3;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_3\"\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4_1_\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2_1_\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M266,330.6v-95.2c22.1-1.5,61.8-8.1,89.1-35.4c39-39,35.9-102.8,35.8-105.5c-0.4-7.9-6.8-14.2-14.7-14.7 c-2.7-0.2-66.5-3.2-105.4,35.7c-4.1,4.1-7.8,8.6-11,13.2c-5.7-22.9-16.4-48.5-36.4-68.5c-46.5-46.5-123-42.8-126.2-42.7 c-7.9,0.4-14.2,6.8-14.7,14.7c-0.2,3.2-3.8,79.7,42.7,126.2c34.1,34.1,84.2,41.2,109.9,42.5v129.7c5.1-0.6,10.3-0.9,15.5-0.9 C255.7,329.8,260.9,330.1,266,330.6L266,330.6z\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1_1_\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st0\",\n    cx: 252.5,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st1\",\n    cx: 363.4,\n    cy: 368.5,\n    r: 109.4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"st2\",\n    cx: 137.3,\n    cy: 368.5,\n    r: 109.4\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFarmLight);\nexport default __webpack_public_path__ + \"static/media/farm-light.f8d41a65.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useLocation, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Image, RowType, Toggle } from '@pancakeswap/uikit'\nimport { Text } from '@sparkpointio/sparkswap-uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport useMedia from 'use-media'\nimport { SvgIcon } from '@material-ui/core'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport { ReactComponent as FarmsDarkLogo } from './components/assets/farm-dark.svg'\nimport { ReactComponent as FarmsLightLogo } from './components/assets/farm-light.svg'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.CARD, { localStorageKey: 'sparkswap_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('earned')\n  const theme = useContext(ThemeContext)\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n  const isMobile = useMedia({ maxWidth: 500 })\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && !farm.hasEnded && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.hasEnded && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const apr = isActive ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity) : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n            || latinise(farm.quoteToken.symbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        // case 'promoted':\n        //   return orderBy(\n        //     farms,\n        //     (farm: FarmWithStakedValue) => (farm.isPromoted ?? 0),\n        //     'desc',\n        //   )\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'duration':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.remainingDays ? Number(farm.remainingDays) : 0),\n            'desc',\n          )\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  const [activeTab, setActiveTab] = useState(0)\n  const handleItemClick = (index: number) => setActiveTab(index)\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n    // Uncomment this if !comingsoon\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account}\n                        removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account}\n                        removed />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account}\n                        removed />\n            ))}\n          </Route>\n          {/* {farmsList(activeFarms).map((farm) => ( */}\n          {/*  <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} /> */}\n          {/* ))} */}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const renderInactiveContent = (): JSX.Element => {\n\n    return (\n      <div>\n        <div style={{ margin: '20px' }}>\n          <Text fontSize='24px' bold> Inactive Liquidity Pools </Text>\n        </div>\n\n        <FlexLayout>\n          {farmsList(inactiveFarms).map((farm) => (\n            <FarmCard userDataReady={userDataReady} key={farm.pid} farm={farm} cakePrice={cakePrice} account={account}\n                      removed />\n          ))}\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <PageHeader background={theme.card.background}>\n        <Flex alignItems='center' justifyContent='space-between' flexDirection={['column', null, 'row']}\n              style={isMobile ? { flexDirection: 'column-reverse' } : { minHeight: '20vh', marginLeft: '-16px' }}\n              padding='24px'>\n          <Flex flexDirection='column' mr={['8px', 0]}>\n            <Text color='text' fontSize='60px' bold marginBottom='10px'>\n              <span style={{ borderBottom: `2px solid ${theme.colors.primary}` }}>Farms</span>\n            </Text>\n            <Text color='text' style={isMobile ? { fontSize: '17px' } : { fontSize: '27px' }}>\n              Earn SRK, SFUEL and other tokens by staking LP tokens!\n            </Text>\n          </Flex>\n          <Flex style={isMobile ? {\n            fontSize: '150px',\n            margin: 'auto',\n            marginTop: '20px',\n            marginBottom: '20px',\n          } : { fontSize: '240px', marginRight: '-118px' }}>\n            <SvgIcon component={theme.isDark ? FarmsDarkLogo : FarmsLightLogo} viewBox='0  0 384 512'\n                     style={isMobile ? { width: '200px' } : { width: '500px' }} fontSize='inherit' />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            {/* <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} /> */}\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale='sm' />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform='uppercase'>{t('Sort by')}</Text>\n              <Select\n                options={[\n                  // {\n                  //   label: t('Hot'),\n                  //   value: 'hot',\n                  // },\n                  // {\n                  //   label: t('APR'),\n                  //   value: 'apr',\n                  // },\n                  // {\n                  //   label: t('Multiplier'),\n                  //   value: 'multiplier',\n                  // },\n                  // {\n                  //   label: t('Promoted'),\n                  //   value: 'promoted',\n                  // },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Duration'),\n                    value: 'duration',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform='uppercase'>{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder='Search Farms' />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n\n        {renderContent()}\n        <div ref={loadMoreRef} />\n\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}